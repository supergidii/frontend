{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antoo\\\\Desktop\\\\betting\\\\betsite\\\\frontend\\\\src\\\\components\\\\Aviator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\n\n// Set the base URL for API calls (env override, default to local backend)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\nconst Aviator = () => {\n  _s();\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCashingOut, setIsCashingOut] = useState(false);\n  const [hasLocalActiveBet, setHasLocalActiveBet] = useState(false);\n  const [activeBets, setActiveBets] = useState([]);\n  const gameInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n  const gameTimeout = useRef(null);\n  const isRunningRef = useRef(false);\n  const lastUpdateTime = useRef(0);\n  const isBetPlacedRef = useRef(false);\n  const hasLocalActiveBetRef = useRef(false);\n\n  // API calls\n  const fetchBalance = async () => {\n    try {\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/?user_id=player_1`);\n      console.log('Balance response:', response.data);\n      setBalance(response.data.balance);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching balance:', error);\n      console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setBalance(1000);\n    }\n  };\n  const fetchCurrentGame = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/realtime/`);\n      const gameData = response.data;\n      const backendStatus = gameData.status; // 'waiting' | 'active' | 'crashed'\n      const effectivePhase = gameData.phase || (backendStatus === 'active' ? 'playing' : backendStatus);\n\n      // Debug logging\n      console.log('Backend data:', {\n        status: backendStatus,\n        phase: gameData.phase,\n        effectivePhase,\n        time_remaining: gameData.time_remaining,\n        round_number: gameData.round_number,\n        current_multiplier: gameData.current_multiplier\n      });\n\n      // Check if this is a new round\n      const isNewRound = gameData.round_number !== roundNumber;\n\n      // Only update state if there are actual changes to prevent unnecessary re-renders\n      if (gameData.round_number !== roundNumber) {\n        setRoundNumber(gameData.round_number);\n      }\n      if (Number(gameData.crash_point) !== crashPoint) {\n        setCrashPoint(Number(gameData.crash_point) || 1.5);\n      }\n\n      // Update game state only if it actually changed\n      let newGameState = gameState;\n      if (effectivePhase === 'waiting') {\n        // Always transition to waiting state to ensure countdown is visible\n        newGameState = 'waiting';\n        if (gameState !== 'waiting') {\n          console.log('Transitioning to waiting state, time_remaining:', gameData.time_remaining);\n          setGameState('waiting');\n        }\n        setMultiplier(1.00);\n        if (typeof gameData.time_remaining === 'number') {\n          const newTimeLeft = Math.max(0, Math.ceil(gameData.time_remaining));\n          if (newTimeLeft !== timeLeft) {\n            console.log('Updating countdown:', timeLeft, '->', newTimeLeft);\n            setTimeLeft(newTimeLeft);\n          }\n        }\n        if (isNewRound) {\n          setIsBetPlaced(false);\n          setHasLocalActiveBet(false);\n          await checkActiveBet();\n        }\n      } else if ((effectivePhase === 'playing' || effectivePhase === 'starting') && gameState !== 'playing') {\n        newGameState = 'playing';\n        setGameState('playing');\n        if (typeof gameData.current_multiplier === 'number') {\n          setMultiplier(gameData.current_multiplier);\n        }\n        if (typeof gameData.time_remaining === 'number') {\n          setTimeLeft(Math.max(0, Math.ceil(gameData.time_remaining)));\n        }\n\n        // Always check for active bet when game becomes active\n        await checkActiveBet();\n      } else if ((gameData.game_crashed || effectivePhase === 'crashed') && gameState !== 'crashed') {\n        newGameState = 'crashed';\n        setGameState('crashed');\n        setMultiplier(Number(gameData.crashed_at) || Number(gameData.crash_point) || 1.5);\n\n        // Reset bet state when game crashes\n        setIsBetPlaced(false);\n        setHasLocalActiveBet(false);\n      }\n\n      // Update multiplier and time only during active gameplay to prevent flickering\n      if (newGameState === 'playing' || effectivePhase === 'playing') {\n        const now = Date.now();\n        // Debounce updates to prevent rapid re-renders\n        if (now - lastUpdateTime.current > 100) {\n          // Only update if multiplier actually changed to prevent unnecessary re-renders\n          if (typeof gameData.current_multiplier === 'number' && Math.abs(gameData.current_multiplier - multiplier) > 0.001) {\n            setMultiplier(gameData.current_multiplier);\n          }\n          if (typeof gameData.time_remaining === 'number' && Math.abs(gameData.time_remaining - timeLeft) > 0.1) {\n            setTimeLeft(Math.max(0, Math.ceil(gameData.time_remaining)));\n          }\n          lastUpdateTime.current = now;\n        }\n      }\n      return gameData;\n    } catch (error) {\n      console.error('Error fetching real-time game state:', error);\n      return null;\n    }\n  };\n  const fetchGameHistory = async () => {\n    try {\n      var _response$data;\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\n      console.log('Game history response:', response.data);\n      console.log('Game history response type:', typeof response.data);\n      console.log('Game history response length:', (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length);\n\n      // Ensure we extract numeric crash points and filter out invalid values\n      const crashPoints = response.data.map(game => Number(game.crash_point)).filter(point => !isNaN(point) && point > 0);\n      console.log('Processed crash points:', crashPoints);\n      setGameHistory(crashPoints);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching game history:', error);\n      console.error('Error details:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      // Set empty array as fallback\n      setGameHistory([]);\n    }\n  };\n  const fetchBetHistory = async () => {\n    try {\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\n      console.log('Bet history response:', response.data);\n      setBetHistory(response.data);\n    } catch (error) {\n      var _error$response3;\n      console.error('Error fetching bet history:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n    }\n  };\n\n  // Check if user has an active bet in the current round - simplified to prevent blinking\n  const checkActiveBet = async () => {\n    // Only check on new rounds or when explicitly needed\n    if (gameState === 'playing' && hasLocalActiveBetRef.current) {\n      // Don't check during active gameplay to prevent button blinking\n      return true;\n    }\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/check-active-bet/?user_id=player_1&round_number=${roundNumber}`);\n      const hasActiveBet = response.data.has_active_bet;\n      setIsBetPlaced(hasActiveBet);\n      if (hasActiveBet) {\n        setHasLocalActiveBet(true);\n      } else if (gameState !== 'playing') {\n        setHasLocalActiveBet(false);\n      }\n      return hasActiveBet;\n    } catch (error) {\n      console.error('Error checking active bet:', error);\n      // Don't change state on errors during gameplay\n      if (gameState !== 'playing') {\n        setIsBetPlaced(false);\n        setHasLocalActiveBet(false);\n        return false;\n      }\n      return hasLocalActiveBetRef.current;\n    }\n  };\n\n  // Place bet - only allowed during waiting phase\n  const placeBet = async () => {\n    // Validate bet placement conditions\n    if (gameState !== 'waiting') {\n      setError('Bets can only be placed during waiting phase');\n      return;\n    }\n    if (isBetPlaced) {\n      setError('You already have an active bet in this round');\n      return;\n    }\n    if (balance < betAmount) {\n      setError('Insufficient balance');\n      return;\n    }\n    try {\n      var _response$data2, _response$data2$bet;\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\n        amount: betAmount,\n        user_id: 'player_1' // Simple user ID for anonymous betting\n      });\n      setBalance(response.data.balance);\n      setIsBetPlaced(true);\n      setHasLocalActiveBet(true);\n      setError(null);\n      if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && (_response$data2$bet = _response$data2.bet) !== null && _response$data2$bet !== void 0 && _response$data2$bet.id) {\n        setActiveBets(prev => [{\n          id: response.data.bet.id,\n          amount: Number(response.data.bet.amount)\n        }, ...prev]);\n      } else {\n        // Fallback: refresh slips from backend\n        try {\n          var _r$data;\n          const r = await axios.get(`${API_BASE_URL}/api/aviator/active-bets/?user_id=player_1&round_number=${roundNumber}`);\n          const list = (((_r$data = r.data) === null || _r$data === void 0 ? void 0 : _r$data.bets) || []).map(b => ({\n            id: b.id,\n            amount: Number(b.amount)\n          }));\n          setActiveBets(list);\n        } catch (_) {}\n      }\n\n      // Verify the bet was placed successfully\n      const hasActiveBet = await checkActiveBet();\n      if (!hasActiveBet) {\n        setIsBetPlaced(false);\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to place bet');\n      console.error('Error placing bet:', error);\n      // Ensure bet state is false if placement failed\n      setIsBetPlaced(false);\n      setHasLocalActiveBet(false);\n    }\n  };\n\n  // Cashout - only allowed when bet is placed and game is active\n  const cashout = async (specificBetId = null) => {\n    // Prevent multiple rapid clicks\n    if (isCashingOut) {\n      return;\n    }\n\n    // Validate cashout conditions\n    if (!isBetPlaced && activeBets.length === 0) {\n      setError('No active bet to cashout');\n      return;\n    }\n    if (gameState !== 'playing') {\n      setError('Can only cashout during active gameplay');\n      return;\n    }\n    setIsCashingOut(true);\n    try {\n      var _response$data3, _response$data3$bet;\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\n        round_number: roundNumber,\n        multiplier: multiplier,\n        user_id: 'player_1',\n        // Simple user ID for anonymous betting\n        bet_id: specificBetId\n      });\n      setBalance(response.data.balance);\n      if ((_response$data3 = response.data) !== null && _response$data3 !== void 0 && (_response$data3$bet = _response$data3.bet) !== null && _response$data3$bet !== void 0 && _response$data3$bet.id) {\n        setActiveBets(prev => prev.filter(b => b.id !== response.data.bet.id));\n      }\n      const remaining = activeBets.length - 1;\n      setIsBetPlaced(remaining > 0);\n      setHasLocalActiveBet(remaining > 0);\n      setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n      setError(null);\n\n      // Refresh balance to ensure it's up to date\n      await fetchBalance();\n\n      // Verify bet state was updated\n      await checkActiveBet();\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      setError(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to cashout');\n      console.error('Error cashing out:', error);\n    } finally {\n      setIsCashingOut(false);\n    }\n  };\n\n  // Start new game - just sync with backend\n  const startNewGame = async () => {\n    // Reset bet state for new round\n    setIsBetPlaced(false);\n\n    // Ensure we're in waiting state to show countdown\n    setGameState('waiting');\n    setMultiplier(1.00);\n\n    // Sync with backend to get latest game state and countdown time\n    try {\n      const gameData = await fetchCurrentGame();\n      if (gameData && typeof gameData.time_remaining === 'number') {\n        setTimeLeft(Math.max(0, Math.ceil(gameData.time_remaining)));\n      }\n    } catch (error) {\n      console.error('Error syncing with backend:', error);\n    }\n  };\n\n  // Sync with backend instead of local simulation\n  const syncWithBackend = async () => {\n    try {\n      await fetchCurrentGame();\n    } catch (error) {\n      console.error('Error syncing with backend:', error);\n    }\n  };\n\n  // Bet controls\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n  const addChip = amount => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  const clearBet = () => {\n    setBetAmount(1);\n  };\n\n  // Handle game crash\n  const handleGameCrash = async () => {\n    // Reset bet state when game crashes\n    setIsBetPlaced(false);\n    setHasLocalActiveBet(false);\n\n    // Update bet history if there was an active bet\n    if (isBetPlaced) {\n      await fetchBetHistory();\n    }\n\n    // Backend polling will handle state transitions and countdown automatically\n  };\n\n  // Effects\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      // Handle game crash - backend polling will handle the next round automatically\n      handleGameCrash();\n    }\n  }, [gameState]);\n\n  // Only check bet state when game becomes active, not during gameplay\n  useEffect(() => {\n    if (gameState === 'playing') {\n      // Check bet state only once when game becomes active\n      const immediateCheck = async () => {\n        await checkActiveBet();\n      };\n      immediateCheck();\n    }\n  }, [gameState]);\n\n  // Keep a ref in sync with the state to make race-free decisions during polling\n  useEffect(() => {\n    isBetPlacedRef.current = isBetPlaced;\n  }, [isBetPlaced]);\n  useEffect(() => {\n    hasLocalActiveBetRef.current = hasLocalActiveBet;\n  }, [hasLocalActiveBet]);\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n      if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates\n  useEffect(() => {\n    console.log('Aviator component mounted - starting initialization');\n    setIsLoading(true);\n    const initializeComponent = async () => {\n      try {\n        console.log('Starting API calls...');\n        await Promise.all([fetchBalance(), fetchCurrentGame().catch(() => undefined), fetchGameHistory(), fetchBetHistory()]);\n\n        // Check for active bet after getting current game\n        if (roundNumber > 0) {\n          await checkActiveBet();\n        }\n        console.log('All API calls completed - server connected');\n      } catch (error) {\n        console.error('Error during initialization:', error);\n      } finally {\n        setIsLoading(false);\n        console.log('Component initialization complete - ready for countdown');\n      }\n    };\n    initializeComponent();\n\n    // Poll backend for real-time updates - this will handle countdown automatically\n    if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    // Poll every 100ms for faster real-time updates including countdown\n    gameCheckInterval.current = setInterval(() => {\n      // Poll to get latest real-time state from backend (including countdown)\n      fetchCurrentGame().catch(error => {\n        console.error('Polling error:', error);\n      });\n    }, 100);\n    return () => {\n      console.log('Cleaning up Aviator component');\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []); // Removed gameState dependency\n\n  console.log('Rendering Aviator component, gameState:', gameState, 'timeLeft:', timeLeft, 'isLoading:', isLoading);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Aviator Game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connecting to backend...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aviator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Aviator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-display\",\n        children: [\"Balance: $\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"error-close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"API Base: \", API_BASE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Game State: \", gameState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Round: #\", roundNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Game History Count: \", gameHistory.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Bet History Count: \", betHistory.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Current Game: \", currentGame ? `Round ${currentGame.round_number}` : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiplier-display\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: [gameState === 'waiting' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"waiting-state\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aviator-plane-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `aviator-plane waiting`,\n                  children: \"\\u2708\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Next game in \", timeLeft, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"countdown-circle\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"countdown-number\",\n                  children: timeLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"round-info\",\n                children: [\"Round #\", roundNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this)\n          }, \"waiting\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"playing-state\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aviator-plane-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `aviator-plane flying`,\n                  children: \"\\u2708\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"multiplier-value\",\n                children: [multiplier.toFixed(2), \"x\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-status\",\n                children: \"Flying!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this), Number(crashPoint) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"crash-point\",\n                children: [\"Target: \", (Number(crashPoint) || 1.0).toFixed(2), \"x\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"round-info\",\n                children: [\"Round #\", roundNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)\n          }, \"playing\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"crashed-state\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aviator-plane-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `aviator-plane crashed`,\n                  children: \"\\uD83D\\uDCA5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"crash-text\",\n                children: [\"CRASHED AT \", (Number(crashPoint) || 1.0).toFixed(2), \"x\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-status\",\n                children: \"Game Over!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"round-info\",\n                children: [\"Round #\", roundNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"backend-info\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Predetermined crash point from backend\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)\n          }, \"crashed\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-amount-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: halfBet,\n            className: \"bet-btn\",\n            children: \"\\xBD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetBet,\n            className: \"bet-btn\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doubleBet,\n            className: \"bet-btn\",\n            children: \"2\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: betAmount,\n            onChange: e => setBetAmount(Math.max(1, parseInt(e.target.value) || 1)),\n            min: \"1\",\n            max: balance,\n            className: \"bet-amount-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-chips\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(1),\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(5),\n            children: \"+5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(10),\n            children: \"+10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(50),\n            children: \"+50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(100),\n            children: \"+100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip outline\",\n            onClick: setMaxBet,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip outline\",\n            onClick: clearBet,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [!hasLocalActiveBet && gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: placeBet,\n            className: \"place-bet-btn\",\n            children: [\"Place Bet $\", betAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), hasLocalActiveBet && gameState !== 'crashed' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cashout,\n            className: \"cashout-btn\",\n            disabled: gameState !== 'playing' || isCashingOut,\n            style: {\n              pointerEvents: 'auto'\n            },\n            children: gameState !== 'playing' ? 'Cashout (waiting for takeoff)' : isCashingOut ? 'Cashing Out...' : `Cashout $${(betAmount * multiplier).toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), !hasLocalActiveBet && gameState !== 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: true,\n            className: \"disabled-btn\",\n            children: gameState === 'playing' ? 'Game in progress' : 'Waiting for next round'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), hasLocalActiveBet && gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bet-locked-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"locked-badge\",\n              children: [\"Bet locked for Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Waiting for game to start...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this), activeBets.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bet-slips\",\n            children: activeBets.map(b => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bet-slip-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Stake: $\", Number(b.amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cashout-btn\",\n                disabled: gameState !== 'playing' || isCashingOut,\n                onClick: () => cashout(b.id),\n                children: gameState !== 'playing' ? 'Cashout (locked)' : `Cashout $${(Number(b.amount) * multiplier).toFixed(2)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this)]\n            }, b.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-line\",\n            children: hasLocalActiveBet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Current value: $\", (betAmount * multiplier).toFixed(2), \" at \", multiplier.toFixed(2), \"x\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Potential at 2.00x: $\", (betAmount * 2.00).toFixed(2)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-status ${hasLocalActiveBet ? 'active' : 'idle'}`,\n            children: hasLocalActiveBet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Active in Round #\", roundNumber, \" - $\", betAmount, \" locked\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"No active bet - Place bet during waiting phase\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this), gameHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-empty\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No game history yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Games will appear here after they crash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-grid\",\n        children: gameHistory.map((result, index) => {\n          const numericResult = Number(result) || 1.0;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `history-item ${numericResult >= 2 ? 'green' : numericResult >= 1.5 ? 'orange' : 'red'}`,\n            children: [numericResult.toFixed(2), \"x\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bet-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Bet History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-history-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Payout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), betHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-empty\",\n          children: \"No bets yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this), betHistory.map((b, i) => {\n          var _b$game;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"#\", b.round || ((_b$game = b.game) === null || _b$game === void 0 ? void 0 : _b$game.round_number)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.payout).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profit\",\n              children: `${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Place your bet during the waiting phase (before takeoff)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Once bet is placed, your stake is locked for that round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Watch the multiplier increase in real-time during flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click \\\"Cashout\\\" before the plane crashes to win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"If the plane crashes before you cashout, you lose your bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"After each round, you must place a new bet manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backend-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Real-time Multiplier:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), \" Increases by 0.05x every second during active gameplay\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n};\n_s(Aviator, \"tERedwaK2oODnC76Umg4QlwWu+w=\");\n_c = Aviator;\nexport default Aviator;\nvar _c;\n$RefreshReg$(_c, \"Aviator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Aviator","_s","gameState","setGameState","multiplier","setMultiplier","betAmount","setBetAmount","balance","setBalance","isBetPlaced","setIsBetPlaced","gameHistory","setGameHistory","timeLeft","setTimeLeft","crashPoint","setCrashPoint","roundNumber","setRoundNumber","betHistory","setBetHistory","currentGame","setCurrentGame","error","setError","isLoading","setIsLoading","isCashingOut","setIsCashingOut","hasLocalActiveBet","setHasLocalActiveBet","activeBets","setActiveBets","gameInterval","gameCheckInterval","gameTimeout","isRunningRef","lastUpdateTime","isBetPlacedRef","hasLocalActiveBetRef","fetchBalance","console","log","response","get","data","_error$response","fetchCurrentGame","gameData","backendStatus","status","effectivePhase","phase","time_remaining","round_number","current_multiplier","isNewRound","Number","crash_point","newGameState","newTimeLeft","Math","max","ceil","checkActiveBet","game_crashed","crashed_at","now","Date","current","abs","fetchGameHistory","_response$data","length","crashPoints","map","game","filter","point","isNaN","_error$response2","fetchBetHistory","_error$response3","hasActiveBet","has_active_bet","placeBet","_response$data2","_response$data2$bet","post","amount","user_id","bet","id","prev","_r$data","r","list","bets","b","_","_error$response4","_error$response4$data","cashout","specificBetId","_response$data3","_response$data3$bet","bet_id","remaining","slice","_error$response5","_error$response5$data","startNewGame","syncWithBackend","doubleBet","halfBet","floor","resetBet","addChip","next","min","setMaxBet","clearBet","handleGameCrash","immediateCheck","clearInterval","countdownInterval","clearTimeout","initializeComponent","Promise","all","catch","undefined","setInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","mode","div","initial","opacity","scale","animate","exit","type","value","onChange","e","parseInt","target","disabled","style","pointerEvents","result","index","numericResult","i","_b$game","round","cashout_multiplier","cashoutMultiplier","payout","profit","_c","$RefreshReg$"],"sources":["C:/Users/Antoo/Desktop/betting/betsite/frontend/src/components/Aviator.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\n\n// Set the base URL for API calls (env override, default to local backend)\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\nconst Aviator = () => {\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCashingOut, setIsCashingOut] = useState(false);\n  const [hasLocalActiveBet, setHasLocalActiveBet] = useState(false);\n  const [activeBets, setActiveBets] = useState([]);\n  \n  const gameInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n  const gameTimeout = useRef(null);\n  const isRunningRef = useRef(false);\n  const lastUpdateTime = useRef(0);\n  const isBetPlacedRef = useRef(false);\n  const hasLocalActiveBetRef = useRef(false);\n\n  // API calls\n  const fetchBalance = async () => {\n    try {\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/?user_id=player_1`);\n      console.log('Balance response:', response.data);\n      setBalance(response.data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      console.error('Error details:', error.response?.data);\n      setBalance(1000);\n    }\n  };\n\n  const fetchCurrentGame = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/realtime/`);\n      const gameData = response.data;\n      const backendStatus = gameData.status; // 'waiting' | 'active' | 'crashed'\n      const effectivePhase = gameData.phase || (backendStatus === 'active' ? 'playing' : backendStatus);\n      \n      // Debug logging\n      console.log('Backend data:', {\n        status: backendStatus,\n        phase: gameData.phase,\n        effectivePhase,\n        time_remaining: gameData.time_remaining,\n        round_number: gameData.round_number,\n        current_multiplier: gameData.current_multiplier\n      });\n      \n      // Check if this is a new round\n      const isNewRound = gameData.round_number !== roundNumber;\n      \n      // Only update state if there are actual changes to prevent unnecessary re-renders\n      if (gameData.round_number !== roundNumber) {\n        setRoundNumber(gameData.round_number);\n      }\n      \n      if (Number(gameData.crash_point) !== crashPoint) {\n        setCrashPoint(Number(gameData.crash_point) || 1.5);\n      }\n      \n      // Update game state only if it actually changed\n      let newGameState = gameState;\n      if (effectivePhase === 'waiting') {\n        // Always transition to waiting state to ensure countdown is visible\n        newGameState = 'waiting';\n        if (gameState !== 'waiting') {\n          console.log('Transitioning to waiting state, time_remaining:', gameData.time_remaining);\n          setGameState('waiting');\n        }\n        setMultiplier(1.00);\n        if (typeof gameData.time_remaining === 'number') {\n          const newTimeLeft = Math.max(0, Math.ceil(gameData.time_remaining));\n          if (newTimeLeft !== timeLeft) {\n            console.log('Updating countdown:', timeLeft, '->', newTimeLeft);\n            setTimeLeft(newTimeLeft);\n          }\n        }\n        \n        if (isNewRound) {\n          setIsBetPlaced(false);\n          setHasLocalActiveBet(false);\n          await checkActiveBet();\n        }\n      } else if ((effectivePhase === 'playing' || effectivePhase === 'starting') && gameState !== 'playing') {\n        newGameState = 'playing';\n        setGameState('playing');\n        if (typeof gameData.current_multiplier === 'number') {\n          setMultiplier(gameData.current_multiplier);\n        }\n        if (typeof gameData.time_remaining === 'number') {\n          setTimeLeft(Math.max(0, Math.ceil(gameData.time_remaining)));\n        }\n        \n        // Always check for active bet when game becomes active\n        await checkActiveBet();\n      } else if ((gameData.game_crashed || effectivePhase === 'crashed') && gameState !== 'crashed') {\n        newGameState = 'crashed';\n        setGameState('crashed');\n        setMultiplier(Number(gameData.crashed_at) || Number(gameData.crash_point) || 1.5);\n        \n        // Reset bet state when game crashes\n        setIsBetPlaced(false);\n        setHasLocalActiveBet(false);\n      }\n      \n      // Update multiplier and time only during active gameplay to prevent flickering\n      if (newGameState === 'playing' || effectivePhase === 'playing') {\n        const now = Date.now();\n        // Debounce updates to prevent rapid re-renders\n        if (now - lastUpdateTime.current > 100) {\n          // Only update if multiplier actually changed to prevent unnecessary re-renders\n          if (typeof gameData.current_multiplier === 'number' && Math.abs(gameData.current_multiplier - multiplier) > 0.001) {\n            setMultiplier(gameData.current_multiplier);\n          }\n          if (typeof gameData.time_remaining === 'number' && Math.abs(gameData.time_remaining - timeLeft) > 0.1) {\n            setTimeLeft(Math.max(0, Math.ceil(gameData.time_remaining)));\n          }\n          lastUpdateTime.current = now;\n        }\n      }\n      \n      return gameData;\n    } catch (error) {\n      console.error('Error fetching real-time game state:', error);\n      return null;\n    }\n  };\n\n  const fetchGameHistory = async () => {\n    try {\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\n      console.log('Game history response:', response.data);\n      console.log('Game history response type:', typeof response.data);\n      console.log('Game history response length:', response.data?.length);\n      \n      // Ensure we extract numeric crash points and filter out invalid values\n      const crashPoints = response.data\n        .map(game => Number(game.crash_point))\n        .filter(point => !isNaN(point) && point > 0);\n      \n      console.log('Processed crash points:', crashPoints);\n      setGameHistory(crashPoints);\n    } catch (error) {\n      console.error('Error fetching game history:', error);\n      console.error('Error details:', error.response?.data);\n      // Set empty array as fallback\n      setGameHistory([]);\n    }\n  };\n\n  const fetchBetHistory = async () => {\n    try {\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\n      console.log('Bet history response:', response.data);\n      setBetHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching bet history:', error);\n      console.error('Error details:', error.response?.data);\n    }\n  };\n\n  // Check if user has an active bet in the current round - simplified to prevent blinking\n  const checkActiveBet = async () => {\n    // Only check on new rounds or when explicitly needed\n    if (gameState === 'playing' && hasLocalActiveBetRef.current) {\n      // Don't check during active gameplay to prevent button blinking\n      return true;\n    }\n    \n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/check-active-bet/?user_id=player_1&round_number=${roundNumber}`);\n      const hasActiveBet = response.data.has_active_bet;\n      setIsBetPlaced(hasActiveBet);\n      if (hasActiveBet) {\n        setHasLocalActiveBet(true);\n      } else if (gameState !== 'playing') {\n        setHasLocalActiveBet(false);\n      }\n      return hasActiveBet;\n    } catch (error) {\n      console.error('Error checking active bet:', error);\n      // Don't change state on errors during gameplay\n      if (gameState !== 'playing') {\n        setIsBetPlaced(false);\n        setHasLocalActiveBet(false);\n        return false;\n      }\n      return hasLocalActiveBetRef.current;\n    }\n  };\n\n  // Place bet - only allowed during waiting phase\n  const placeBet = async () => {\n    // Validate bet placement conditions\n    if (gameState !== 'waiting') {\n      setError('Bets can only be placed during waiting phase');\n      return;\n    }\n    \n    if (isBetPlaced) {\n      setError('You already have an active bet in this round');\n      return;\n    }\n    \n    if (balance < betAmount) {\n      setError('Insufficient balance');\n      return;\n    }\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\n        amount: betAmount,\n        user_id: 'player_1'  // Simple user ID for anonymous betting\n      });\n      \n      setBalance(response.data.balance);\n      setIsBetPlaced(true);\n      setHasLocalActiveBet(true);\n      setError(null);\n      if (response.data?.bet?.id) {\n        setActiveBets((prev) => [{ id: response.data.bet.id, amount: Number(response.data.bet.amount) }, ...prev]);\n      }\n      else {\n        // Fallback: refresh slips from backend\n        try {\n          const r = await axios.get(`${API_BASE_URL}/api/aviator/active-bets/?user_id=player_1&round_number=${roundNumber}`);\n          const list = (r.data?.bets || []).map(b => ({ id: b.id, amount: Number(b.amount) }));\n          setActiveBets(list);\n        } catch (_) {}\n      }\n      \n      // Verify the bet was placed successfully\n      const hasActiveBet = await checkActiveBet();\n      if (!hasActiveBet) {\n        setIsBetPlaced(false);\n      }\n    } catch (error) {\n      setError(error.response?.data?.error || 'Failed to place bet');\n      console.error('Error placing bet:', error);\n      // Ensure bet state is false if placement failed\n      setIsBetPlaced(false);\n      setHasLocalActiveBet(false);\n    }\n  };\n\n  // Cashout - only allowed when bet is placed and game is active\n  const cashout = async (specificBetId = null) => {\n    // Prevent multiple rapid clicks\n    if (isCashingOut) {\n      return;\n    }\n    \n    // Validate cashout conditions\n    if (!isBetPlaced && activeBets.length === 0) {\n      setError('No active bet to cashout');\n      return;\n    }\n    \n    if (gameState !== 'playing') {\n      setError('Can only cashout during active gameplay');\n      return;\n    }\n    \n    setIsCashingOut(true);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\n        round_number: roundNumber,\n        multiplier: multiplier,\n        user_id: 'player_1',  // Simple user ID for anonymous betting\n        bet_id: specificBetId\n      });\n      \n      setBalance(response.data.balance);\n      if (response.data?.bet?.id) {\n        setActiveBets((prev) => prev.filter(b => b.id !== response.data.bet.id));\n      }\n      const remaining = activeBets.length - 1;\n      setIsBetPlaced(remaining > 0);\n      setHasLocalActiveBet(remaining > 0);\n      setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n      setError(null);\n      \n      // Refresh balance to ensure it's up to date\n      await fetchBalance();\n      \n      // Verify bet state was updated\n      await checkActiveBet();\n    } catch (error) {\n      setError(error.response?.data?.error || 'Failed to cashout');\n      console.error('Error cashing out:', error);\n    } finally {\n      setIsCashingOut(false);\n    }\n  };\n\n  // Start new game - just sync with backend\n  const startNewGame = async () => {\n    // Reset bet state for new round\n    setIsBetPlaced(false);\n    \n    // Ensure we're in waiting state to show countdown\n    setGameState('waiting');\n    setMultiplier(1.00);\n    \n    // Sync with backend to get latest game state and countdown time\n    try {\n      const gameData = await fetchCurrentGame();\n      if (gameData && typeof gameData.time_remaining === 'number') {\n        setTimeLeft(Math.max(0, Math.ceil(gameData.time_remaining)));\n      }\n    } catch (error) {\n      console.error('Error syncing with backend:', error);\n    }\n  };\n\n  // Sync with backend instead of local simulation\n  const syncWithBackend = async () => {\n    try {\n      await fetchCurrentGame();\n    } catch (error) {\n      console.error('Error syncing with backend:', error);\n    }\n  };\n\n  // Bet controls\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n\n  const addChip = (amount) => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  \n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  \n  const clearBet = () => {\n    setBetAmount(1);\n  };\n  \n\n  // Handle game crash\n  const handleGameCrash = async () => {\n    // Reset bet state when game crashes\n    setIsBetPlaced(false);\n    setHasLocalActiveBet(false);\n    \n    // Update bet history if there was an active bet\n    if (isBetPlaced) {\n      await fetchBetHistory();\n    }\n    \n    // Backend polling will handle state transitions and countdown automatically\n  };\n\n  // Effects\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      // Handle game crash - backend polling will handle the next round automatically\n      handleGameCrash();\n    }\n  }, [gameState]);\n\n\n  // Only check bet state when game becomes active, not during gameplay\n  useEffect(() => {\n    if (gameState === 'playing') {\n      // Check bet state only once when game becomes active\n      const immediateCheck = async () => {\n        await checkActiveBet();\n      };\n      immediateCheck();\n    }\n  }, [gameState]);\n\n  // Keep a ref in sync with the state to make race-free decisions during polling\n  useEffect(() => {\n    isBetPlacedRef.current = isBetPlaced;\n  }, [isBetPlaced]);\n\n  useEffect(() => {\n    hasLocalActiveBetRef.current = hasLocalActiveBet;\n  }, [hasLocalActiveBet]);\n\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n      if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates\n  useEffect(() => {\n    console.log('Aviator component mounted - starting initialization');\n    setIsLoading(true);\n    \n    const initializeComponent = async () => {\n      try {\n        console.log('Starting API calls...');\n        await Promise.all([\n          fetchBalance(),\n          fetchCurrentGame().catch(() => undefined),\n          fetchGameHistory(),\n          fetchBetHistory()\n        ]);\n        \n        // Check for active bet after getting current game\n        if (roundNumber > 0) {\n          await checkActiveBet();\n        }\n        \n        console.log('All API calls completed - server connected');\n      } catch (error) {\n        console.error('Error during initialization:', error);\n      } finally {\n        setIsLoading(false);\n        console.log('Component initialization complete - ready for countdown');\n      }\n    };\n    \n    initializeComponent();\n    \n    // Poll backend for real-time updates - this will handle countdown automatically\n    if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    // Poll every 100ms for faster real-time updates including countdown\n    gameCheckInterval.current = setInterval(() => {\n      // Poll to get latest real-time state from backend (including countdown)\n      fetchCurrentGame().catch((error) => {\n        console.error('Polling error:', error);\n      });\n    }, 100);\n    \n    return () => {\n      console.log('Cleaning up Aviator component');\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []); // Removed gameState dependency\n\n  console.log('Rendering Aviator component, gameState:', gameState, 'timeLeft:', timeLeft, 'isLoading:', isLoading);\n\n  if (isLoading) {\n    return (\n      <div className=\"aviator-container\">\n        <div className=\"loading-state\">\n          <h2>Loading Aviator Game...</h2>\n          <div className=\"loading-spinner\">⏳</div>\n          <p>Connecting to backend...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"aviator-container\">\n      <div className=\"aviator-header\">\n        <h1>Aviator</h1>\n        <div className=\"balance-display\">\n          Balance: ${balance.toFixed(2)}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <strong>Error:</strong> {error}\n          <button onClick={() => setError(null)} className=\"error-close\">×</button>\n        </div>\n      )}\n\n      <div className=\"debug-info\">\n        <small>API Base: {API_BASE_URL}</small>\n        <small>Game State: {gameState}</small>\n        <small>Round: #{roundNumber}</small>\n        <small>Game History Count: {gameHistory.length}</small>\n        <small>Bet History Count: {betHistory.length}</small>\n        <small>Current Game: {currentGame ? `Round ${currentGame.round_number}` : 'None'}</small>\n      </div>\n\n      <div className=\"game-area\">\n        <div className=\"multiplier-display\">\n          <AnimatePresence mode=\"wait\">\n            {gameState === 'waiting' && (\n              <motion.div\n                key=\"waiting\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                className=\"waiting-state\"\n              >\n                <div className=\"game-display\">\n                  <div className=\"aviator-plane-container\">\n                    <div className={`aviator-plane waiting`}>\n                      ✈️\n                    </div>\n                  </div>\n                  <h2>Next game in {timeLeft}s</h2>\n                  <div className=\"countdown-circle\">\n                    <span className=\"countdown-number\">{timeLeft}</span>\n                  </div>\n                  <div className=\"round-info\">Round #{roundNumber}</div>\n                </div>\n              </motion.div>\n            )}\n            \n            {gameState === 'playing' && (\n              <motion.div\n                key=\"playing\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                className=\"playing-state\"\n              >\n                <div className=\"game-display\">\n                  <div className=\"aviator-plane-container\">\n                    <div className={`aviator-plane flying`}>\n                      ✈️\n                    </div>\n                  </div>\n                  <div className=\"multiplier-value\">\n                    {multiplier.toFixed(2)}x\n                  </div>\n                  <div className=\"game-status\">Flying!</div>\n                  {Number(crashPoint) > 0 && (\n                    <div className=\"crash-point\">\n                      Target: {(Number(crashPoint) || 1.0).toFixed(2)}x\n                    </div>\n                  )}\n                  <div className=\"round-info\">Round #{roundNumber}</div>\n                </div>\n              </motion.div>\n            )}\n            \n            {gameState === 'crashed' && (\n              <motion.div\n                key=\"crashed\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                className=\"crashed-state\"\n              >\n                <div className=\"game-display\">\n                  <div className=\"aviator-plane-container\">\n                    <div className={`aviator-plane crashed`}>\n                      💥\n                    </div>\n                  </div>\n                  <h2 className=\"crash-text\">CRASHED AT {(Number(crashPoint) || 1.0).toFixed(2)}x</h2>\n                  <div className=\"game-status\">Game Over!</div>\n                  <div className=\"round-info\">Round #{roundNumber}</div>\n                  <div className=\"backend-info\">\n                    <small>Predetermined crash point from backend</small>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n\n        <div className=\"betting-controls\">\n          <div className=\"bet-amount-controls\">\n            <button onClick={halfBet} className=\"bet-btn\">½</button>\n            <button onClick={resetBet} className=\"bet-btn\">Reset</button>\n            <button onClick={doubleBet} className=\"bet-btn\">2×</button>\n          </div>\n          \n          <div className=\"bet-input\">\n            <input\n              type=\"number\"\n              value={betAmount}\n              onChange={(e) => setBetAmount(Math.max(1, parseInt(e.target.value) || 1))}\n              min=\"1\"\n              max={balance}\n              className=\"bet-amount-input\"\n            />\n          </div>\n\n          <div className=\"quick-chips\">\n            <button className=\"chip\" onClick={() => addChip(1)}>+1</button>\n            <button className=\"chip\" onClick={() => addChip(5)}>+5</button>\n            <button className=\"chip\" onClick={() => addChip(10)}>+10</button>\n            <button className=\"chip\" onClick={() => addChip(50)}>+50</button>\n            <button className=\"chip\" onClick={() => addChip(100)}>+100</button>\n            <button className=\"chip outline\" onClick={setMaxBet}>Max</button>\n            <button className=\"chip outline\" onClick={clearBet}>Clear</button>\n          </div>\n          \n          <div className=\"action-buttons\">\n            {/* Bet button - only shown during waiting phase when no bet is placed */}\n            {!hasLocalActiveBet && gameState === 'waiting' && (\n              <button onClick={placeBet} className=\"place-bet-btn\">\n                Place Bet ${betAmount}\n              </button>\n            )}\n            \n            {/* Cashout button - persists from bet placement until crash/cashout */}\n            {hasLocalActiveBet && gameState !== 'crashed' && (\n              <button \n                onClick={cashout} \n                className=\"cashout-btn\"\n                disabled={gameState !== 'playing' || isCashingOut}\n                style={{ pointerEvents: 'auto' }}\n              >\n                {gameState !== 'playing'\n                  ? 'Cashout (waiting for takeoff)'\n                  : isCashingOut\n                    ? 'Cashing Out...'\n                    : `Cashout $${(betAmount * multiplier).toFixed(2)}`}\n              </button>\n            )}\n\n            {/* Disabled state - when no bet is placed and game is not in waiting phase */}\n            {!hasLocalActiveBet && gameState !== 'waiting' && (\n              <button disabled className=\"disabled-btn\">\n                {gameState === 'playing' ? 'Game in progress' : 'Waiting for next round'}\n              </button>\n            )}\n\n            {/* Bet placed - show locked info while waiting */}\n            {hasLocalActiveBet && gameState === 'waiting' && (\n              <div className=\"bet-locked-state\">\n                <span className=\"locked-badge\">Bet locked for Round #{roundNumber}</span>\n                <small>Waiting for game to start...</small>\n              </div>\n            )}\n\n            {/* Show slips for multiple bets this round */}\n            {activeBets.length > 0 && (\n              <div className=\"bet-slips\">\n                {activeBets.map((b) => (\n                  <div key={b.id} className=\"bet-slip-row\">\n                    <span>Stake: ${Number(b.amount).toFixed(2)}</span>\n                    <button\n                      className=\"cashout-btn\"\n                      disabled={gameState !== 'playing' || isCashingOut}\n                      onClick={() => cashout(b.id)}\n                    >\n                      {gameState !== 'playing' ? 'Cashout (locked)' : `Cashout $${(Number(b.amount) * multiplier).toFixed(2)}`}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"bet-summary\">\n            <div className=\"summary-line\">\n              {hasLocalActiveBet ? (\n                <>Current value: ${(betAmount * multiplier).toFixed(2)} at {multiplier.toFixed(2)}x</>\n              ) : (\n                <>Potential at 2.00x: ${(betAmount * 2.00).toFixed(2)}</>\n              )}\n            </div>\n            <div className={`bet-status ${hasLocalActiveBet ? 'active' : 'idle'}`}>\n              {hasLocalActiveBet ? (\n                <>Active in Round #{roundNumber} - ${betAmount} locked</>\n              ) : (\n                <>No active bet - Place bet during waiting phase</>\n              )}\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"game-history\">\n        <h3>Recent Results</h3>\n        {gameHistory.length === 0 ? (\n          <div className=\"history-empty\">\n            <p>No game history yet</p>\n            <small>Games will appear here after they crash</small>\n          </div>\n        ) : (\n          <div className=\"history-grid\">\n            {gameHistory.map((result, index) => {\n              const numericResult = Number(result) || 1.0;\n              return (\n                <div\n                  key={index}\n                  className={`history-item ${numericResult >= 2 ? 'green' : numericResult >= 1.5 ? 'orange' : 'red'}`}\n                >\n                  {numericResult.toFixed(2)}x\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      <div className=\"bet-history\">\n        <h3>Your Bet History</h3>\n        <div className=\"bet-history-table\">\n          <div className=\"bet-history-header\">\n            <span>Round</span>\n            <span>Stake</span>\n            <span>Outcome</span>\n            <span>Payout</span>\n            <span>Profit</span>\n          </div>\n          {betHistory.length === 0 && (\n            <div className=\"bet-history-empty\">No bets yet</div>\n          )}\n          {betHistory.map((b, i) => (\n            <div className={`bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`} key={i}>\n              <span>#{b.round || b.game?.round_number}</span>\n              <span>${Number(b.amount).toFixed(2)}</span>\n              <span>{b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'}</span>\n              <span>${Number(b.payout).toFixed(2)}</span>\n              <span className=\"profit\">{`${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"game-info\">\n        <h3>How to Play</h3>\n        <ul>\n          <li>Place your bet during the waiting phase (before takeoff)</li>\n          <li>Once bet is placed, your stake is locked for that round</li>\n          <li>Watch the multiplier increase in real-time during flight</li>\n          <li>Click \"Cashout\" before the plane crashes to win!</li>\n          <li>If the plane crashes before you cashout, you lose your bet</li>\n          <li>After each round, you must place a new bet manually</li>\n        </ul>\n        <div className=\"backend-info\">\n          <strong>Real-time Multiplier:</strong> Increases by 0.05x every second during active gameplay\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Aviator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgD,YAAY,GAAG9C,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM+C,iBAAiB,GAAG/C,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMgD,WAAW,GAAGhD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMiD,YAAY,GAAGjD,MAAM,CAAC,KAAK,CAAC;EAClC,MAAMkD,cAAc,GAAGlD,MAAM,CAAC,CAAC,CAAC;EAChC,MAAMmD,cAAc,GAAGnD,MAAM,CAAC,KAAK,CAAC;EACpC,MAAMoD,oBAAoB,GAAGpD,MAAM,CAAC,KAAK,CAAC;;EAE1C;EACA,MAAMqD,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,GAAG/C,YAAY,uBAAuB,CAAC;MAC7E,MAAMgD,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,GAAGjD,YAAY,wCAAwC,CAAC;MACzF8C,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/CrC,UAAU,CAACmC,QAAQ,CAACE,IAAI,CAACtC,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOgB,KAAK,EAAE;MAAA,IAAAuB,eAAA;MACdL,OAAO,CAAClB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CkB,OAAO,CAAClB,KAAK,CAAC,gBAAgB,GAAAuB,eAAA,GAAEvB,KAAK,CAACoB,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,CAAC;MACrDrC,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,MAAMuC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,GAAGjD,YAAY,wBAAwB,CAAC;MACzE,MAAMqD,QAAQ,GAAGL,QAAQ,CAACE,IAAI;MAC9B,MAAMI,aAAa,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAAC;MACvC,MAAMC,cAAc,GAAGH,QAAQ,CAACI,KAAK,KAAKH,aAAa,KAAK,QAAQ,GAAG,SAAS,GAAGA,aAAa,CAAC;;MAEjG;MACAR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;QAC3BQ,MAAM,EAAED,aAAa;QACrBG,KAAK,EAAEJ,QAAQ,CAACI,KAAK;QACrBD,cAAc;QACdE,cAAc,EAAEL,QAAQ,CAACK,cAAc;QACvCC,YAAY,EAAEN,QAAQ,CAACM,YAAY;QACnCC,kBAAkB,EAAEP,QAAQ,CAACO;MAC/B,CAAC,CAAC;;MAEF;MACA,MAAMC,UAAU,GAAGR,QAAQ,CAACM,YAAY,KAAKrC,WAAW;;MAExD;MACA,IAAI+B,QAAQ,CAACM,YAAY,KAAKrC,WAAW,EAAE;QACzCC,cAAc,CAAC8B,QAAQ,CAACM,YAAY,CAAC;MACvC;MAEA,IAAIG,MAAM,CAACT,QAAQ,CAACU,WAAW,CAAC,KAAK3C,UAAU,EAAE;QAC/CC,aAAa,CAACyC,MAAM,CAACT,QAAQ,CAACU,WAAW,CAAC,IAAI,GAAG,CAAC;MACpD;;MAEA;MACA,IAAIC,YAAY,GAAG1D,SAAS;MAC5B,IAAIkD,cAAc,KAAK,SAAS,EAAE;QAChC;QACAQ,YAAY,GAAG,SAAS;QACxB,IAAI1D,SAAS,KAAK,SAAS,EAAE;UAC3BwC,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEM,QAAQ,CAACK,cAAc,CAAC;UACvFnD,YAAY,CAAC,SAAS,CAAC;QACzB;QACAE,aAAa,CAAC,IAAI,CAAC;QACnB,IAAI,OAAO4C,QAAQ,CAACK,cAAc,KAAK,QAAQ,EAAE;UAC/C,MAAMO,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,IAAI,CAACf,QAAQ,CAACK,cAAc,CAAC,CAAC;UACnE,IAAIO,WAAW,KAAK/C,QAAQ,EAAE;YAC5B4B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE7B,QAAQ,EAAE,IAAI,EAAE+C,WAAW,CAAC;YAC/D9C,WAAW,CAAC8C,WAAW,CAAC;UAC1B;QACF;QAEA,IAAIJ,UAAU,EAAE;UACd9C,cAAc,CAAC,KAAK,CAAC;UACrBoB,oBAAoB,CAAC,KAAK,CAAC;UAC3B,MAAMkC,cAAc,CAAC,CAAC;QACxB;MACF,CAAC,MAAM,IAAI,CAACb,cAAc,KAAK,SAAS,IAAIA,cAAc,KAAK,UAAU,KAAKlD,SAAS,KAAK,SAAS,EAAE;QACrG0D,YAAY,GAAG,SAAS;QACxBzD,YAAY,CAAC,SAAS,CAAC;QACvB,IAAI,OAAO8C,QAAQ,CAACO,kBAAkB,KAAK,QAAQ,EAAE;UACnDnD,aAAa,CAAC4C,QAAQ,CAACO,kBAAkB,CAAC;QAC5C;QACA,IAAI,OAAOP,QAAQ,CAACK,cAAc,KAAK,QAAQ,EAAE;UAC/CvC,WAAW,CAAC+C,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,IAAI,CAACf,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;QAC9D;;QAEA;QACA,MAAMW,cAAc,CAAC,CAAC;MACxB,CAAC,MAAM,IAAI,CAAChB,QAAQ,CAACiB,YAAY,IAAId,cAAc,KAAK,SAAS,KAAKlD,SAAS,KAAK,SAAS,EAAE;QAC7F0D,YAAY,GAAG,SAAS;QACxBzD,YAAY,CAAC,SAAS,CAAC;QACvBE,aAAa,CAACqD,MAAM,CAACT,QAAQ,CAACkB,UAAU,CAAC,IAAIT,MAAM,CAACT,QAAQ,CAACU,WAAW,CAAC,IAAI,GAAG,CAAC;;QAEjF;QACAhD,cAAc,CAAC,KAAK,CAAC;QACrBoB,oBAAoB,CAAC,KAAK,CAAC;MAC7B;;MAEA;MACA,IAAI6B,YAAY,KAAK,SAAS,IAAIR,cAAc,KAAK,SAAS,EAAE;QAC9D,MAAMgB,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;QACtB;QACA,IAAIA,GAAG,GAAG9B,cAAc,CAACgC,OAAO,GAAG,GAAG,EAAE;UACtC;UACA,IAAI,OAAOrB,QAAQ,CAACO,kBAAkB,KAAK,QAAQ,IAAIM,IAAI,CAACS,GAAG,CAACtB,QAAQ,CAACO,kBAAkB,GAAGpD,UAAU,CAAC,GAAG,KAAK,EAAE;YACjHC,aAAa,CAAC4C,QAAQ,CAACO,kBAAkB,CAAC;UAC5C;UACA,IAAI,OAAOP,QAAQ,CAACK,cAAc,KAAK,QAAQ,IAAIQ,IAAI,CAACS,GAAG,CAACtB,QAAQ,CAACK,cAAc,GAAGxC,QAAQ,CAAC,GAAG,GAAG,EAAE;YACrGC,WAAW,CAAC+C,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,IAAI,CAACf,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;UAC9D;UACAhB,cAAc,CAACgC,OAAO,GAAGF,GAAG;QAC9B;MACF;MAEA,OAAOnB,QAAQ;IACjB,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMgD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MAAA,IAAAC,cAAA;MACF/B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,GAAG/C,YAAY,4BAA4B,CAAC;MACvF,MAAMgD,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,GAAGjD,YAAY,4BAA4B,CAAC;MAC7E8C,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACpDJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,OAAOC,QAAQ,CAACE,IAAI,CAAC;MAChEJ,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAA8B,cAAA,GAAE7B,QAAQ,CAACE,IAAI,cAAA2B,cAAA,uBAAbA,cAAA,CAAeC,MAAM,CAAC;;MAEnE;MACA,MAAMC,WAAW,GAAG/B,QAAQ,CAACE,IAAI,CAC9B8B,GAAG,CAACC,IAAI,IAAInB,MAAM,CAACmB,IAAI,CAAClB,WAAW,CAAC,CAAC,CACrCmB,MAAM,CAACC,KAAK,IAAI,CAACC,KAAK,CAACD,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,CAAC;MAE9CrC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEgC,WAAW,CAAC;MACnD9D,cAAc,CAAC8D,WAAW,CAAC;IAC7B,CAAC,CAAC,OAAOnD,KAAK,EAAE;MAAA,IAAAyD,gBAAA;MACdvC,OAAO,CAAClB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDkB,OAAO,CAAClB,KAAK,CAAC,gBAAgB,GAAAyD,gBAAA,GAAEzD,KAAK,CAACoB,QAAQ,cAAAqC,gBAAA,uBAAdA,gBAAA,CAAgBnC,IAAI,CAAC;MACrD;MACAjC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMqE,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFxC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,GAAG/C,YAAY,uBAAuB,CAAC;MACjF,MAAMgD,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,GAAGjD,YAAY,uBAAuB,CAAC;MACxE8C,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACnDzB,aAAa,CAACuB,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOtB,KAAK,EAAE;MAAA,IAAA2D,gBAAA;MACdzC,OAAO,CAAClB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDkB,OAAO,CAAClB,KAAK,CAAC,gBAAgB,GAAA2D,gBAAA,GAAE3D,KAAK,CAACoB,QAAQ,cAAAuC,gBAAA,uBAAdA,gBAAA,CAAgBrC,IAAI,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC;IACA,IAAI/D,SAAS,KAAK,SAAS,IAAIsC,oBAAoB,CAAC8B,OAAO,EAAE;MAC3D;MACA,OAAO,IAAI;IACb;IAEA,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,GAAGjD,YAAY,gEAAgEsB,WAAW,EAAE,CAAC;MAC9H,MAAMkE,YAAY,GAAGxC,QAAQ,CAACE,IAAI,CAACuC,cAAc;MACjD1E,cAAc,CAACyE,YAAY,CAAC;MAC5B,IAAIA,YAAY,EAAE;QAChBrD,oBAAoB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAM,IAAI7B,SAAS,KAAK,SAAS,EAAE;QAClC6B,oBAAoB,CAAC,KAAK,CAAC;MAC7B;MACA,OAAOqD,YAAY;IACrB,CAAC,CAAC,OAAO5D,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;MACA,IAAItB,SAAS,KAAK,SAAS,EAAE;QAC3BS,cAAc,CAAC,KAAK,CAAC;QACrBoB,oBAAoB,CAAC,KAAK,CAAC;QAC3B,OAAO,KAAK;MACd;MACA,OAAOS,oBAAoB,CAAC8B,OAAO;IACrC;EACF,CAAC;;EAED;EACA,MAAMgB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B;IACA,IAAIpF,SAAS,KAAK,SAAS,EAAE;MAC3BuB,QAAQ,CAAC,8CAA8C,CAAC;MACxD;IACF;IAEA,IAAIf,WAAW,EAAE;MACfe,QAAQ,CAAC,8CAA8C,CAAC;MACxD;IACF;IAEA,IAAIjB,OAAO,GAAGF,SAAS,EAAE;MACvBmB,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEA,IAAI;MAAA,IAAA8D,eAAA,EAAAC,mBAAA;MACF,MAAM5C,QAAQ,GAAG,MAAMrD,KAAK,CAACkG,IAAI,CAAC,GAAG7F,YAAY,yBAAyB,EAAE;QAC1E8F,MAAM,EAAEpF,SAAS;QACjBqF,OAAO,EAAE,UAAU,CAAE;MACvB,CAAC,CAAC;MAEFlF,UAAU,CAACmC,QAAQ,CAACE,IAAI,CAACtC,OAAO,CAAC;MACjCG,cAAc,CAAC,IAAI,CAAC;MACpBoB,oBAAoB,CAAC,IAAI,CAAC;MAC1BN,QAAQ,CAAC,IAAI,CAAC;MACd,KAAA8D,eAAA,GAAI3C,QAAQ,CAACE,IAAI,cAAAyC,eAAA,gBAAAC,mBAAA,GAAbD,eAAA,CAAeK,GAAG,cAAAJ,mBAAA,eAAlBA,mBAAA,CAAoBK,EAAE,EAAE;QAC1B5D,aAAa,CAAE6D,IAAI,IAAK,CAAC;UAAED,EAAE,EAAEjD,QAAQ,CAACE,IAAI,CAAC8C,GAAG,CAACC,EAAE;UAAEH,MAAM,EAAEhC,MAAM,CAACd,QAAQ,CAACE,IAAI,CAAC8C,GAAG,CAACF,MAAM;QAAE,CAAC,EAAE,GAAGI,IAAI,CAAC,CAAC;MAC5G,CAAC,MACI;QACH;QACA,IAAI;UAAA,IAAAC,OAAA;UACF,MAAMC,CAAC,GAAG,MAAMzG,KAAK,CAACsD,GAAG,CAAC,GAAGjD,YAAY,2DAA2DsB,WAAW,EAAE,CAAC;UAClH,MAAM+E,IAAI,GAAG,CAAC,EAAAF,OAAA,GAAAC,CAAC,CAAClD,IAAI,cAAAiD,OAAA,uBAANA,OAAA,CAAQG,IAAI,KAAI,EAAE,EAAEtB,GAAG,CAACuB,CAAC,KAAK;YAAEN,EAAE,EAAEM,CAAC,CAACN,EAAE;YAAEH,MAAM,EAAEhC,MAAM,CAACyC,CAAC,CAACT,MAAM;UAAE,CAAC,CAAC,CAAC;UACpFzD,aAAa,CAACgE,IAAI,CAAC;QACrB,CAAC,CAAC,OAAOG,CAAC,EAAE,CAAC;MACf;;MAEA;MACA,MAAMhB,YAAY,GAAG,MAAMnB,cAAc,CAAC,CAAC;MAC3C,IAAI,CAACmB,YAAY,EAAE;QACjBzE,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MAAA,IAAA6E,gBAAA,EAAAC,qBAAA;MACd7E,QAAQ,CAAC,EAAA4E,gBAAA,GAAA7E,KAAK,CAACoB,QAAQ,cAAAyD,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBvD,IAAI,cAAAwD,qBAAA,uBAApBA,qBAAA,CAAsB9E,KAAK,KAAI,qBAAqB,CAAC;MAC9DkB,OAAO,CAAClB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C;MACAb,cAAc,CAAC,KAAK,CAAC;MACrBoB,oBAAoB,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC;;EAED;EACA,MAAMwE,OAAO,GAAG,MAAAA,CAAOC,aAAa,GAAG,IAAI,KAAK;IAC9C;IACA,IAAI5E,YAAY,EAAE;MAChB;IACF;;IAEA;IACA,IAAI,CAAClB,WAAW,IAAIsB,UAAU,CAAC0C,MAAM,KAAK,CAAC,EAAE;MAC3CjD,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IAEA,IAAIvB,SAAS,KAAK,SAAS,EAAE;MAC3BuB,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;IAEAI,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MAAA,IAAA4E,eAAA,EAAAC,mBAAA;MACF,MAAM9D,QAAQ,GAAG,MAAMrD,KAAK,CAACkG,IAAI,CAAC,GAAG7F,YAAY,uBAAuB,EAAE;QACxE2D,YAAY,EAAErC,WAAW;QACzBd,UAAU,EAAEA,UAAU;QACtBuF,OAAO,EAAE,UAAU;QAAG;QACtBgB,MAAM,EAAEH;MACV,CAAC,CAAC;MAEF/F,UAAU,CAACmC,QAAQ,CAACE,IAAI,CAACtC,OAAO,CAAC;MACjC,KAAAiG,eAAA,GAAI7D,QAAQ,CAACE,IAAI,cAAA2D,eAAA,gBAAAC,mBAAA,GAAbD,eAAA,CAAeb,GAAG,cAAAc,mBAAA,eAAlBA,mBAAA,CAAoBb,EAAE,EAAE;QAC1B5D,aAAa,CAAE6D,IAAI,IAAKA,IAAI,CAAChB,MAAM,CAACqB,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKjD,QAAQ,CAACE,IAAI,CAAC8C,GAAG,CAACC,EAAE,CAAC,CAAC;MAC1E;MACA,MAAMe,SAAS,GAAG5E,UAAU,CAAC0C,MAAM,GAAG,CAAC;MACvC/D,cAAc,CAACiG,SAAS,GAAG,CAAC,CAAC;MAC7B7E,oBAAoB,CAAC6E,SAAS,GAAG,CAAC,CAAC;MACnCvF,aAAa,CAACyE,IAAI,IAAI,CAAClD,QAAQ,CAACE,IAAI,CAAC8C,GAAG,EAAE,GAAGE,IAAI,CAACe,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAChEpF,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAMgB,YAAY,CAAC,CAAC;;MAEpB;MACA,MAAMwB,cAAc,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOzC,KAAK,EAAE;MAAA,IAAAsF,gBAAA,EAAAC,qBAAA;MACdtF,QAAQ,CAAC,EAAAqF,gBAAA,GAAAtF,KAAK,CAACoB,QAAQ,cAAAkE,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhE,IAAI,cAAAiE,qBAAA,uBAApBA,qBAAA,CAAsBvF,KAAK,KAAI,mBAAmB,CAAC;MAC5DkB,OAAO,CAAClB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,SAAS;MACRK,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAMmF,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACArG,cAAc,CAAC,KAAK,CAAC;;IAErB;IACAR,YAAY,CAAC,SAAS,CAAC;IACvBE,aAAa,CAAC,IAAI,CAAC;;IAEnB;IACA,IAAI;MACF,MAAM4C,QAAQ,GAAG,MAAMD,gBAAgB,CAAC,CAAC;MACzC,IAAIC,QAAQ,IAAI,OAAOA,QAAQ,CAACK,cAAc,KAAK,QAAQ,EAAE;QAC3DvC,WAAW,CAAC+C,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,IAAI,CAACf,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMyF,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMjE,gBAAgB,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAM0F,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI1G,OAAO,IAAIF,SAAS,GAAG,CAAC,EAAE;MAC5BC,YAAY,CAACuF,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAChC;EACF,CAAC;EAED,MAAMqB,OAAO,GAAGA,CAAA,KAAM;IACpB5G,YAAY,CAACuF,IAAI,IAAIhC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACsD,KAAK,CAACtB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMuB,QAAQ,GAAGA,CAAA,KAAM;IACrB9G,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAM+G,OAAO,GAAI5B,MAAM,IAAK;IAC1BnF,YAAY,CAACuF,IAAI,IAAI;MACnB,MAAMyB,IAAI,GAAGzD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE+B,IAAI,GAAGJ,MAAM,CAAC;MACvC,OAAO5B,IAAI,CAAC0D,GAAG,CAACD,IAAI,EAAE/G,OAAO,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMiH,SAAS,GAAGA,CAAA,KAAM;IACtBlH,YAAY,CAACuD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACsD,KAAK,CAAC5G,OAAO,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMkH,QAAQ,GAAGA,CAAA,KAAM;IACrBnH,YAAY,CAAC,CAAC,CAAC;EACjB,CAAC;;EAGD;EACA,MAAMoH,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACAhH,cAAc,CAAC,KAAK,CAAC;IACrBoB,oBAAoB,CAAC,KAAK,CAAC;;IAE3B;IACA,IAAIrB,WAAW,EAAE;MACf,MAAMwE,eAAe,CAAC,CAAC;IACzB;;IAEA;EACF,CAAC;;EAED;EACA/F,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,KAAK,SAAS,EAAE;MAC3B;MACAyH,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACzH,SAAS,CAAC,CAAC;;EAGf;EACAf,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,KAAK,SAAS,EAAE;MAC3B;MACA,MAAM0H,cAAc,GAAG,MAAAA,CAAA,KAAY;QACjC,MAAM3D,cAAc,CAAC,CAAC;MACxB,CAAC;MACD2D,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAAC1H,SAAS,CAAC,CAAC;;EAEf;EACAf,SAAS,CAAC,MAAM;IACdoD,cAAc,CAAC+B,OAAO,GAAG5D,WAAW;EACtC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBvB,SAAS,CAAC,MAAM;IACdqD,oBAAoB,CAAC8B,OAAO,GAAGxC,iBAAiB;EAClD,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvB3C,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAI+C,YAAY,CAACoC,OAAO,EAAEuD,aAAa,CAAC3F,YAAY,CAACoC,OAAO,CAAC;MAC7D,IAAIwD,iBAAiB,CAACxD,OAAO,EAAEuD,aAAa,CAACC,iBAAiB,CAACxD,OAAO,CAAC;MACvE,IAAInC,iBAAiB,CAACmC,OAAO,EAAEuD,aAAa,CAAC1F,iBAAiB,CAACmC,OAAO,CAAC;MACvE,IAAIlC,WAAW,CAACkC,OAAO,EAAEyD,YAAY,CAAC3F,WAAW,CAACkC,OAAO,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnF,SAAS,CAAC,MAAM;IACduD,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IAClEhB,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMqG,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACFtF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpC,MAAMsF,OAAO,CAACC,GAAG,CAAC,CAChBzF,YAAY,CAAC,CAAC,EACdO,gBAAgB,CAAC,CAAC,CAACmF,KAAK,CAAC,MAAMC,SAAS,CAAC,EACzC5D,gBAAgB,CAAC,CAAC,EAClBU,eAAe,CAAC,CAAC,CAClB,CAAC;;QAEF;QACA,IAAIhE,WAAW,GAAG,CAAC,EAAE;UACnB,MAAM+C,cAAc,CAAC,CAAC;QACxB;QAEAvB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MAC3D,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,SAAS;QACRG,YAAY,CAAC,KAAK,CAAC;QACnBe,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACxE;IACF,CAAC;IAEDqF,mBAAmB,CAAC,CAAC;;IAErB;IACA,IAAI7F,iBAAiB,CAACmC,OAAO,EAAEuD,aAAa,CAAC1F,iBAAiB,CAACmC,OAAO,CAAC;IACvE;IACAnC,iBAAiB,CAACmC,OAAO,GAAG+D,WAAW,CAAC,MAAM;MAC5C;MACArF,gBAAgB,CAAC,CAAC,CAACmF,KAAK,CAAE3G,KAAK,IAAK;QAClCkB,OAAO,CAAClB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXkB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,IAAIR,iBAAiB,CAACmC,OAAO,EAAEuD,aAAa,CAAC1F,iBAAiB,CAACmC,OAAO,CAAC;IACzE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER5B,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEzC,SAAS,EAAE,WAAW,EAAEY,QAAQ,EAAE,YAAY,EAAEY,SAAS,CAAC;EAEjH,IAAIA,SAAS,EAAE;IACb,oBACEjC,OAAA;MAAK6I,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC9I,OAAA;QAAK6I,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B9I,OAAA;UAAA8I,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChClJ,OAAA;UAAK6I,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxClJ,OAAA;UAAA8I,QAAA,EAAG;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACElJ,OAAA;IAAK6I,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9I,OAAA;MAAK6I,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B9I,OAAA;QAAA8I,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBlJ,OAAA;QAAK6I,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAAC,YACrB,EAAC/H,OAAO,CAACoI,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELnH,KAAK,iBACJ/B,OAAA;MAAK6I,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9I,OAAA;QAAA8I,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACnH,KAAK,eAC9B/B,OAAA;QAAQoJ,OAAO,EAAEA,CAAA,KAAMpH,QAAQ,CAAC,IAAI,CAAE;QAAC6G,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACN,eAEDlJ,OAAA;MAAK6I,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB9I,OAAA;QAAA8I,QAAA,GAAO,YAAU,EAAC3I,YAAY;MAAA;QAAA4I,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvClJ,OAAA;QAAA8I,QAAA,GAAO,cAAY,EAACrI,SAAS;MAAA;QAAAsI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtClJ,OAAA;QAAA8I,QAAA,GAAO,UAAQ,EAACrH,WAAW;MAAA;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpClJ,OAAA;QAAA8I,QAAA,GAAO,sBAAoB,EAAC3H,WAAW,CAAC8D,MAAM;MAAA;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDlJ,OAAA;QAAA8I,QAAA,GAAO,qBAAmB,EAACnH,UAAU,CAACsD,MAAM;MAAA;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDlJ,OAAA;QAAA8I,QAAA,GAAO,gBAAc,EAACjH,WAAW,GAAG,SAASA,WAAW,CAACiC,YAAY,EAAE,GAAG,MAAM;MAAA;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,eAENlJ,OAAA;MAAK6I,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9I,OAAA;QAAK6I,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjC9I,OAAA,CAACH,eAAe;UAACwJ,IAAI,EAAC,MAAM;UAAAP,QAAA,GACzBrI,SAAS,KAAK,SAAS,iBACtBT,OAAA,CAACJ,MAAM,CAAC0J,GAAG;YAETC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACpCC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAE;YAClCE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACjCZ,SAAS,EAAC,eAAe;YAAAC,QAAA,eAEzB9I,OAAA;cAAK6I,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9I,OAAA;gBAAK6I,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,eACtC9I,OAAA;kBAAK6I,SAAS,EAAE,uBAAwB;kBAAAC,QAAA,EAAC;gBAEzC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNlJ,OAAA;gBAAA8I,QAAA,GAAI,eAAa,EAACzH,QAAQ,EAAC,GAAC;cAAA;gBAAA0H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjClJ,OAAA;gBAAK6I,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,eAC/B9I,OAAA;kBAAM6I,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAEzH;gBAAQ;kBAAA0H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC,eACNlJ,OAAA;gBAAK6I,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,SAAO,EAACrH,WAAW;cAAA;gBAAAsH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC,GAjBF,SAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBH,CACb,EAEAzI,SAAS,KAAK,SAAS,iBACtBT,OAAA,CAACJ,MAAM,CAAC0J,GAAG;YAETC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACpCC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAE;YAClCE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACjCZ,SAAS,EAAC,eAAe;YAAAC,QAAA,eAEzB9I,OAAA;cAAK6I,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9I,OAAA;gBAAK6I,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,eACtC9I,OAAA;kBAAK6I,SAAS,EAAE,sBAAuB;kBAAAC,QAAA,EAAC;gBAExC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNlJ,OAAA;gBAAK6I,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,GAC9BnI,UAAU,CAACwI,OAAO,CAAC,CAAC,CAAC,EAAC,GACzB;cAAA;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNlJ,OAAA;gBAAK6I,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACzCjF,MAAM,CAAC1C,UAAU,CAAC,GAAG,CAAC,iBACrBvB,OAAA;gBAAK6I,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAC,UACnB,EAAC,CAAC7E,MAAM,CAAC1C,UAAU,CAAC,IAAI,GAAG,EAAE4H,OAAO,CAAC,CAAC,CAAC,EAAC,GAClD;cAAA;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACN,eACDlJ,OAAA;gBAAK6I,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,SAAO,EAACrH,WAAW;cAAA;gBAAAsH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC,GAtBF,SAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuBH,CACb,EAEAzI,SAAS,KAAK,SAAS,iBACtBT,OAAA,CAACJ,MAAM,CAAC0J,GAAG;YAETC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACpCC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAE;YAClCE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACjCZ,SAAS,EAAC,eAAe;YAAAC,QAAA,eAEzB9I,OAAA;cAAK6I,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B9I,OAAA;gBAAK6I,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,eACtC9I,OAAA;kBAAK6I,SAAS,EAAE,uBAAwB;kBAAAC,QAAA,EAAC;gBAEzC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNlJ,OAAA;gBAAI6I,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,aAAW,EAAC,CAAC7E,MAAM,CAAC1C,UAAU,CAAC,IAAI,GAAG,EAAE4H,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpFlJ,OAAA;gBAAK6I,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7ClJ,OAAA;gBAAK6I,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,SAAO,EAACrH,WAAW;cAAA;gBAAAsH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtDlJ,OAAA;gBAAK6I,SAAS,EAAC,cAAc;gBAAAC,QAAA,eAC3B9I,OAAA;kBAAA8I,QAAA,EAAO;gBAAsC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAlBF,SAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBH,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eAENlJ,OAAA;QAAK6I,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B9I,OAAA;UAAK6I,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC9I,OAAA;YAAQoJ,OAAO,EAAE1B,OAAQ;YAACmB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDlJ,OAAA;YAAQoJ,OAAO,EAAExB,QAAS;YAACiB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7DlJ,OAAA;YAAQoJ,OAAO,EAAE3B,SAAU;YAACoB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eAENlJ,OAAA;UAAK6I,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxB9I,OAAA;YACE4J,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEhJ,SAAU;YACjBiJ,QAAQ,EAAGC,CAAC,IAAKjJ,YAAY,CAACuD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE0F,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE;YAC1E9B,GAAG,EAAC,GAAG;YACPzD,GAAG,EAAEvD,OAAQ;YACb8H,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENlJ,OAAA;UAAK6I,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B9I,OAAA;YAAQ6I,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAAC,CAAC,CAAE;YAAAiB,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/DlJ,OAAA;YAAQ6I,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAAC,CAAC,CAAE;YAAAiB,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/DlJ,OAAA;YAAQ6I,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAAC,EAAE,CAAE;YAAAiB,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjElJ,OAAA;YAAQ6I,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAAC,EAAE,CAAE;YAAAiB,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjElJ,OAAA;YAAQ6I,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMvB,OAAO,CAAC,GAAG,CAAE;YAAAiB,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnElJ,OAAA;YAAQ6I,SAAS,EAAC,cAAc;YAACO,OAAO,EAAEpB,SAAU;YAAAc,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjElJ,OAAA;YAAQ6I,SAAS,EAAC,cAAc;YAACO,OAAO,EAAEnB,QAAS;YAAAa,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eAENlJ,OAAA;UAAK6I,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAE5B,CAACzG,iBAAiB,IAAI5B,SAAS,KAAK,SAAS,iBAC5CT,OAAA;YAAQoJ,OAAO,EAAEvD,QAAS;YAACgD,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,aACxC,EAACjI,SAAS;UAAA;YAAAkI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACT,EAGA7G,iBAAiB,IAAI5B,SAAS,KAAK,SAAS,iBAC3CT,OAAA;YACEoJ,OAAO,EAAEtC,OAAQ;YACjB+B,SAAS,EAAC,aAAa;YACvBqB,QAAQ,EAAEzJ,SAAS,KAAK,SAAS,IAAI0B,YAAa;YAClDgI,KAAK,EAAE;cAAEC,aAAa,EAAE;YAAO,CAAE;YAAAtB,QAAA,EAEhCrI,SAAS,KAAK,SAAS,GACpB,+BAA+B,GAC/B0B,YAAY,GACV,gBAAgB,GAChB,YAAY,CAACtB,SAAS,GAAGF,UAAU,EAAEwI,OAAO,CAAC,CAAC,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CACT,EAGA,CAAC7G,iBAAiB,IAAI5B,SAAS,KAAK,SAAS,iBAC5CT,OAAA;YAAQkK,QAAQ;YAACrB,SAAS,EAAC,cAAc;YAAAC,QAAA,EACtCrI,SAAS,KAAK,SAAS,GAAG,kBAAkB,GAAG;UAAwB;YAAAsI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CACT,EAGA7G,iBAAiB,IAAI5B,SAAS,KAAK,SAAS,iBAC3CT,OAAA;YAAK6I,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B9I,OAAA;cAAM6I,SAAS,EAAC,cAAc;cAAAC,QAAA,GAAC,wBAAsB,EAACrH,WAAW;YAAA;cAAAsH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzElJ,OAAA;cAAA8I,QAAA,EAAO;YAA4B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CACN,EAGA3G,UAAU,CAAC0C,MAAM,GAAG,CAAC,iBACpBjF,OAAA;YAAK6I,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBvG,UAAU,CAAC4C,GAAG,CAAEuB,CAAC,iBAChB1G,OAAA;cAAgB6I,SAAS,EAAC,cAAc;cAAAC,QAAA,gBACtC9I,OAAA;gBAAA8I,QAAA,GAAM,UAAQ,EAAC7E,MAAM,CAACyC,CAAC,CAACT,MAAM,CAAC,CAACkD,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAClDlJ,OAAA;gBACE6I,SAAS,EAAC,aAAa;gBACvBqB,QAAQ,EAAEzJ,SAAS,KAAK,SAAS,IAAI0B,YAAa;gBAClDiH,OAAO,EAAEA,CAAA,KAAMtC,OAAO,CAACJ,CAAC,CAACN,EAAE,CAAE;gBAAA0C,QAAA,EAE5BrI,SAAS,KAAK,SAAS,GAAG,kBAAkB,GAAG,YAAY,CAACwD,MAAM,CAACyC,CAAC,CAACT,MAAM,CAAC,GAAGtF,UAAU,EAAEwI,OAAO,CAAC,CAAC,CAAC;cAAE;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClG,CAAC;YAAA,GARDxC,CAAC,CAACN,EAAE;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAST,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENlJ,OAAA;UAAK6I,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B9I,OAAA;YAAK6I,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BzG,iBAAiB,gBAChBrC,OAAA,CAAAE,SAAA;cAAA4I,QAAA,GAAE,kBAAgB,EAAC,CAACjI,SAAS,GAAGF,UAAU,EAAEwI,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI,EAACxI,UAAU,CAACwI,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;YAAA,eAAE,CAAC,gBAEtFnJ,OAAA,CAAAE,SAAA;cAAA4I,QAAA,GAAE,uBAAqB,EAAC,CAACjI,SAAS,GAAG,IAAI,EAAEsI,OAAO,CAAC,CAAC,CAAC;YAAA,eAAG;UACzD;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNlJ,OAAA;YAAK6I,SAAS,EAAE,cAAcxG,iBAAiB,GAAG,QAAQ,GAAG,MAAM,EAAG;YAAAyG,QAAA,EACnEzG,iBAAiB,gBAChBrC,OAAA,CAAAE,SAAA;cAAA4I,QAAA,GAAE,mBAAiB,EAACrH,WAAW,EAAC,MAAI,EAACZ,SAAS,EAAC,SAAO;YAAA,eAAE,CAAC,gBAEzDb,OAAA,CAAAE,SAAA;cAAA4I,QAAA,EAAE;YAA8C,gBAAE;UACnD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eAENlJ,OAAA;MAAK6I,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B9I,OAAA;QAAA8I,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtB/H,WAAW,CAAC8D,MAAM,KAAK,CAAC,gBACvBjF,OAAA;QAAK6I,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B9I,OAAA;UAAA8I,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1BlJ,OAAA;UAAA8I,QAAA,EAAO;QAAuC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,gBAENlJ,OAAA;QAAK6I,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1B3H,WAAW,CAACgE,GAAG,CAAC,CAACkF,MAAM,EAAEC,KAAK,KAAK;UAClC,MAAMC,aAAa,GAAGtG,MAAM,CAACoG,MAAM,CAAC,IAAI,GAAG;UAC3C,oBACErK,OAAA;YAEE6I,SAAS,EAAE,gBAAgB0B,aAAa,IAAI,CAAC,GAAG,OAAO,GAAGA,aAAa,IAAI,GAAG,GAAG,QAAQ,GAAG,KAAK,EAAG;YAAAzB,QAAA,GAEnGyB,aAAa,CAACpB,OAAO,CAAC,CAAC,CAAC,EAAC,GAC5B;UAAA,GAJOmB,KAAK;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIP,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENlJ,OAAA;MAAK6I,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9I,OAAA;QAAA8I,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBlJ,OAAA;QAAK6I,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChC9I,OAAA;UAAK6I,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC9I,OAAA;YAAA8I,QAAA,EAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClBlJ,OAAA;YAAA8I,QAAA,EAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClBlJ,OAAA;YAAA8I,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpBlJ,OAAA;YAAA8I,QAAA,EAAM;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnBlJ,OAAA;YAAA8I,QAAA,EAAM;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACLvH,UAAU,CAACsD,MAAM,KAAK,CAAC,iBACtBjF,OAAA;UAAK6I,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACpD,EACAvH,UAAU,CAACwD,GAAG,CAAC,CAACuB,CAAC,EAAE8D,CAAC;UAAA,IAAAC,OAAA;UAAA,oBACnBzK,OAAA;YAAK6I,SAAS,EAAE,mBAAmBnC,CAAC,CAAC2D,MAAM,KAAK,SAAS,GAAG,KAAK,GAAG,MAAM,EAAG;YAAAvB,QAAA,gBAC3E9I,OAAA;cAAA8I,QAAA,GAAM,GAAC,EAACpC,CAAC,CAACgE,KAAK,MAAAD,OAAA,GAAI/D,CAAC,CAACtB,IAAI,cAAAqF,OAAA,uBAANA,OAAA,CAAQ3G,YAAY;YAAA;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/ClJ,OAAA;cAAA8I,QAAA,GAAM,GAAC,EAAC7E,MAAM,CAACyC,CAAC,CAACT,MAAM,CAAC,CAACkD,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3ClJ,OAAA;cAAA8I,QAAA,EAAOpC,CAAC,CAAC2D,MAAM,KAAK,SAAS,GAAG,GAAGpG,MAAM,CAACyC,CAAC,CAACiE,kBAAkB,IAAIjE,CAAC,CAACkE,iBAAiB,CAAC,CAACzB,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;YAAS;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxHlJ,OAAA;cAAA8I,QAAA,GAAM,GAAC,EAAC7E,MAAM,CAACyC,CAAC,CAACmE,MAAM,CAAC,CAAC1B,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3ClJ,OAAA;cAAM6I,SAAS,EAAC,QAAQ;cAAAC,QAAA,EAAE,GAAGpC,CAAC,CAACoE,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG7G,MAAM,CAACyC,CAAC,CAACoE,MAAM,CAAC,CAAC3B,OAAO,CAAC,CAAC,CAAC;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GALZsB,CAAC;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAM/E,CAAC;QAAA,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlJ,OAAA;MAAK6I,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9I,OAAA;QAAA8I,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBlJ,OAAA;QAAA8I,QAAA,gBACE9I,OAAA;UAAA8I,QAAA,EAAI;QAAwD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjElJ,OAAA;UAAA8I,QAAA,EAAI;QAAuD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChElJ,OAAA;UAAA8I,QAAA,EAAI;QAAwD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjElJ,OAAA;UAAA8I,QAAA,EAAI;QAAgD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDlJ,OAAA;UAAA8I,QAAA,EAAI;QAA0D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnElJ,OAAA;UAAA8I,QAAA,EAAI;QAAmD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACLlJ,OAAA;QAAK6I,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B9I,OAAA;UAAA8I,QAAA,EAAQ;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,2DACxC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1I,EAAA,CApvBID,OAAO;AAAAwK,EAAA,GAAPxK,OAAO;AAsvBb,eAAeA,OAAO;AAAC,IAAAwK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}