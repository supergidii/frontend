{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antoo\\\\Desktop\\\\betting\\\\betsite\\\\frontend\\\\src\\\\components\\\\Aviator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\n\n// Set the base URL for API calls (env override, default to local backend)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\n// Attach JWT token if present\naxios.interceptors.request.use(config => {\n  try {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers = config.headers || {};\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (_) {}\n  return config;\n});\nconst Aviator = () => {\n  _s();\n  var _currentOdds$custom_c, _currentOdds$custom_c2;\n  // Game speed configuration\n  const TICK_MS = 100; // update interval during playing phase\n  const MULTIPLIER_INCREMENT = 0.005; // increment per tick\n  const RATE_PER_SECOND = 1000 / TICK_MS * MULTIPLIER_INCREMENT; // growth per second\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [isBetQueued, setIsBetQueued] = useState(false);\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentOdds, setCurrentOdds] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [countdownEndAt, setCountdownEndAt] = useState(null);\n  const gameInterval = useRef(null);\n  const countdownInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n  const gameTimeout = useRef(null);\n  const isRunningRef = useRef(false);\n  const gameStateRef = useRef(gameState);\n  const playingPollInterval = useRef(null);\n  useEffect(() => {\n    gameStateRef.current = gameState;\n  }, [gameState]);\n\n  // API calls\n  const extractApiError = error => {\n    try {\n      var _error$response, _error$response2;\n      const status = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n      const data = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n      const detail = (data === null || data === void 0 ? void 0 : data.error) || (data === null || data === void 0 ? void 0 : data.detail) || (data === null || data === void 0 ? void 0 : data.message);\n      if (status || detail) {\n        return `Error${status ? ` ${status}` : ''}: ${detail || 'Request failed'}`;\n      }\n      if (error !== null && error !== void 0 && error.message) return error.message;\n      return 'Request failed';\n    } catch (_) {\n      return 'Request failed';\n    }\n  };\n  const fetchBalance = async () => {\n    try {\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/`);\n      console.log('Balance response:', response.data);\n      setBalance(response.data.balance);\n    } catch (error) {\n      var _error$response3;\n      console.error('Error fetching balance:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      setBalance(1000);\n    }\n  };\n  const fetchCurrentOdds = async () => {\n    try {\n      console.log('Fetching odds from:', `${API_BASE_URL}/api/aviator/current-odds/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-odds/`);\n      console.log('Odds response:', response.data);\n      setCurrentOdds(response.data);\n    } catch (error) {\n      var _error$response4;\n      console.error('Error fetching current odds:', error);\n      console.error('Error details:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n      setCurrentOdds(null);\n    }\n  };\n\n  // Calculate initial multiplier based on current game state and elapsed time\n  const calculateInitialMultiplier = game => {\n    if (!game) return 1.00;\n    const now = new Date();\n    if (game.status === 'waiting') {\n      // For waiting games, always start at 1.00x\n      return 1.00;\n    } else if (game.status === 'active') {\n      // For active games, calculate based on elapsed time since start\n      if (game.started_at) {\n        const started = new Date(game.started_at);\n        const elapsed = Math.floor((now - started) / 1000);\n        const calculatedMultiplier = 1.00 + elapsed * RATE_PER_SECOND;\n        const crashPoint = Number(game.crash_point);\n        console.log(`Calculating initial multiplier: elapsed=${elapsed}s, calculated=${calculatedMultiplier.toFixed(3)}x, crashPoint=${crashPoint}x`);\n\n        // Don't exceed crash point\n        if (Number.isFinite(crashPoint) && crashPoint > 1) {\n          const finalMultiplier = Math.min(calculatedMultiplier, crashPoint);\n          console.log(`Final initial multiplier: ${finalMultiplier.toFixed(3)}x`);\n          return finalMultiplier;\n        }\n        return calculatedMultiplier;\n      }\n      return 1.00;\n    } else if (game.status === 'crashed') {\n      // For crashed games, show the final crash point\n      return Number(game.crash_point) || 1.00;\n    }\n    return 1.00;\n  };\n\n  // Calculate remaining time for active games\n  const calculateRemainingTime = game => {\n    if (!game || game.status !== 'active' || !game.started_at) return 0;\n    const now = new Date();\n    const started = new Date(game.started_at);\n    const elapsed = Math.floor((now - started) / 1000);\n    const crashPoint = Number(game.crash_point);\n    if (Number.isFinite(crashPoint) && crashPoint > 1) {\n      // Calculate time to crash based on current multiplier\n      const currentMultiplier = 1.00 + elapsed * RATE_PER_SECOND;\n      if (currentMultiplier >= crashPoint) {\n        return 0; // Already crashed\n      }\n      const remainingMultiplier = crashPoint - currentMultiplier;\n      return Math.max(0, Math.ceil(remainingMultiplier / RATE_PER_SECOND));\n    }\n    return 0;\n  };\n  const fetchCurrentGame = async () => {\n    try {\n      console.log('Fetching game from:', `${API_BASE_URL}/api/aviator/current-game/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      const game = response.data;\n      console.log('Game response:', game);\n      setCurrentGame(game);\n      setRoundNumber(game.round_number);\n\n      // Calculate initial multiplier based on current game state\n      const initialMultiplier = calculateInitialMultiplier(game);\n      setMultiplier(initialMultiplier);\n      if (game.status === 'waiting') {\n        setGameState('waiting');\n        setCrashPoint(Number(game.crash_point));\n        const created = new Date(game.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 10 - elapsed); // Changed from 5 to 10 seconds to match backend\n        setTimeLeft(remaining);\n        setCountdownEndAt(Date.now() + remaining * 1000);\n      } else if (game.status === 'active') {\n        setGameState('playing');\n        setCrashPoint(Number(game.crash_point));\n\n        // Calculate remaining time to crash\n        const remainingTime = calculateRemainingTime(game);\n        if (remainingTime <= 0) {\n          // Game should have crashed, update to crashed state\n          setGameState('crashed');\n          setMultiplier(Number(game.crash_point));\n        } else {\n          // Continue the game from current multiplier\n          console.log(`Game is active, continuing from ${initialMultiplier.toFixed(3)}x with ${remainingTime}s remaining`);\n        }\n      } else if (game.status === 'crashed') {\n        setGameState('crashed');\n        setCrashPoint(Number(game.crash_point));\n        setMultiplier(Number(game.crash_point));\n      }\n      return game;\n    } catch (error) {\n      var _error$response5;\n      console.error('Error fetching current game:', error);\n      console.error('Error details:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n      return null;\n    }\n  };\n\n  // Raw fetch used when we need the latest crash point without altering UI state\n  const getCurrentGameRaw = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  };\n  const fetchGameHistory = async () => {\n    try {\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\n      console.log('Game history response:', response.data);\n      // Ensure we store numeric crash points only\n      const numericHistory = (Array.isArray(response.data) ? response.data : []).map(game => Number(game === null || game === void 0 ? void 0 : game.crash_point)).filter(value => Number.isFinite(value));\n      setGameHistory(numericHistory);\n    } catch (error) {\n      var _error$response6;\n      console.error('Error fetching game history:', error);\n      console.error('Error details:', (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data);\n    }\n  };\n  const fetchBetHistory = async () => {\n    try {\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\n      console.log('Bet history response:', response.data);\n      setBetHistory(response.data);\n    } catch (error) {\n      var _error$response7;\n      console.error('Error fetching bet history:', error);\n      console.error('Error details:', (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data);\n    }\n  };\n\n  // Place bet\n  const placeBet = async () => {\n    const notEnough = balance < betAmount;\n    const wrongState = gameState !== 'waiting';\n    const alreadyPlaced = isBetPlaced;\n    if (notEnough || wrongState || alreadyPlaced) {\n      if (notEnough) setError('Insufficient balance to place this bet.');else if (wrongState) setError('You can only place a bet during the waiting phase.');else if (alreadyPlaced) setError('Bet already placed for this round.');\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\n        amount: Math.floor(betAmount)\n      });\n      setBalance(response.data.balance);\n      setIsBetPlaced(true);\n      setError(null);\n    } catch (error) {\n      console.error('Place bet failed:', error);\n      setError(extractApiError(error));\n      console.error('Error placing bet:', error);\n    }\n  };\n\n  // Cashout\n  const cashout = async () => {\n    if (isBetPlaced && gameState === 'playing') {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\n          round_number: roundNumber,\n          multiplier: multiplier\n        });\n        setBalance(response.data.balance);\n        setIsBetPlaced(false);\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n        setError(null);\n      } catch (error) {\n        console.error('Cashout failed:', error);\n        setError(extractApiError(error));\n        console.error('Error cashing out:', error);\n      }\n    }\n  };\n\n  // Start new game\n  const startNewGame = () => {\n    // Ensure no overlapping countdowns\n    if (countdownInterval.current) {\n      clearInterval(countdownInterval.current);\n      countdownInterval.current = null;\n    }\n    if (currentGame && currentGame.crash_point) {\n      setCrashPoint(Number(currentGame.crash_point));\n      if (currentGame.status === 'waiting') {\n        // Game is waiting, start countdown\n        setGameState('waiting');\n        setMultiplier(1.00);\n        const created = new Date(currentGame.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 10 - elapsed); // 10 seconds waiting time\n        setTimeLeft(remaining);\n        setCountdownEndAt(Date.now() + remaining * 1000);\n        countdownInterval.current = setInterval(async () => {\n          const remainingMs = endAt - Date.now();\n          const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n          setTimeLeft(prev => prev !== secondsLeft ? secondsLeft : prev);\n          if (secondsLeft <= 0) {\n            clearInterval(countdownInterval.current);\n            countdownInterval.current = null;\n            // Check backend status and start with proper initial multiplier\n            const latestGame = await getCurrentGameRaw();\n            if (latestGame && latestGame.status === 'active') {\n              const initialMul = calculateInitialMultiplier(latestGame);\n              startGame(latestGame.crash_point, initialMul);\n            } else {\n              await waitForCrashPointAndStart();\n            }\n          }\n        }, 100);\n      } else if (currentGame.status === 'active') {\n        // Game is already active, continue from current state\n        const initialMul = calculateInitialMultiplier(currentGame);\n        const remainingTime = calculateRemainingTime(currentGame);\n        if (remainingTime <= 0) {\n          // Game should have crashed\n          setGameState('crashed');\n          setMultiplier(Number(currentGame.crash_point));\n        } else {\n          // Continue the active game\n          startGame(currentGame.crash_point, initialMul);\n        }\n      } else if (currentGame.status === 'crashed') {\n        // Game has crashed, show final state\n        setGameState('crashed');\n        setMultiplier(Number(currentGame.crash_point));\n      }\n    } else {\n      // No game from backend yet; wait 5s, then try to fetch and start again\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      const endAt = Date.now() + 5000;\n      setCountdownEndAt(endAt);\n      countdownInterval.current = setInterval(async () => {\n        const remainingMs = endAt - Date.now();\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n        setTimeLeft(prev => prev !== secondsLeft ? secondsLeft : prev);\n        if (secondsLeft <= 0) {\n          clearInterval(countdownInterval.current);\n          countdownInterval.current = null;\n          const latestGame = await getCurrentGameRaw();\n          if (latestGame && latestGame.status === 'active') {\n            const initialMul = calculateInitialMultiplier(latestGame);\n            startGame(latestGame.crash_point, initialMul);\n          } else {\n            await waitForCrashPointAndStart();\n          }\n        }\n      }, 100);\n    }\n  };\n\n  // Wait briefly for backend to provide a crash point, then start immediately\n  const waitForCrashPointAndStart = async fallbackCrashPoint => {\n    const startTime = Date.now();\n    const maxWaitMs = 5000;\n    let crashPointToUse = null;\n    while (Date.now() - startTime < maxWaitMs) {\n      const g = await getCurrentGameRaw();\n      if (g && Number(g.crash_point) > 1) {\n        crashPointToUse = Number(g.crash_point);\n        break;\n      }\n      // Small delay before next attempt\n      await new Promise(r => setTimeout(r, 250));\n    }\n    if (crashPointToUse == null && Number(fallbackCrashPoint) > 1) {\n      crashPointToUse = Number(fallbackCrashPoint);\n    }\n    if (crashPointToUse != null) {\n      startGame(crashPointToUse);\n    } else {\n      // If still no crash point, start a new waiting cycle\n      startNewGame();\n    }\n  };\n\n  // Start the actual game\n  const startGame = (backendCrashPoint, initialMultiplierOverride) => {\n    if (isRunningRef.current) return;\n    // Clear any prior timers\n    if (gameInterval.current) clearInterval(gameInterval.current);\n    if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    const numericCrashPoint = Number(backendCrashPoint);\n    const targetCrashPoint = Number.isFinite(numericCrashPoint) && numericCrashPoint > 1 ? numericCrashPoint : 1.5;\n    const startMultiplier = Number.isFinite(initialMultiplierOverride) && initialMultiplierOverride > 1.0 ? initialMultiplierOverride : 1.00;\n    console.log('Starting game with crash point:', targetCrashPoint, 'initial multiplier:', startMultiplier);\n    setGameState('playing');\n    setMultiplier(startMultiplier);\n    isRunningRef.current = true;\n\n    // Safety timeout in case interval misses the boundary, using configured tick/speed\n    const estimatedTicks = Math.max(0, Math.ceil((targetCrashPoint - startMultiplier) / MULTIPLIER_INCREMENT));\n    const estimatedMsToCrash = estimatedTicks * TICK_MS + 200;\n    gameTimeout.current = setTimeout(() => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      setGameState('crashed');\n      setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n      isRunningRef.current = false;\n    }, estimatedMsToCrash);\n    gameInterval.current = setInterval(() => {\n      setMultiplier(prev => {\n        const newMultiplier = prev + MULTIPLIER_INCREMENT;\n        if (newMultiplier >= targetCrashPoint) {\n          clearInterval(gameInterval.current);\n          if (gameTimeout.current) clearTimeout(gameTimeout.current);\n          setGameState('crashed');\n          setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n          isRunningRef.current = false;\n          if (isBetPlaced) {\n            setIsBetPlaced(false);\n            setBetHistory(prev => [{\n              round: roundNumber,\n              amount: betAmount,\n              result: 'crash',\n              cashoutMultiplier: null,\n              payout: 0,\n              profit: -betAmount\n            }, ...prev.slice(0, 19)]);\n          }\n          return targetCrashPoint;\n        }\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\n          cashout();\n        }\n        return newMultiplier;\n      });\n    }, TICK_MS);\n  };\n\n  // Bet controls\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n  const addChip = amount => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  const clearBet = () => {\n    setBetAmount(1);\n  };\n  const queueBetForNextRound = () => {\n    if (!isBetPlaced && balance >= betAmount) {\n      setQueuedBetAmount(betAmount);\n      setIsBetQueued(true);\n    }\n  };\n  const cancelQueuedBet = () => {\n    setIsBetQueued(false);\n  };\n\n  // Effects\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      // Refresh relevant data at the end of each round\n      Promise.all([fetchBalance().catch(() => undefined), fetchGameHistory().catch(() => undefined), fetchBetHistory().catch(() => undefined)]).finally(() => {\n        startNewGame();\n      });\n    }\n  }, [gameState]);\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n      if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates (run once on mount)\n  useEffect(() => {\n    console.log('Aviator component mounted - starting initialization');\n    setIsLoading(true);\n    const initializeComponent = async () => {\n      try {\n        console.log('Starting API calls...');\n        await Promise.all([fetchBalance(), fetchCurrentOdds(), fetchCurrentGame().catch(() => undefined), fetchGameHistory(), fetchBetHistory()]);\n        console.log('All API calls completed');\n      } catch (error) {\n        console.error('Error during initialization:', error);\n      } finally {\n        setIsLoading(false);\n        console.log('Component initialization complete');\n      }\n    };\n    initializeComponent();\n\n    // Check for game updates every 2 seconds (ignore failures). Avoid disrupting local transitions.\n    if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    gameCheckInterval.current = setInterval(async () => {\n      try {\n        // Use the sync endpoint for better synchronization\n        const response = await axios.get(`${API_BASE_URL}/api/aviator/sync/`);\n        const syncData = response.data;\n        const game = syncData.game;\n\n        // Update round number and crash point\n        setRoundNumber(game.round_number);\n        setCrashPoint(Number(game.crash_point));\n\n        // Only update game state if we're in waiting phase to avoid disrupting active games\n        if (gameStateRef.current === 'waiting') {\n          if (game.status === 'active') {\n            // Game has started, calculate initial multiplier and continue\n            const initialMul = calculateInitialMultiplier(game);\n            const remainingTime = calculateRemainingTime(game);\n            if (remainingTime > 0) {\n              console.log(`Game started, continuing from ${initialMul.toFixed(3)}x`);\n              startGame(game.crash_point, initialMul);\n            }\n          }\n        }\n      } catch (error) {\n        // Ignore sync errors to avoid disrupting game flow\n        console.log('Sync check failed (non-critical):', error.message);\n      }\n    }, 2000);\n\n    // Initial game start - check if we need to start immediately or wait\n    const timer = setTimeout(async () => {\n      console.log('Starting initial game...');\n\n      // Check if we already have a game state that needs immediate handling\n      if (currentGame) {\n        if (currentGame.status === 'active') {\n          // Game is already active, continue from current state\n          const initialMul = calculateInitialMultiplier(currentGame);\n          const remainingTime = calculateRemainingTime(currentGame);\n          if (remainingTime <= 0) {\n            // Game should have crashed, update state\n            setGameState('crashed');\n            setMultiplier(Number(currentGame.crash_point));\n          } else {\n            // Continue the active game\n            startGame(currentGame.crash_point, initialMul);\n          }\n        } else {\n          // Start normal game flow\n          startNewGame();\n        }\n      } else {\n        // No game data yet, start normal flow\n        startNewGame();\n      }\n    }, 1000);\n    return () => {\n      console.log('Cleaning up Aviator component');\n      clearTimeout(timer);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []);\n  console.log('Rendering Aviator component, currentOdds:', currentOdds, 'isLoading:', isLoading);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Aviator Game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connecting to backend...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aviator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Aviator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-display\",\n        children: [\"Balance: $\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"error-close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"API Base: \", API_BASE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Current Odds: \", currentOdds ? currentOdds.name : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Game State: \", gameState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Round: #\", roundNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiplier-display\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          initial: false,\n          children: [gameState === 'waiting' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"waiting-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Next game in \", timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"countdown-circle\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: timeLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this), currentOdds && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"odds-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Using: \", currentOdds.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 21\n              }, this), currentOdds.use_custom_points && /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Custom Points: \", ((_currentOdds$custom_c = currentOdds.custom_crash_points) === null || _currentOdds$custom_c === void 0 ? void 0 : _currentOdds$custom_c.split(',').length) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 19\n            }, this)]\n          }, \"waiting\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: false,\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            className: \"playing-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"multiplier-text\",\n              children: [multiplier.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"airplane\",\n              animate: {\n                y: [0, -20, 0],\n                rotate: [0, 5, -5, 0]\n              },\n              transition: {\n                duration: 2,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              },\n              children: \"\\u2708\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this)]\n          }, \"playing\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: false,\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            className: \"crashed-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"crash-text\",\n              children: [\"CRASHED AT \", Number.isFinite(Number(crashPoint)) ? Number(crashPoint).toFixed(2) : String(crashPoint), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crash-animation\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"backend-info\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Predetermined crash point from backend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this)]\n          }, \"crashed\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-amount-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: halfBet,\n            className: \"bet-btn\",\n            children: \"\\xBD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetBet,\n            className: \"bet-btn\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doubleBet,\n            className: \"bet-btn\",\n            children: \"2\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: betAmount,\n            onChange: e => setBetAmount(Math.max(1, parseInt(e.target.value) || 1)),\n            min: \"1\",\n            max: balance,\n            className: \"bet-amount-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-chips\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(1),\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(5),\n            children: \"+5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(10),\n            children: \"+10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(50),\n            children: \"+50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(100),\n            children: \"+100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: setMaxBet,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip outline\",\n            onClick: clearBet,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [!isBetPlaced && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: placeBet,\n            className: \"place-bet-btn\",\n            disabled: gameState !== 'waiting' || balance < betAmount,\n            title: gameState !== 'waiting' ? 'You can only place a bet during the waiting phase.' : balance < betAmount ? 'Insufficient balance.' : 'Place your bet.',\n            children: [\"Place Bet $\", betAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this), isBetPlaced && gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cashout,\n            className: \"cashout-btn\",\n            children: [\"Cashout $\", (betAmount * multiplier).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this), !isBetPlaced && gameState !== 'waiting' && (isBetQueued ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queued-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"queued-badge\",\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelQueuedBet,\n              className: \"queue-cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: queueBetForNextRound,\n            className: \"queue-bet-btn\",\n            children: [\"Queue $\", betAmount, \" for next round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-line\",\n            children: [\"Potential at \", autoCashoutValue.toFixed(2), \"x: $\", (betAmount * autoCashoutValue).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`,\n            children: isBetPlaced ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Active in Round \", roundNumber]\n            }, void 0, true) : isBetQueued ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"No active bet\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-cashout-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"auto-cashout-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoCashout,\n            onChange: e => setIsAutoCashout(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 13\n          }, this), \"Auto Cashout at\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: autoCashoutValue,\n          onChange: e => setAutoCashoutValue(parseFloat(e.target.value) || 2.00),\n          min: \"1.01\",\n          step: \"0.01\",\n          className: \"auto-cashout-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-grid\",\n        children: gameHistory.map((result, index) => {\n          const num = Number(result);\n          const safeNum = Number.isFinite(num) ? num : 0;\n          const color = safeNum >= 2 ? 'green' : safeNum >= 1.5 ? 'orange' : 'red';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `history-item ${color}`,\n            children: [Number.isFinite(num) ? num.toFixed(2) : String(result), \"x\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bet-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Bet History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-history-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Payout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), betHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-empty\",\n          children: \"No bets yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this), betHistory.map((b, i) => {\n          var _b$game;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"#\", b.round || ((_b$game = b.game) === null || _b$game === void 0 ? void 0 : _b$game.round_number)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.payout).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profit\",\n              children: `${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Place your bet before the game starts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Watch the multiplier increase from 1.00x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Cash out before it crashes to win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Set auto cashout for automatic wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backend-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Backend Controlled:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }, this), \" Crash points are predetermined from your custom odds configuration\", currentOdds && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"odds-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Current Odds Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 18\n            }, this), \" \", currentOdds.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Early Crash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 18\n            }, this), \" \", currentOdds.early_crash_probability, \"% (\", currentOdds.early_crash_min, \"x - \", currentOdds.early_crash_max, \"x)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"High Crash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 18\n            }, this), \" \", currentOdds.high_crash_min, \"x - \", currentOdds.high_crash_max, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this), currentOdds.use_custom_points && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Custom Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 20\n            }, this), \" \", ((_currentOdds$custom_c2 = currentOdds.custom_crash_points) === null || _currentOdds$custom_c2 === void 0 ? void 0 : _currentOdds$custom_c2.split(',').length) || 0, \" predetermined crash points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 644,\n    columnNumber: 5\n  }, this);\n};\n_s(Aviator, \"lyx2LjyfGCpx5r+7uWULLhaEblY=\");\n_c = Aviator;\nexport default Aviator;\nvar _c;\n$RefreshReg$(_c, \"Aviator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","_","Aviator","_s","_currentOdds$custom_c","_currentOdds$custom_c2","TICK_MS","MULTIPLIER_INCREMENT","RATE_PER_SECOND","gameState","setGameState","multiplier","setMultiplier","betAmount","setBetAmount","balance","setBalance","isBetPlaced","setIsBetPlaced","gameHistory","setGameHistory","timeLeft","setTimeLeft","crashPoint","setCrashPoint","isAutoCashout","setIsAutoCashout","autoCashoutValue","setAutoCashoutValue","roundNumber","setRoundNumber","isBetQueued","setIsBetQueued","queuedBetAmount","setQueuedBetAmount","betHistory","setBetHistory","currentGame","setCurrentGame","error","setError","currentOdds","setCurrentOdds","isLoading","setIsLoading","countdownEndAt","setCountdownEndAt","gameInterval","countdownInterval","gameCheckInterval","gameTimeout","isRunningRef","gameStateRef","playingPollInterval","current","extractApiError","_error$response","_error$response2","status","response","data","detail","message","fetchBalance","console","log","get","_error$response3","fetchCurrentOdds","_error$response4","calculateInitialMultiplier","game","now","Date","started_at","started","elapsed","Math","floor","calculatedMultiplier","Number","crash_point","toFixed","isFinite","finalMultiplier","min","calculateRemainingTime","currentMultiplier","remainingMultiplier","max","ceil","fetchCurrentGame","round_number","initialMultiplier","created","created_at","remaining","remainingTime","_error$response5","getCurrentGameRaw","fetchGameHistory","numericHistory","Array","isArray","map","filter","value","_error$response6","fetchBetHistory","_error$response7","placeBet","notEnough","wrongState","alreadyPlaced","post","amount","cashout","prev","bet","slice","startNewGame","clearInterval","setInterval","remainingMs","endAt","secondsLeft","latestGame","initialMul","startGame","waitForCrashPointAndStart","fallbackCrashPoint","startTime","maxWaitMs","crashPointToUse","g","Promise","r","setTimeout","backendCrashPoint","initialMultiplierOverride","clearTimeout","numericCrashPoint","targetCrashPoint","startMultiplier","estimatedTicks","estimatedMsToCrash","newMultiplier","round","result","cashoutMultiplier","payout","profit","doubleBet","halfBet","resetBet","addChip","next","setMaxBet","clearBet","queueBetForNextRound","cancelQueuedBet","all","catch","undefined","finally","initializeComponent","syncData","timer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","mode","initial","div","opacity","scale","animate","exit","use_custom_points","custom_crash_points","split","length","y","rotate","transition","duration","repeat","Infinity","ease","String","type","onChange","e","parseInt","target","disabled","title","checked","parseFloat","step","index","num","safeNum","color","b","i","_b$game","cashout_multiplier","early_crash_probability","early_crash_min","early_crash_max","high_crash_min","high_crash_max","_c","$RefreshReg$"],"sources":["C:/Users/Antoo/Desktop/betting/betsite/frontend/src/components/Aviator.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\n\n// Set the base URL for API calls (env override, default to local backend)\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\n// Attach JWT token if present\naxios.interceptors.request.use((config) => {\n  try {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers = config.headers || {};\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (_) {}\n  return config;\n});\n\nconst Aviator = () => {\n  // Game speed configuration\n  const TICK_MS = 100;               // update interval during playing phase\n  const MULTIPLIER_INCREMENT = 0.005; // increment per tick\n  const RATE_PER_SECOND = (1000 / TICK_MS) * MULTIPLIER_INCREMENT; // growth per second\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [isBetQueued, setIsBetQueued] = useState(false);\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentOdds, setCurrentOdds] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [countdownEndAt, setCountdownEndAt] = useState(null);\n  \n  const gameInterval = useRef(null);\n  const countdownInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n  const gameTimeout = useRef(null);\n  const isRunningRef = useRef(false);\n  const gameStateRef = useRef(gameState);\n  const playingPollInterval = useRef(null);\n\n  useEffect(() => {\n    gameStateRef.current = gameState;\n  }, [gameState]);\n\n  // API calls\n  const extractApiError = (error) => {\n    try {\n      const status = error?.response?.status;\n      const data = error?.response?.data;\n      const detail = data?.error || data?.detail || data?.message;\n      if (status || detail) {\n        return `Error${status ? ` ${status}` : ''}: ${detail || 'Request failed'}`;\n      }\n      if (error?.message) return error.message;\n      return 'Request failed';\n    } catch (_) {\n      return 'Request failed';\n    }\n  };\n  const fetchBalance = async () => {\n    try {\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/`);\n      console.log('Balance response:', response.data);\n      setBalance(response.data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      console.error('Error details:', error.response?.data);\n      setBalance(1000);\n    }\n  };\n\n  const fetchCurrentOdds = async () => {\n    try {\n      console.log('Fetching odds from:', `${API_BASE_URL}/api/aviator/current-odds/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-odds/`);\n      console.log('Odds response:', response.data);\n      setCurrentOdds(response.data);\n    } catch (error) {\n      console.error('Error fetching current odds:', error);\n      console.error('Error details:', error.response?.data);\n      setCurrentOdds(null);\n    }\n  };\n\n  // Calculate initial multiplier based on current game state and elapsed time\n  const calculateInitialMultiplier = (game) => {\n    if (!game) return 1.00;\n    \n    const now = new Date();\n    \n    if (game.status === 'waiting') {\n      // For waiting games, always start at 1.00x\n      return 1.00;\n    } else if (game.status === 'active') {\n      // For active games, calculate based on elapsed time since start\n      if (game.started_at) {\n        const started = new Date(game.started_at);\n        const elapsed = Math.floor((now - started) / 1000);\n        const calculatedMultiplier = 1.00 + (elapsed * RATE_PER_SECOND);\n        const crashPoint = Number(game.crash_point);\n        \n        console.log(`Calculating initial multiplier: elapsed=${elapsed}s, calculated=${calculatedMultiplier.toFixed(3)}x, crashPoint=${crashPoint}x`);\n        \n        // Don't exceed crash point\n        if (Number.isFinite(crashPoint) && crashPoint > 1) {\n          const finalMultiplier = Math.min(calculatedMultiplier, crashPoint);\n          console.log(`Final initial multiplier: ${finalMultiplier.toFixed(3)}x`);\n          return finalMultiplier;\n        }\n        return calculatedMultiplier;\n      }\n      return 1.00;\n    } else if (game.status === 'crashed') {\n      // For crashed games, show the final crash point\n      return Number(game.crash_point) || 1.00;\n    }\n    \n    return 1.00;\n  };\n\n  // Calculate remaining time for active games\n  const calculateRemainingTime = (game) => {\n    if (!game || game.status !== 'active' || !game.started_at) return 0;\n    \n    const now = new Date();\n    const started = new Date(game.started_at);\n    const elapsed = Math.floor((now - started) / 1000);\n    const crashPoint = Number(game.crash_point);\n    \n    if (Number.isFinite(crashPoint) && crashPoint > 1) {\n      // Calculate time to crash based on current multiplier\n      const currentMultiplier = 1.00 + (elapsed * RATE_PER_SECOND);\n      if (currentMultiplier >= crashPoint) {\n        return 0; // Already crashed\n      }\n      const remainingMultiplier = crashPoint - currentMultiplier;\n      return Math.max(0, Math.ceil(remainingMultiplier / RATE_PER_SECOND));\n    }\n    \n    return 0;\n  };\n\n  const fetchCurrentGame = async () => {\n    try {\n      console.log('Fetching game from:', `${API_BASE_URL}/api/aviator/current-game/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      const game = response.data;\n      console.log('Game response:', game);\n      setCurrentGame(game);\n      setRoundNumber(game.round_number);\n      \n      // Calculate initial multiplier based on current game state\n      const initialMultiplier = calculateInitialMultiplier(game);\n      setMultiplier(initialMultiplier);\n      \n      if (game.status === 'waiting') {\n        setGameState('waiting');\n        setCrashPoint(Number(game.crash_point));\n        const created = new Date(game.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 10 - elapsed); // Changed from 5 to 10 seconds to match backend\n        setTimeLeft(remaining);\n        setCountdownEndAt(Date.now() + remaining * 1000);\n      } else if (game.status === 'active') {\n        setGameState('playing');\n        setCrashPoint(Number(game.crash_point));\n        \n        // Calculate remaining time to crash\n        const remainingTime = calculateRemainingTime(game);\n        \n        if (remainingTime <= 0) {\n          // Game should have crashed, update to crashed state\n          setGameState('crashed');\n          setMultiplier(Number(game.crash_point));\n        } else {\n          // Continue the game from current multiplier\n          console.log(`Game is active, continuing from ${initialMultiplier.toFixed(3)}x with ${remainingTime}s remaining`);\n        }\n      } else if (game.status === 'crashed') {\n        setGameState('crashed');\n        setCrashPoint(Number(game.crash_point));\n        setMultiplier(Number(game.crash_point));\n      }\n      return game;\n    } catch (error) {\n      console.error('Error fetching current game:', error);\n      console.error('Error details:', error.response?.data);\n      return null;\n    }\n  };\n\n  // Raw fetch used when we need the latest crash point without altering UI state\n  const getCurrentGameRaw = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  const fetchGameHistory = async () => {\n    try {\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\n      console.log('Game history response:', response.data);\n      // Ensure we store numeric crash points only\n      const numericHistory = (Array.isArray(response.data) ? response.data : [])\n        .map(game => Number(game?.crash_point))\n        .filter(value => Number.isFinite(value));\n      setGameHistory(numericHistory);\n    } catch (error) {\n      console.error('Error fetching game history:', error);\n      console.error('Error details:', error.response?.data);\n    }\n  };\n\n  const fetchBetHistory = async () => {\n    try {\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\n      console.log('Bet history response:', response.data);\n      setBetHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching bet history:', error);\n      console.error('Error details:', error.response?.data);\n    }\n  };\n\n  // Place bet\n  const placeBet = async () => {\n    const notEnough = balance < betAmount;\n    const wrongState = gameState !== 'waiting';\n    const alreadyPlaced = isBetPlaced;\n    if (notEnough || wrongState || alreadyPlaced) {\n      if (notEnough) setError('Insufficient balance to place this bet.');\n      else if (wrongState) setError('You can only place a bet during the waiting phase.');\n      else if (alreadyPlaced) setError('Bet already placed for this round.');\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\n        amount: Math.floor(betAmount)\n      });\n      setBalance(response.data.balance);\n      setIsBetPlaced(true);\n      setError(null);\n    } catch (error) {\n      console.error('Place bet failed:', error);\n      setError(extractApiError(error));\n      console.error('Error placing bet:', error);\n    }\n  };\n\n  // Cashout\n  const cashout = async () => {\n    if (isBetPlaced && gameState === 'playing') {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\n          round_number: roundNumber,\n          multiplier: multiplier\n        });\n        \n        setBalance(response.data.balance);\n        setIsBetPlaced(false);\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n        setError(null);\n      } catch (error) {\n        console.error('Cashout failed:', error);\n        setError(extractApiError(error));\n        console.error('Error cashing out:', error);\n      }\n    }\n  };\n\n  // Start new game\n  const startNewGame = () => {\n    // Ensure no overlapping countdowns\n    if (countdownInterval.current) {\n      clearInterval(countdownInterval.current);\n      countdownInterval.current = null;\n    }\n    \n    if (currentGame && currentGame.crash_point) {\n      setCrashPoint(Number(currentGame.crash_point));\n      \n      if (currentGame.status === 'waiting') {\n        // Game is waiting, start countdown\n        setGameState('waiting');\n        setMultiplier(1.00);\n        \n        const created = new Date(currentGame.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 10 - elapsed); // 10 seconds waiting time\n        setTimeLeft(remaining);\n        setCountdownEndAt(Date.now() + remaining * 1000);\n        \n        countdownInterval.current = setInterval(async () => {\n          const remainingMs = endAt - Date.now();\n          const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n          setTimeLeft(prev => (prev !== secondsLeft ? secondsLeft : prev));\n          if (secondsLeft <= 0) {\n            clearInterval(countdownInterval.current);\n            countdownInterval.current = null;\n            // Check backend status and start with proper initial multiplier\n            const latestGame = await getCurrentGameRaw();\n            if (latestGame && latestGame.status === 'active') {\n              const initialMul = calculateInitialMultiplier(latestGame);\n              startGame(latestGame.crash_point, initialMul);\n            } else {\n              await waitForCrashPointAndStart();\n            }\n          }\n        }, 100);\n        \n      } else if (currentGame.status === 'active') {\n        // Game is already active, continue from current state\n        const initialMul = calculateInitialMultiplier(currentGame);\n        const remainingTime = calculateRemainingTime(currentGame);\n        \n        if (remainingTime <= 0) {\n          // Game should have crashed\n          setGameState('crashed');\n          setMultiplier(Number(currentGame.crash_point));\n        } else {\n          // Continue the active game\n          startGame(currentGame.crash_point, initialMul);\n        }\n        \n      } else if (currentGame.status === 'crashed') {\n        // Game has crashed, show final state\n        setGameState('crashed');\n        setMultiplier(Number(currentGame.crash_point));\n      }\n    } else {\n      // No game from backend yet; wait 5s, then try to fetch and start again\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      const endAt = Date.now() + 5000;\n      setCountdownEndAt(endAt);\n      countdownInterval.current = setInterval(async () => {\n        const remainingMs = endAt - Date.now();\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n        setTimeLeft(prev => (prev !== secondsLeft ? secondsLeft : prev));\n        if (secondsLeft <= 0) {\n          clearInterval(countdownInterval.current);\n          countdownInterval.current = null;\n          const latestGame = await getCurrentGameRaw();\n          if (latestGame && latestGame.status === 'active') {\n            const initialMul = calculateInitialMultiplier(latestGame);\n            startGame(latestGame.crash_point, initialMul);\n          } else {\n            await waitForCrashPointAndStart();\n          }\n        }\n      }, 100);\n    }\n  };\n\n  // Wait briefly for backend to provide a crash point, then start immediately\n  const waitForCrashPointAndStart = async (fallbackCrashPoint) => {\n    const startTime = Date.now();\n    const maxWaitMs = 5000;\n    let crashPointToUse = null;\n    while (Date.now() - startTime < maxWaitMs) {\n      const g = await getCurrentGameRaw();\n      if (g && Number(g.crash_point) > 1) {\n        crashPointToUse = Number(g.crash_point);\n        break;\n      }\n      // Small delay before next attempt\n      await new Promise(r => setTimeout(r, 250));\n    }\n    if (crashPointToUse == null && Number(fallbackCrashPoint) > 1) {\n      crashPointToUse = Number(fallbackCrashPoint);\n    }\n    if (crashPointToUse != null) {\n      startGame(crashPointToUse);\n    } else {\n      // If still no crash point, start a new waiting cycle\n      startNewGame();\n    }\n  };\n\n  // Start the actual game\n  const startGame = (backendCrashPoint, initialMultiplierOverride) => {\n    if (isRunningRef.current) return;\n    // Clear any prior timers\n    if (gameInterval.current) clearInterval(gameInterval.current);\n    if (gameTimeout.current) clearTimeout(gameTimeout.current);\n\n    const numericCrashPoint = Number(backendCrashPoint);\n    const targetCrashPoint = Number.isFinite(numericCrashPoint) && numericCrashPoint > 1\n      ? numericCrashPoint\n      : 1.5;\n\n    const startMultiplier = Number.isFinite(initialMultiplierOverride) && initialMultiplierOverride > 1.0\n      ? initialMultiplierOverride\n      : 1.00;\n\n    console.log('Starting game with crash point:', targetCrashPoint, 'initial multiplier:', startMultiplier);\n    setGameState('playing');\n    setMultiplier(startMultiplier);\n    isRunningRef.current = true;\n\n    // Safety timeout in case interval misses the boundary, using configured tick/speed\n    const estimatedTicks = Math.max(0, Math.ceil((targetCrashPoint - startMultiplier) / MULTIPLIER_INCREMENT));\n    const estimatedMsToCrash = estimatedTicks * TICK_MS + 200;\n    gameTimeout.current = setTimeout(() => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      setGameState('crashed');\n      setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n      isRunningRef.current = false;\n    }, estimatedMsToCrash);\n\n    gameInterval.current = setInterval(() => {\n      setMultiplier(prev => {\n        const newMultiplier = prev + MULTIPLIER_INCREMENT;\n\n        if (newMultiplier >= targetCrashPoint) {\n          clearInterval(gameInterval.current);\n          if (gameTimeout.current) clearTimeout(gameTimeout.current);\n          setGameState('crashed');\n          setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n          isRunningRef.current = false;\n\n          if (isBetPlaced) {\n            setIsBetPlaced(false);\n            setBetHistory(prev => [\n              {\n                round: roundNumber,\n                amount: betAmount,\n                result: 'crash',\n                cashoutMultiplier: null,\n                payout: 0,\n                profit: -betAmount\n              },\n              ...prev.slice(0, 19)\n            ]);\n          }\n\n          return targetCrashPoint;\n        }\n\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\n          cashout();\n        }\n\n        return newMultiplier;\n      });\n    }, TICK_MS);\n  };\n\n  // Bet controls\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n\n  const addChip = (amount) => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  \n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  \n  const clearBet = () => {\n    setBetAmount(1);\n  };\n  \n  const queueBetForNextRound = () => {\n    if (!isBetPlaced && balance >= betAmount) {\n      setQueuedBetAmount(betAmount);\n      setIsBetQueued(true);\n    }\n  };\n  \n  const cancelQueuedBet = () => {\n    setIsBetQueued(false);\n  };\n\n  // Effects\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      // Refresh relevant data at the end of each round\n      Promise.all([\n        fetchBalance().catch(() => undefined),\n        fetchGameHistory().catch(() => undefined),\n        fetchBetHistory().catch(() => undefined),\n      ]).finally(() => {\n        startNewGame();\n      });\n    }\n  }, [gameState]);\n\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n      if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates (run once on mount)\n  useEffect(() => {\n    console.log('Aviator component mounted - starting initialization');\n    setIsLoading(true);\n    \n    const initializeComponent = async () => {\n      try {\n        console.log('Starting API calls...');\n        await Promise.all([\n          fetchBalance(),\n          fetchCurrentOdds(),\n          fetchCurrentGame().catch(() => undefined),\n          fetchGameHistory(),\n          fetchBetHistory()\n        ]);\n        console.log('All API calls completed');\n      } catch (error) {\n        console.error('Error during initialization:', error);\n      } finally {\n        setIsLoading(false);\n        console.log('Component initialization complete');\n      }\n    };\n    \n    initializeComponent();\n    \n    // Check for game updates every 2 seconds (ignore failures). Avoid disrupting local transitions.\n    if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    gameCheckInterval.current = setInterval(async () => {\n      try {\n        // Use the sync endpoint for better synchronization\n        const response = await axios.get(`${API_BASE_URL}/api/aviator/sync/`);\n        const syncData = response.data;\n        const game = syncData.game;\n        \n        // Update round number and crash point\n        setRoundNumber(game.round_number);\n        setCrashPoint(Number(game.crash_point));\n        \n        // Only update game state if we're in waiting phase to avoid disrupting active games\n        if (gameStateRef.current === 'waiting') {\n          if (game.status === 'active') {\n            // Game has started, calculate initial multiplier and continue\n            const initialMul = calculateInitialMultiplier(game);\n            const remainingTime = calculateRemainingTime(game);\n            \n            if (remainingTime > 0) {\n              console.log(`Game started, continuing from ${initialMul.toFixed(3)}x`);\n              startGame(game.crash_point, initialMul);\n            }\n          }\n        }\n      } catch (error) {\n        // Ignore sync errors to avoid disrupting game flow\n        console.log('Sync check failed (non-critical):', error.message);\n      }\n    }, 2000);\n    \n    // Initial game start - check if we need to start immediately or wait\n    const timer = setTimeout(async () => {\n      console.log('Starting initial game...');\n      \n      // Check if we already have a game state that needs immediate handling\n      if (currentGame) {\n        if (currentGame.status === 'active') {\n          // Game is already active, continue from current state\n          const initialMul = calculateInitialMultiplier(currentGame);\n          const remainingTime = calculateRemainingTime(currentGame);\n          \n          if (remainingTime <= 0) {\n            // Game should have crashed, update state\n            setGameState('crashed');\n            setMultiplier(Number(currentGame.crash_point));\n          } else {\n            // Continue the active game\n            startGame(currentGame.crash_point, initialMul);\n          }\n        } else {\n          // Start normal game flow\n          startNewGame();\n        }\n      } else {\n        // No game data yet, start normal flow\n        startNewGame();\n      }\n    }, 1000);\n    \n    return () => {\n      console.log('Cleaning up Aviator component');\n      clearTimeout(timer);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []);\n\n  console.log('Rendering Aviator component, currentOdds:', currentOdds, 'isLoading:', isLoading);\n\n  if (isLoading) {\n    return (\n      <div className=\"aviator-container\">\n        <div className=\"loading-state\">\n          <h2>Loading Aviator Game...</h2>\n          <div className=\"loading-spinner\">⏳</div>\n          <p>Connecting to backend...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"aviator-container\">\n      <div className=\"aviator-header\">\n        <h1>Aviator</h1>\n        <div className=\"balance-display\">\n          Balance: ${balance.toFixed(2)}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <strong>Error:</strong> {error}\n          <button onClick={() => setError(null)} className=\"error-close\">×</button>\n        </div>\n      )}\n\n      <div className=\"debug-info\">\n        <small>API Base: {API_BASE_URL}</small>\n        <small>Current Odds: {currentOdds ? currentOdds.name : 'None'}</small>\n        <small>Game State: {gameState}</small>\n        <small>Round: #{roundNumber}</small>\n      </div>\n\n      <div className=\"game-area\">\n        <div className=\"multiplier-display\">\n          <AnimatePresence mode=\"wait\" initial={false}>\n            {gameState === 'waiting' && (\n              <motion.div\n                key=\"waiting\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                className=\"waiting-state\"\n              >\n                <h2>Next game in {timeLeft}s</h2>\n                <div className=\"countdown-circle\">\n                  <span>{timeLeft}</span>\n                </div>\n                <div className=\"round-info\">Round #{roundNumber}</div>\n                {currentOdds && (\n                  <div className=\"odds-info\">\n                    <small>Using: {currentOdds.name}</small>\n                    {currentOdds.use_custom_points && (\n                      <small>Custom Points: {currentOdds.custom_crash_points?.split(',').length || 0}</small>\n                    )}\n                  </div>\n                )}\n              </motion.div>\n            )}\n            \n            {gameState === 'playing' && (\n              <motion.div\n                key=\"playing\"\n                initial={false}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"playing-state\"\n              >\n                <h2 className=\"multiplier-text\">\n                  {multiplier.toFixed(2)}x\n                </h2>\n                <motion.div\n                  className=\"airplane\"\n                  animate={{\n                    y: [0, -20, 0],\n                    rotate: [0, 5, -5, 0]\n                  }}\n                  transition={{\n                    duration: 2,\n                    repeat: Infinity,\n                    ease: \"easeInOut\"\n                  }}\n                >\n                  ✈️\n                </motion.div>\n                <div className=\"round-info\">Round #{roundNumber}</div>\n              </motion.div>\n            )}\n            \n            {gameState === 'crashed' && (\n              <motion.div\n                key=\"crashed\"\n                initial={false}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"crashed-state\"\n              >\n                <h2 className=\"crash-text\">CRASHED AT {Number.isFinite(Number(crashPoint)) ? Number(crashPoint).toFixed(2) : String(crashPoint)}x</h2>\n                <div className=\"crash-animation\">\n                  💥\n                </div>\n                <div className=\"round-info\">Round #{roundNumber}</div>\n                <div className=\"backend-info\">\n                  <small>Predetermined crash point from backend</small>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n\n        <div className=\"betting-controls\">\n          <div className=\"bet-amount-controls\">\n            <button onClick={halfBet} className=\"bet-btn\">½</button>\n            <button onClick={resetBet} className=\"bet-btn\">Reset</button>\n            <button onClick={doubleBet} className=\"bet-btn\">2×</button>\n          </div>\n          \n          <div className=\"bet-input\">\n            <input\n              type=\"number\"\n              value={betAmount}\n              onChange={(e) => setBetAmount(Math.max(1, parseInt(e.target.value) || 1))}\n              min=\"1\"\n              max={balance}\n              className=\"bet-amount-input\"\n            />\n          </div>\n\n          <div className=\"quick-chips\">\n            <button className=\"chip\" onClick={() => addChip(1)}>+1</button>\n            <button className=\"chip\" onClick={() => addChip(5)}>+5</button>\n            <button className=\"chip\" onClick={() => addChip(10)}>+10</button>\n            <button className=\"chip\" onClick={() => addChip(50)}>+50</button>\n            <button className=\"chip\" onClick={() => addChip(100)}>+100</button>\n            <button className=\"chip\" onClick={setMaxBet}>Max</button>\n            <button className=\"chip outline\" onClick={clearBet}>Clear</button>\n          </div>\n          \n          <div className=\"action-buttons\">\n            {!isBetPlaced && (\n              <button\n                onClick={placeBet}\n                className=\"place-bet-btn\"\n                disabled={gameState !== 'waiting' || balance < betAmount}\n                title={\n                  gameState !== 'waiting'\n                    ? 'You can only place a bet during the waiting phase.'\n                    : balance < betAmount\n                    ? 'Insufficient balance.'\n                    : 'Place your bet.'\n                }\n              >\n                Place Bet ${betAmount}\n              </button>\n            )}\n            \n            {isBetPlaced && gameState === 'playing' && (\n              <button onClick={cashout} className=\"cashout-btn\">\n                Cashout ${(betAmount * multiplier).toFixed(2)}\n              </button>\n            )}\n\n            {!isBetPlaced && gameState !== 'waiting' && (\n              isBetQueued ? (\n                <div className=\"queued-controls\">\n                  <span className=\"queued-badge\">Queued ${queuedBetAmount} for next round</span>\n                  <button onClick={cancelQueuedBet} className=\"queue-cancel-btn\">Cancel</button>\n                </div>\n              ) : (\n                <button onClick={queueBetForNextRound} className=\"queue-bet-btn\">\n                  Queue ${betAmount} for next round\n                </button>\n              )\n            )}\n          </div>\n\n          <div className=\"bet-summary\">\n            <div className=\"summary-line\">\n              Potential at {autoCashoutValue.toFixed(2)}x: ${ (betAmount * autoCashoutValue).toFixed(2) }\n            </div>\n            <div className={`bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`}>\n              {isBetPlaced ? (\n                <>Active in Round {roundNumber}</>\n              ) : isBetQueued ? (\n                <>Queued ${queuedBetAmount} for next round</>\n              ) : (\n                <>No active bet</>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"auto-cashout-section\">\n          <label className=\"auto-cashout-label\">\n            <input\n              type=\"checkbox\"\n              checked={isAutoCashout}\n              onChange={(e) => setIsAutoCashout(e.target.checked)}\n            />\n            Auto Cashout at\n          </label>\n          <input\n            type=\"number\"\n            value={autoCashoutValue}\n            onChange={(e) => setAutoCashoutValue(parseFloat(e.target.value) || 2.00)}\n            min=\"1.01\"\n            step=\"0.01\"\n            className=\"auto-cashout-input\"\n          />\n          <span>x</span>\n        </div>\n      </div>\n\n      <div className=\"game-history\">\n        <h3>Recent Results</h3>\n        <div className=\"history-grid\">\n          {gameHistory.map((result, index) => {\n            const num = Number(result);\n            const safeNum = Number.isFinite(num) ? num : 0;\n            const color = safeNum >= 2 ? 'green' : safeNum >= 1.5 ? 'orange' : 'red';\n            return (\n              <div key={index} className={`history-item ${color}`}>\n                {Number.isFinite(num) ? num.toFixed(2) : String(result)}x\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"bet-history\">\n        <h3>Your Bet History</h3>\n        <div className=\"bet-history-table\">\n          <div className=\"bet-history-header\">\n            <span>Round</span>\n            <span>Stake</span>\n            <span>Outcome</span>\n            <span>Payout</span>\n            <span>Profit</span>\n          </div>\n          {betHistory.length === 0 && (\n            <div className=\"bet-history-empty\">No bets yet</div>\n          )}\n          {betHistory.map((b, i) => (\n            <div className={`bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`} key={i}>\n              <span>#{b.round || b.game?.round_number}</span>\n              <span>${Number(b.amount).toFixed(2)}</span>\n              <span>{b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'}</span>\n              <span>${Number(b.payout).toFixed(2)}</span>\n              <span className=\"profit\">{`${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"game-info\">\n        <h3>How to Play</h3>\n        <ul>\n          <li>Place your bet before the game starts</li>\n          <li>Watch the multiplier increase from 1.00x</li>\n          <li>Cash out before it crashes to win!</li>\n          <li>Set auto cashout for automatic wins</li>\n        </ul>\n        <div className=\"backend-info\">\n          <strong>Backend Controlled:</strong> Crash points are predetermined from your custom odds configuration\n          {currentOdds && (\n            <div className=\"odds-details\">\n              <p><strong>Current Odds Set:</strong> {currentOdds.name}</p>\n              <p><strong>Early Crash:</strong> {currentOdds.early_crash_probability}% ({currentOdds.early_crash_min}x - {currentOdds.early_crash_max}x)</p>\n              <p><strong>High Crash:</strong> {currentOdds.high_crash_min}x - {currentOdds.high_crash_max}x</p>\n              {currentOdds.use_custom_points && (\n                <p><strong>Custom Points:</strong> {currentOdds.custom_crash_points?.split(',').length || 0} predetermined crash points</p>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Aviator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}