{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRODUCTION KAP\\\\3D Objects\\\\bb\\\\betsite\\\\frontend\\\\src\\\\components\\\\Aviator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Aviator = () => {\n  _s();\n  const [gameState, setGameState] = useState('waiting'); // waiting, playing, crashed\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [isBetQueued, setIsBetQueued] = useState(false);\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const gameInterval = useRef(null);\n  const countdownInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n\n  // API calls\n  const fetchBalance = async () => {\n    try {\n      const response = await axios.get('/api/aviator/balance/');\n      setBalance(response.data.balance);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      // Use demo balance if not authenticated\n      setBalance(1000);\n    }\n  };\n  const fetchCurrentGame = async () => {\n    try {\n      const response = await axios.get('/api/aviator/current-game/');\n      const game = response.data;\n      setCurrentGame(game);\n      setRoundNumber(game.round_number);\n      if (game.status === 'waiting') {\n        setGameState('waiting');\n        setMultiplier(1.00);\n        // Calculate time left based on when game was created\n        const created = new Date(game.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 5 - elapsed);\n        setTimeLeft(remaining);\n      } else if (game.status === 'active') {\n        setGameState('playing');\n        setMultiplier(1.00);\n        // Calculate current multiplier based on when game started\n        const started = new Date(game.started_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - started) / 1000);\n        const currentMultiplier = 1.00 + elapsed * 0.01;\n        setMultiplier(Math.min(currentMultiplier, game.crash_point));\n      } else if (game.status === 'crashed') {\n        setGameState('crashed');\n        setCrashPoint(game.crash_point);\n        setMultiplier(game.crash_point);\n      }\n    } catch (error) {\n      console.error('Error fetching current game:', error);\n    }\n  };\n  const fetchGameHistory = async () => {\n    try {\n      const response = await axios.get('/api/aviator/game-history/');\n      setGameHistory(response.data.map(game => game.crash_point));\n    } catch (error) {\n      console.error('Error fetching game history:', error);\n    }\n  };\n  const fetchBetHistory = async () => {\n    try {\n      const response = await axios.get('/api/aviator/history/');\n      setBetHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching bet history:', error);\n    }\n  };\n\n  // Place bet\n  const placeBet = async () => {\n    if (balance >= betAmount && !isBetPlaced && gameState === 'waiting') {\n      try {\n        const response = await axios.post('/api/aviator/place-bet/', {\n          amount: betAmount\n        });\n        setBalance(response.data.balance);\n        setIsBetPlaced(true);\n        setError(null);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to place bet');\n        console.error('Error placing bet:', error);\n      }\n    }\n  };\n\n  // Cashout\n  const cashout = async () => {\n    if (isBetPlaced && gameState === 'playing') {\n      try {\n        const response = await axios.post('/api/aviator/cashout/', {\n          round_number: roundNumber,\n          multiplier: multiplier\n        });\n        setBalance(response.data.balance);\n        setIsBetPlaced(false);\n\n        // Add to history\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n        setError(null);\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to cashout');\n        console.error('Error cashing out:', error);\n      }\n    }\n  };\n\n  // Generate random crash point (fallback for demo mode)\n  const generateCrashPoint = () => {\n    return Math.random() < 0.5 ? Math.random() * 2 + 1 : Math.random() * 98 + 2;\n  };\n\n  // Start new game\n  const startNewGame = () => {\n    if (currentGame) {\n      // Use backend game data\n      setCrashPoint(currentGame.crash_point);\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n\n      // Start countdown\n      countdownInterval.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(countdownInterval.current);\n            startGame(currentGame.crash_point);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      // Fallback to demo mode\n      const newCrashPoint = generateCrashPoint();\n      setCrashPoint(newCrashPoint);\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      countdownInterval.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(countdownInterval.current);\n            startGame(newCrashPoint);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n  };\n\n  // Start the actual game\n  const startGame = crashPoint => {\n    setGameState('playing');\n    setMultiplier(1.00);\n    gameInterval.current = setInterval(() => {\n      setMultiplier(prev => {\n        const newMultiplier = prev + 0.01;\n        if (newMultiplier >= crashPoint) {\n          // Game crashed\n          clearInterval(gameInterval.current);\n          setGameState('crashed');\n\n          // Add to history\n          setGameHistory(prev => [crashPoint, ...prev.slice(0, 9)]);\n\n          // Handle bet loss\n          if (isBetPlaced) {\n            setIsBetPlaced(false);\n            // Add to bet history\n            setBetHistory(prev => [{\n              round: roundNumber,\n              amount: betAmount,\n              result: 'crash',\n              cashoutMultiplier: null,\n              payout: 0,\n              profit: -betAmount\n            }, ...prev.slice(0, 19)]);\n          }\n          return crashPoint;\n        }\n\n        // Check auto cashout\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\n          cashout();\n        }\n        return newMultiplier;\n      });\n    }, 50);\n  };\n\n  // Double bet\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n\n  // Half bet\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n\n  // Reset bet\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n\n  // Quick chips and queue controls\n  const addChip = amount => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  const clearBet = () => {\n    setBetAmount(1);\n  };\n  const queueBetForNextRound = () => {\n    if (!isBetPlaced && balance >= betAmount) {\n      setQueuedBetAmount(betAmount);\n      setIsBetQueued(true);\n    }\n  };\n  const cancelQueuedBet = () => {\n    setIsBetQueued(false);\n  };\n\n  // Start new game when current one ends\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      const timer = setTimeout(() => {\n        startNewGame();\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n\n  // Cleanup intervals\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates\n  useEffect(() => {\n    fetchBalance();\n    fetchCurrentGame();\n    fetchGameHistory();\n    fetchBetHistory();\n\n    // Check for game updates every 2 seconds\n    gameCheckInterval.current = setInterval(() => {\n      fetchCurrentGame();\n    }, 2000);\n\n    // Initial game start\n    const timer = setTimeout(() => {\n      startNewGame();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aviator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Aviator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-display\",\n        children: [\"Balance: $\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiplier-display\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: [gameState === 'waiting' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"waiting-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Next game in \", timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"countdown-circle\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: timeLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, \"waiting\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"playing-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"multiplier-text\",\n              children: [multiplier.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"airplane\",\n              animate: {\n                y: [0, -20, 0],\n                rotate: [0, 5, -5, 0]\n              },\n              transition: {\n                duration: 2,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              },\n              children: \"\\u2708\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, \"playing\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"crashed-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"crash-text\",\n              children: [\"CRASHED AT \", crashPoint.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crash-animation\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, \"crashed\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-amount-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: halfBet,\n            className: \"bet-btn\",\n            children: \"\\xBD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetBet,\n            className: \"bet-btn\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doubleBet,\n            className: \"bet-btn\",\n            children: \"2\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: betAmount,\n            onChange: e => setBetAmount(Math.max(1, parseInt(e.target.value) || 1)),\n            min: \"1\",\n            max: balance,\n            className: \"bet-amount-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-chips\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(1),\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(5),\n            children: \"+5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(10),\n            children: \"+10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(50),\n            children: \"+50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(100),\n            children: \"+100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: setMaxBet,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip outline\",\n            onClick: clearBet,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [!isBetPlaced && gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: placeBet,\n            className: \"place-bet-btn\",\n            children: [\"Place Bet $\", betAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), isBetPlaced && gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cashout,\n            className: \"cashout-btn\",\n            children: [\"Cashout $\", (betAmount * multiplier).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), !isBetPlaced && gameState !== 'waiting' && (isBetQueued ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queued-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"queued-badge\",\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelQueuedBet,\n              className: \"queue-cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: queueBetForNextRound,\n            className: \"queue-bet-btn\",\n            children: [\"Queue $\", betAmount, \" for next round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-line\",\n            children: [\"Potential at \", autoCashoutValue.toFixed(2), \"x: $\", (betAmount * autoCashoutValue).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`,\n            children: isBetPlaced ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Active in Round \", roundNumber]\n            }, void 0, true) : isBetQueued ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"No active bet\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-cashout-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"auto-cashout-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoCashout,\n            onChange: e => setIsAutoCashout(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), \"Auto Cashout at\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: autoCashoutValue,\n          onChange: e => setAutoCashoutValue(parseFloat(e.target.value) || 2.00),\n          min: \"1.01\",\n          step: \"0.01\",\n          className: \"auto-cashout-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-grid\",\n        children: gameHistory.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `history-item ${result >= 2 ? 'green' : result >= 1.5 ? 'orange' : 'red'}`,\n          children: [result.toFixed(2), \"x\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bet-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Bet History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-history-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Payout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), betHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-empty\",\n          children: \"No bets yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), betHistory.map((b, i) => {\n          var _b$game;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"#\", b.round || ((_b$game = b.game) === null || _b$game === void 0 ? void 0 : _b$game.round_number)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.payout).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profit\",\n              children: `${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Place your bet before the game starts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Watch the multiplier increase from 1.00x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Cash out before it crashes to win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Set auto cashout for automatic wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backend-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Backend Controlled:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), \" Crash points are predetermined and provably fair\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(Aviator, \"PFggFALMc/T5npWAK84W0vl4UXw=\");\n_c = Aviator;\nexport default Aviator;\nvar _c;\n$RefreshReg$(_c, \"Aviator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Aviator","_s","gameState","setGameState","multiplier","setMultiplier","betAmount","setBetAmount","balance","setBalance","isBetPlaced","setIsBetPlaced","gameHistory","setGameHistory","timeLeft","setTimeLeft","crashPoint","setCrashPoint","isAutoCashout","setIsAutoCashout","autoCashoutValue","setAutoCashoutValue","roundNumber","setRoundNumber","isBetQueued","setIsBetQueued","queuedBetAmount","setQueuedBetAmount","betHistory","setBetHistory","currentGame","setCurrentGame","error","setError","gameInterval","countdownInterval","gameCheckInterval","fetchBalance","response","get","data","console","fetchCurrentGame","game","round_number","status","created","Date","created_at","now","elapsed","Math","floor","remaining","max","started","started_at","currentMultiplier","min","crash_point","fetchGameHistory","map","fetchBetHistory","placeBet","post","amount","_error$response","_error$response$data","cashout","prev","bet","slice","_error$response2","_error$response2$data","generateCrashPoint","random","startNewGame","current","setInterval","clearInterval","startGame","newCrashPoint","newMultiplier","round","result","cashoutMultiplier","payout","profit","doubleBet","halfBet","resetBet","addChip","next","setMaxBet","clearBet","queueBetForNextRound","cancelQueuedBet","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","mode","div","initial","opacity","scale","animate","exit","y","rotate","transition","duration","repeat","Infinity","ease","onClick","type","value","onChange","e","parseInt","target","checked","parseFloat","step","index","length","b","i","_b$game","Number","cashout_multiplier","_c","$RefreshReg$"],"sources":["C:/Users/PRODUCTION KAP/3D Objects/bb/betsite/frontend/src/components/Aviator.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport axios from 'axios';\r\nimport './Aviator.css';\r\n\r\nconst Aviator = () => {\r\n  const [gameState, setGameState] = useState('waiting'); // waiting, playing, crashed\r\n  const [multiplier, setMultiplier] = useState(1.00);\r\n  const [betAmount, setBetAmount] = useState(10);\r\n  const [balance, setBalance] = useState(1000);\r\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\r\n  const [gameHistory, setGameHistory] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(5);\r\n  const [crashPoint, setCrashPoint] = useState(0);\r\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\r\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\r\n  const [roundNumber, setRoundNumber] = useState(0);\r\n  const [isBetQueued, setIsBetQueued] = useState(false);\r\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\r\n  const [betHistory, setBetHistory] = useState([]);\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const gameInterval = useRef(null);\r\n  const countdownInterval = useRef(null);\r\n  const gameCheckInterval = useRef(null);\r\n\r\n  // API calls\r\n  const fetchBalance = async () => {\r\n    try {\r\n      const response = await axios.get('/api/aviator/balance/');\r\n      setBalance(response.data.balance);\r\n    } catch (error) {\r\n      console.error('Error fetching balance:', error);\r\n      // Use demo balance if not authenticated\r\n      setBalance(1000);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentGame = async () => {\r\n    try {\r\n      const response = await axios.get('/api/aviator/current-game/');\r\n      const game = response.data;\r\n      setCurrentGame(game);\r\n      setRoundNumber(game.round_number);\r\n      \r\n      if (game.status === 'waiting') {\r\n        setGameState('waiting');\r\n        setMultiplier(1.00);\r\n        // Calculate time left based on when game was created\r\n        const created = new Date(game.created_at);\r\n        const now = new Date();\r\n        const elapsed = Math.floor((now - created) / 1000);\r\n        const remaining = Math.max(0, 5 - elapsed);\r\n        setTimeLeft(remaining);\r\n      } else if (game.status === 'active') {\r\n        setGameState('playing');\r\n        setMultiplier(1.00);\r\n        // Calculate current multiplier based on when game started\r\n        const started = new Date(game.started_at);\r\n        const now = new Date();\r\n        const elapsed = Math.floor((now - started) / 1000);\r\n        const currentMultiplier = 1.00 + (elapsed * 0.01);\r\n        setMultiplier(Math.min(currentMultiplier, game.crash_point));\r\n      } else if (game.status === 'crashed') {\r\n        setGameState('crashed');\r\n        setCrashPoint(game.crash_point);\r\n        setMultiplier(game.crash_point);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching current game:', error);\r\n    }\r\n  };\r\n\r\n  const fetchGameHistory = async () => {\r\n    try {\r\n      const response = await axios.get('/api/aviator/game-history/');\r\n      setGameHistory(response.data.map(game => game.crash_point));\r\n    } catch (error) {\r\n      console.error('Error fetching game history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchBetHistory = async () => {\r\n    try {\r\n      const response = await axios.get('/api/aviator/history/');\r\n      setBetHistory(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching bet history:', error);\r\n    }\r\n  };\r\n\r\n  // Place bet\r\n  const placeBet = async () => {\r\n    if (balance >= betAmount && !isBetPlaced && gameState === 'waiting') {\r\n      try {\r\n        const response = await axios.post('/api/aviator/place-bet/', {\r\n          amount: betAmount\r\n        });\r\n        \r\n        setBalance(response.data.balance);\r\n        setIsBetPlaced(true);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(error.response?.data?.error || 'Failed to place bet');\r\n        console.error('Error placing bet:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cashout\r\n  const cashout = async () => {\r\n    if (isBetPlaced && gameState === 'playing') {\r\n      try {\r\n        const response = await axios.post('/api/aviator/cashout/', {\r\n          round_number: roundNumber,\r\n          multiplier: multiplier\r\n        });\r\n        \r\n        setBalance(response.data.balance);\r\n        setIsBetPlaced(false);\r\n        \r\n        // Add to history\r\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(error.response?.data?.error || 'Failed to cashout');\r\n        console.error('Error cashing out:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Generate random crash point (fallback for demo mode)\r\n  const generateCrashPoint = () => {\r\n    return Math.random() < 0.5 ? \r\n      Math.random() * 2 + 1 : \r\n      Math.random() * 98 + 2;\r\n  };\r\n\r\n  // Start new game\r\n  const startNewGame = () => {\r\n    if (currentGame) {\r\n      // Use backend game data\r\n      setCrashPoint(currentGame.crash_point);\r\n      setGameState('waiting');\r\n      setMultiplier(1.00);\r\n      setTimeLeft(5);\r\n      \r\n      // Start countdown\r\n      countdownInterval.current = setInterval(() => {\r\n        setTimeLeft(prev => {\r\n          if (prev <= 1) {\r\n            clearInterval(countdownInterval.current);\r\n            startGame(currentGame.crash_point);\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      // Fallback to demo mode\r\n      const newCrashPoint = generateCrashPoint();\r\n      setCrashPoint(newCrashPoint);\r\n      setGameState('waiting');\r\n      setMultiplier(1.00);\r\n      setTimeLeft(5);\r\n      \r\n      countdownInterval.current = setInterval(() => {\r\n        setTimeLeft(prev => {\r\n          if (prev <= 1) {\r\n            clearInterval(countdownInterval.current);\r\n            startGame(newCrashPoint);\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // Start the actual game\r\n  const startGame = (crashPoint) => {\r\n    setGameState('playing');\r\n    setMultiplier(1.00);\r\n    \r\n    gameInterval.current = setInterval(() => {\r\n      setMultiplier(prev => {\r\n        const newMultiplier = prev + 0.01;\r\n        \r\n        if (newMultiplier >= crashPoint) {\r\n          // Game crashed\r\n          clearInterval(gameInterval.current);\r\n          setGameState('crashed');\r\n          \r\n          // Add to history\r\n          setGameHistory(prev => [crashPoint, ...prev.slice(0, 9)]);\r\n          \r\n          // Handle bet loss\r\n          if (isBetPlaced) {\r\n            setIsBetPlaced(false);\r\n            // Add to bet history\r\n            setBetHistory(prev => [\r\n              {\r\n                round: roundNumber,\r\n                amount: betAmount,\r\n                result: 'crash',\r\n                cashoutMultiplier: null,\r\n                payout: 0,\r\n                profit: -betAmount\r\n              },\r\n              ...prev.slice(0, 19)\r\n            ]);\r\n          }\r\n          \r\n          return crashPoint;\r\n        }\r\n        \r\n        // Check auto cashout\r\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\r\n          cashout();\r\n        }\r\n        \r\n        return newMultiplier;\r\n      });\r\n    }, 50);\r\n  };\r\n\r\n  // Double bet\r\n  const doubleBet = () => {\r\n    if (balance >= betAmount * 2) {\r\n      setBetAmount(prev => prev * 2);\r\n    }\r\n  };\r\n\r\n  // Half bet\r\n  const halfBet = () => {\r\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\r\n  };\r\n\r\n  // Reset bet\r\n  const resetBet = () => {\r\n    setBetAmount(10);\r\n  };\r\n\r\n  // Quick chips and queue controls\r\n  const addChip = (amount) => {\r\n    setBetAmount(prev => {\r\n      const next = Math.max(1, prev + amount);\r\n      return Math.min(next, balance);\r\n    });\r\n  };\r\n  \r\n  const setMaxBet = () => {\r\n    setBetAmount(Math.max(1, Math.floor(balance)));\r\n  };\r\n  \r\n  const clearBet = () => {\r\n    setBetAmount(1);\r\n  };\r\n  \r\n  const queueBetForNextRound = () => {\r\n    if (!isBetPlaced && balance >= betAmount) {\r\n      setQueuedBetAmount(betAmount);\r\n      setIsBetQueued(true);\r\n    }\r\n  };\r\n  \r\n  const cancelQueuedBet = () => {\r\n    setIsBetQueued(false);\r\n  };\r\n\r\n  // Start new game when current one ends\r\n  useEffect(() => {\r\n    if (gameState === 'crashed') {\r\n      const timer = setTimeout(() => {\r\n        startNewGame();\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [gameState]);\r\n\r\n  // Cleanup intervals\r\n  useEffect(() => {\r\n    return () => {\r\n      if (gameInterval.current) clearInterval(gameInterval.current);\r\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\r\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\r\n    };\r\n  }, []);\r\n\r\n  // Initialize and periodic updates\r\n  useEffect(() => {\r\n    fetchBalance();\r\n    fetchCurrentGame();\r\n    fetchGameHistory();\r\n    fetchBetHistory();\r\n    \r\n    // Check for game updates every 2 seconds\r\n    gameCheckInterval.current = setInterval(() => {\r\n      fetchCurrentGame();\r\n    }, 2000);\r\n    \r\n    // Initial game start\r\n    const timer = setTimeout(() => {\r\n      startNewGame();\r\n    }, 1000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"aviator-container\">\r\n      <div className=\"aviator-header\">\r\n        <h1>Aviator</h1>\r\n        <div className=\"balance-display\">\r\n          Balance: ${balance.toFixed(2)}\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"game-area\">\r\n        <div className=\"multiplier-display\">\r\n          <AnimatePresence mode=\"wait\">\r\n            {gameState === 'waiting' && (\r\n              <motion.div\r\n                key=\"waiting\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"waiting-state\"\r\n              >\r\n                <h2>Next game in {timeLeft}s</h2>\r\n                <div className=\"countdown-circle\">\r\n                  <span>{timeLeft}</span>\r\n                </div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n              </motion.div>\r\n            )}\r\n            \r\n            {gameState === 'playing' && (\r\n              <motion.div\r\n                key=\"playing\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"playing-state\"\r\n              >\r\n                <h2 className=\"multiplier-text\">\r\n                  {multiplier.toFixed(2)}x\r\n                </h2>\r\n                <motion.div\r\n                  className=\"airplane\"\r\n                  animate={{\r\n                    y: [0, -20, 0],\r\n                    rotate: [0, 5, -5, 0]\r\n                  }}\r\n                  transition={{\r\n                    duration: 2,\r\n                    repeat: Infinity,\r\n                    ease: \"easeInOut\"\r\n                  }}\r\n                >\r\n                  ✈️\r\n                </motion.div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n              </motion.div>\r\n            )}\r\n            \r\n            {gameState === 'crashed' && (\r\n              <motion.div\r\n                key=\"crashed\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"crashed-state\"\r\n              >\r\n                <h2 className=\"crash-text\">CRASHED AT {crashPoint.toFixed(2)}x</h2>\r\n                <div className=\"crash-animation\">\r\n                  💥\r\n                </div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        <div className=\"betting-controls\">\r\n          <div className=\"bet-amount-controls\">\r\n            <button onClick={halfBet} className=\"bet-btn\">½</button>\r\n            <button onClick={resetBet} className=\"bet-btn\">Reset</button>\r\n            <button onClick={doubleBet} className=\"bet-btn\">2×</button>\r\n          </div>\r\n          \r\n          <div className=\"bet-input\">\r\n            <input\r\n              type=\"number\"\r\n              value={betAmount}\r\n              onChange={(e) => setBetAmount(Math.max(1, parseInt(e.target.value) || 1))}\r\n              min=\"1\"\r\n              max={balance}\r\n              className=\"bet-amount-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"quick-chips\">\r\n            <button className=\"chip\" onClick={() => addChip(1)}>+1</button>\r\n            <button className=\"chip\" onClick={() => addChip(5)}>+5</button>\r\n            <button className=\"chip\" onClick={() => addChip(10)}>+10</button>\r\n            <button className=\"chip\" onClick={() => addChip(50)}>+50</button>\r\n            <button className=\"chip\" onClick={() => addChip(100)}>+100</button>\r\n            <button className=\"chip\" onClick={setMaxBet}>Max</button>\r\n            <button className=\"chip outline\" onClick={clearBet}>Clear</button>\r\n          </div>\r\n          \r\n          <div className=\"action-buttons\">\r\n            {!isBetPlaced && gameState === 'waiting' && (\r\n              <button onClick={placeBet} className=\"place-bet-btn\">\r\n                Place Bet ${betAmount}\r\n              </button>\r\n            )}\r\n            \r\n            {isBetPlaced && gameState === 'playing' && (\r\n              <button onClick={cashout} className=\"cashout-btn\">\r\n                Cashout ${(betAmount * multiplier).toFixed(2)}\r\n              </button>\r\n            )}\r\n\r\n            {!isBetPlaced && gameState !== 'waiting' && (\r\n              isBetQueued ? (\r\n                <div className=\"queued-controls\">\r\n                  <span className=\"queued-badge\">Queued ${queuedBetAmount} for next round</span>\r\n                  <button onClick={cancelQueuedBet} className=\"queue-cancel-btn\">Cancel</button>\r\n                </div>\r\n              ) : (\r\n                <button onClick={queueBetForNextRound} className=\"queue-bet-btn\">\r\n                  Queue ${betAmount} for next round\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bet-summary\">\r\n            <div className=\"summary-line\">\r\n              Potential at {autoCashoutValue.toFixed(2)}x: ${ (betAmount * autoCashoutValue).toFixed(2) }\r\n            </div>\r\n            <div className={`bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`}>\r\n              {isBetPlaced ? (\r\n                <>Active in Round {roundNumber}</>\r\n              ) : isBetQueued ? (\r\n                <>Queued ${queuedBetAmount} for next round</>\r\n              ) : (\r\n                <>No active bet</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"auto-cashout-section\">\r\n          <label className=\"auto-cashout-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isAutoCashout}\r\n              onChange={(e) => setIsAutoCashout(e.target.checked)}\r\n            />\r\n            Auto Cashout at\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={autoCashoutValue}\r\n            onChange={(e) => setAutoCashoutValue(parseFloat(e.target.value) || 2.00)}\r\n            min=\"1.01\"\r\n            step=\"0.01\"\r\n            className=\"auto-cashout-input\"\r\n          />\r\n          <span>x</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-history\">\r\n        <h3>Recent Results</h3>\r\n        <div className=\"history-grid\">\r\n          {gameHistory.map((result, index) => (\r\n            <div\r\n              key={index}\r\n              className={`history-item ${result >= 2 ? 'green' : result >= 1.5 ? 'orange' : 'red'}`}\r\n            >\r\n              {result.toFixed(2)}x\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bet-history\">\r\n        <h3>Your Bet History</h3>\r\n        <div className=\"bet-history-table\">\r\n          <div className=\"bet-history-header\">\r\n            <span>Round</span>\r\n            <span>Stake</span>\r\n            <span>Outcome</span>\r\n            <span>Payout</span>\r\n            <span>Profit</span>\r\n          </div>\r\n          {betHistory.length === 0 && (\r\n            <div className=\"bet-history-empty\">No bets yet</div>\r\n          )}\r\n          {betHistory.map((b, i) => (\r\n            <div className={`bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`} key={i}>\r\n              <span>#{b.round || b.game?.round_number}</span>\r\n              <span>${Number(b.amount).toFixed(2)}</span>\r\n              <span>{b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'}</span>\r\n              <span>${Number(b.payout).toFixed(2)}</span>\r\n              <span className=\"profit\">{`${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-info\">\r\n        <h3>How to Play</h3>\r\n        <ul>\r\n          <li>Place your bet before the game starts</li>\r\n          <li>Watch the multiplier increase from 1.00x</li>\r\n          <li>Cash out before it crashes to win!</li>\r\n          <li>Set auto cashout for automatic wins</li>\r\n        </ul>\r\n        <div className=\"backend-info\">\r\n          <strong>Backend Controlled:</strong> Crash points are predetermined and provably fair\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aviator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}