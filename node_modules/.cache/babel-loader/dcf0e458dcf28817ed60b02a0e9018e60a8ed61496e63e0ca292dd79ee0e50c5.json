{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antoo\\\\Desktop\\\\betting\\\\betsite\\\\frontend\\\\src\\\\components\\\\Aviator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\n\n// Set the base URL for API calls (env override, default to local backend)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\nconst Aviator = () => {\n  _s();\n  var _currentOdds$custom_c, _currentOdds$custom_c2;\n  // Game speed configuration\n  const TICK_MS = 100; // update interval during playing phase\n  const MULTIPLIER_INCREMENT = 0.005; // increment per tick\n  const RATE_PER_SECOND = 1000 / TICK_MS * MULTIPLIER_INCREMENT; // growth per second\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [isBetQueued, setIsBetQueued] = useState(false);\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentOdds, setCurrentOdds] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [countdownEndAt, setCountdownEndAt] = useState(null);\n  const gameInterval = useRef(null);\n  const countdownInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n  const gameTimeout = useRef(null);\n  const isRunningRef = useRef(false);\n  const gameStateRef = useRef(gameState);\n  useEffect(() => {\n    gameStateRef.current = gameState;\n  }, [gameState]);\n\n  // API calls\n  const fetchBalance = async () => {\n    try {\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/`);\n      console.log('Balance response:', response.data);\n      setBalance(response.data.balance);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching balance:', error);\n      console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setBalance(1000);\n    }\n  };\n  const fetchCurrentOdds = async () => {\n    try {\n      console.log('Fetching odds from:', `${API_BASE_URL}/api/aviator/current-odds/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-odds/`);\n      console.log('Odds response:', response.data);\n      setCurrentOdds(response.data);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching current odds:', error);\n      console.error('Error details:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      setCurrentOdds(null);\n    }\n  };\n  const fetchCurrentGame = async () => {\n    try {\n      console.log('Fetching game from:', `${API_BASE_URL}/api/aviator/current-game/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      const game = response.data;\n      console.log('Game response:', game);\n      setCurrentGame(game);\n      setRoundNumber(game.round_number);\n      if (game.status === 'waiting') {\n        setGameState('waiting');\n        setMultiplier(1.00);\n        setCrashPoint(Number(game.crash_point));\n        const created = new Date(game.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 5 - elapsed);\n        setTimeLeft(remaining);\n        setCountdownEndAt(Date.now() + remaining * 1000);\n      } else if (game.status === 'active') {\n        setGameState('playing');\n        setMultiplier(1.00);\n        const started = new Date(game.started_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - started) / 1000);\n        const currentMultiplier = 1.00 + elapsed * RATE_PER_SECOND;\n        setMultiplier(Math.min(currentMultiplier, Number(game.crash_point)));\n      } else if (game.status === 'crashed') {\n        setGameState('crashed');\n        setCrashPoint(Number(game.crash_point));\n        setMultiplier(Number(game.crash_point));\n      }\n      return game;\n    } catch (error) {\n      var _error$response3;\n      console.error('Error fetching current game:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      return null;\n    }\n  };\n\n  // Raw fetch used when we need the latest crash point without altering UI state\n  const getCurrentGameRaw = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  };\n  const fetchGameHistory = async () => {\n    try {\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\n      console.log('Game history response:', response.data);\n      // Ensure we store numeric crash points only\n      const numericHistory = (Array.isArray(response.data) ? response.data : []).map(game => Number(game === null || game === void 0 ? void 0 : game.crash_point)).filter(value => Number.isFinite(value));\n      setGameHistory(numericHistory);\n    } catch (error) {\n      var _error$response4;\n      console.error('Error fetching game history:', error);\n      console.error('Error details:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n    }\n  };\n  const fetchBetHistory = async () => {\n    try {\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\n      console.log('Bet history response:', response.data);\n      setBetHistory(response.data);\n    } catch (error) {\n      var _error$response5;\n      console.error('Error fetching bet history:', error);\n      console.error('Error details:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n    }\n  };\n\n  // Place bet\n  const placeBet = async () => {\n    const notEnough = balance < betAmount;\n    const wrongState = gameState !== 'waiting';\n    const alreadyPlaced = isBetPlaced;\n    if (notEnough || wrongState || alreadyPlaced) {\n      if (notEnough) setError('Insufficient balance to place this bet.');else if (wrongState) setError('You can only place a bet during the waiting phase.');else if (alreadyPlaced) setError('Bet already placed for this round.');\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\n        amount: betAmount\n      });\n      setBalance(response.data.balance);\n      setIsBetPlaced(true);\n      setError(null);\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      setError(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to place bet');\n      console.error('Error placing bet:', error);\n    }\n  };\n\n  // Cashout\n  const cashout = async () => {\n    if (isBetPlaced && gameState === 'playing') {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\n          round_number: roundNumber,\n          multiplier: multiplier\n        });\n        setBalance(response.data.balance);\n        setIsBetPlaced(false);\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n        setError(null);\n      } catch (error) {\n        var _error$response7, _error$response7$data;\n        setError(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Failed to cashout');\n        console.error('Error cashing out:', error);\n      }\n    }\n  };\n\n  // Start new game\n  const startNewGame = () => {\n    // Ensure no overlapping countdowns\n    if (countdownInterval.current) {\n      clearInterval(countdownInterval.current);\n      countdownInterval.current = null;\n    }\n    if (currentGame && currentGame.crash_point) {\n      setCrashPoint(Number(currentGame.crash_point));\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      const endAt = Date.now() + 5000;\n      setCountdownEndAt(endAt);\n      countdownInterval.current = setInterval(async () => {\n        const remainingMs = endAt - Date.now();\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n        setTimeLeft(prev => prev !== secondsLeft ? secondsLeft : prev);\n        if (secondsLeft <= 0) {\n          clearInterval(countdownInterval.current);\n          countdownInterval.current = null;\n          // Fetch latest crash point without mutating UI state\n          const latestGame = await getCurrentGameRaw();\n          const crash = latestGame && latestGame.crash_point ? latestGame.crash_point : currentGame === null || currentGame === void 0 ? void 0 : currentGame.crash_point;\n          if (crash) {\n            // If backend already marked active, resume from elapsed multiplier\n            let initialMul = 1.0;\n            if (latestGame && latestGame.status === 'active' && latestGame.started_at) {\n              const started = new Date(latestGame.started_at);\n              const elapsed = Math.max(0, Math.floor((Date.now() - started.getTime()) / 1000));\n              initialMul = Math.min(1.0 + elapsed * 0.01, Number(crash));\n            }\n            startGame(crash, initialMul);\n          } else {\n            await waitForCrashPointAndStart();\n          }\n        }\n      }, 100);\n    } else {\n      // No game from backend yet; wait 5s, then try to fetch and start again\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      const endAt = Date.now() + 5000;\n      setCountdownEndAt(endAt);\n      countdownInterval.current = setInterval(async () => {\n        const remainingMs = endAt - Date.now();\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n        setTimeLeft(prev => prev !== secondsLeft ? secondsLeft : prev);\n        if (secondsLeft <= 0) {\n          clearInterval(countdownInterval.current);\n          countdownInterval.current = null;\n          // Fetch latest game without mutating UI state; start if available\n          const latestGame = await getCurrentGameRaw();\n          const crash = latestGame === null || latestGame === void 0 ? void 0 : latestGame.crash_point;\n          if (crash) {\n            let initialMul = 1.0;\n            if (latestGame && latestGame.status === 'active' && latestGame.started_at) {\n              const started = new Date(latestGame.started_at);\n              const elapsed = Math.max(0, Math.floor((Date.now() - started.getTime()) / 1000));\n              initialMul = Math.min(1.0 + elapsed * 0.01, Number(crash));\n            }\n            startGame(crash, initialMul);\n          } else {\n            await waitForCrashPointAndStart();\n          }\n        }\n      }, 100);\n    }\n  };\n\n  // Wait briefly for backend to provide a crash point, then start immediately\n  const waitForCrashPointAndStart = async fallbackCrashPoint => {\n    const startTime = Date.now();\n    const maxWaitMs = 5000;\n    let crashPointToUse = null;\n    while (Date.now() - startTime < maxWaitMs) {\n      const g = await getCurrentGameRaw();\n      if (g && Number(g.crash_point) > 1) {\n        crashPointToUse = Number(g.crash_point);\n        break;\n      }\n      // Small delay before next attempt\n      await new Promise(r => setTimeout(r, 250));\n    }\n    if (crashPointToUse == null && Number(fallbackCrashPoint) > 1) {\n      crashPointToUse = Number(fallbackCrashPoint);\n    }\n    if (crashPointToUse != null) {\n      startGame(crashPointToUse);\n    } else {\n      // If still no crash point, start a new waiting cycle\n      startNewGame();\n    }\n  };\n\n  // Start the actual game\n  const startGame = (backendCrashPoint, initialMultiplierOverride) => {\n    if (isRunningRef.current) return;\n    // Clear any prior timers\n    if (gameInterval.current) clearInterval(gameInterval.current);\n    if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    const numericCrashPoint = Number(backendCrashPoint);\n    const targetCrashPoint = Number.isFinite(numericCrashPoint) && numericCrashPoint > 1 ? numericCrashPoint : 1.5;\n    const startMultiplier = Number.isFinite(initialMultiplierOverride) && initialMultiplierOverride > 1.0 ? initialMultiplierOverride : 1.00;\n    console.log('Starting game with crash point:', targetCrashPoint, 'initial multiplier:', startMultiplier);\n    setGameState('playing');\n    setMultiplier(startMultiplier);\n    isRunningRef.current = true;\n\n    // Safety timeout in case interval misses the boundary, using configured tick/speed\n    const estimatedTicks = Math.max(0, Math.ceil((targetCrashPoint - startMultiplier) / MULTIPLIER_INCREMENT));\n    const estimatedMsToCrash = estimatedTicks * TICK_MS + 200;\n    gameTimeout.current = setTimeout(() => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      setGameState('crashed');\n      setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n      isRunningRef.current = false;\n    }, estimatedMsToCrash);\n    gameInterval.current = setInterval(() => {\n      setMultiplier(prev => {\n        const newMultiplier = prev + MULTIPLIER_INCREMENT;\n        if (newMultiplier >= targetCrashPoint) {\n          clearInterval(gameInterval.current);\n          if (gameTimeout.current) clearTimeout(gameTimeout.current);\n          setGameState('crashed');\n          setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n          isRunningRef.current = false;\n          if (isBetPlaced) {\n            setIsBetPlaced(false);\n            setBetHistory(prev => [{\n              round: roundNumber,\n              amount: betAmount,\n              result: 'crash',\n              cashoutMultiplier: null,\n              payout: 0,\n              profit: -betAmount\n            }, ...prev.slice(0, 19)]);\n          }\n          return targetCrashPoint;\n        }\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\n          cashout();\n        }\n        return newMultiplier;\n      });\n    }, TICK_MS);\n  };\n\n  // Bet controls\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n  const addChip = amount => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  const clearBet = () => {\n    setBetAmount(1);\n  };\n  const queueBetForNextRound = () => {\n    if (!isBetPlaced && balance >= betAmount) {\n      setQueuedBetAmount(betAmount);\n      setIsBetQueued(true);\n    }\n  };\n  const cancelQueuedBet = () => {\n    setIsBetQueued(false);\n  };\n\n  // Effects\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      // Refresh relevant data at the end of each round\n      Promise.all([fetchBalance().catch(() => undefined), fetchGameHistory().catch(() => undefined), fetchBetHistory().catch(() => undefined)]).finally(() => {\n        startNewGame();\n      });\n    }\n  }, [gameState]);\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n      if (gameTimeout.current) clearTimeout(gameTimeout.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates (run once on mount)\n  useEffect(() => {\n    console.log('Aviator component mounted - starting initialization');\n    setIsLoading(true);\n    const initializeComponent = async () => {\n      try {\n        console.log('Starting API calls...');\n        await Promise.all([fetchBalance(), fetchCurrentOdds(), fetchCurrentGame().catch(() => undefined), fetchGameHistory(), fetchBetHistory()]);\n        console.log('All API calls completed');\n      } catch (error) {\n        console.error('Error during initialization:', error);\n      } finally {\n        setIsLoading(false);\n        console.log('Component initialization complete');\n      }\n    };\n    initializeComponent();\n\n    // Check for game updates every 2 seconds (ignore failures). Avoid disrupting local transitions.\n    if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    gameCheckInterval.current = setInterval(() => {\n      // Only poll during waiting phase to sync crash point/round; skip while playing/crashed countdown\n      if (gameStateRef.current === 'waiting') {\n        fetchCurrentGame().catch(() => undefined);\n      }\n    }, 2000);\n\n    // Initial game start\n    const timer = setTimeout(() => {\n      console.log('Starting initial game...');\n      startNewGame();\n    }, 1000);\n    return () => {\n      console.log('Cleaning up Aviator component');\n      clearTimeout(timer);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []);\n  console.log('Rendering Aviator component, currentOdds:', currentOdds, 'isLoading:', isLoading);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Aviator Game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connecting to backend...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aviator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Aviator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-display\",\n        children: [\"Balance: $\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"error-close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"API Base: \", API_BASE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Current Odds: \", currentOdds ? currentOdds.name : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Game State: \", gameState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Round: #\", roundNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiplier-display\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          initial: false,\n          children: [gameState === 'waiting' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"waiting-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Next game in \", timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"countdown-circle\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: timeLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), currentOdds && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"odds-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Using: \", currentOdds.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this), currentOdds.use_custom_points && /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Custom Points: \", ((_currentOdds$custom_c = currentOdds.custom_crash_points) === null || _currentOdds$custom_c === void 0 ? void 0 : _currentOdds$custom_c.split(',').length) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this)]\n          }, \"waiting\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: false,\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            className: \"playing-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"multiplier-text\",\n              children: [multiplier.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"airplane\",\n              animate: {\n                y: [0, -20, 0],\n                rotate: [0, 5, -5, 0]\n              },\n              transition: {\n                duration: 2,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              },\n              children: \"\\u2708\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, \"playing\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: false,\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            className: \"crashed-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"crash-text\",\n              children: [\"CRASHED AT \", Number.isFinite(Number(crashPoint)) ? Number(crashPoint).toFixed(2) : String(crashPoint), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crash-animation\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"backend-info\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Predetermined crash point from backend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, \"crashed\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-amount-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: halfBet,\n            className: \"bet-btn\",\n            children: \"\\xBD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetBet,\n            className: \"bet-btn\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doubleBet,\n            className: \"bet-btn\",\n            children: \"2\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: betAmount,\n            onChange: e => setBetAmount(Math.max(1, parseInt(e.target.value) || 1)),\n            min: \"1\",\n            max: balance,\n            className: \"bet-amount-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-chips\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(1),\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(5),\n            children: \"+5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(10),\n            children: \"+10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(50),\n            children: \"+50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(100),\n            children: \"+100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: setMaxBet,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip outline\",\n            onClick: clearBet,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [!isBetPlaced && gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: placeBet,\n            className: \"place-bet-btn\",\n            children: [\"Place Bet $\", betAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), isBetPlaced && gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cashout,\n            className: \"cashout-btn\",\n            children: [\"Cashout $\", (betAmount * multiplier).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), !isBetPlaced && gameState !== 'waiting' && (isBetQueued ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queued-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"queued-badge\",\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelQueuedBet,\n              className: \"queue-cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: queueBetForNextRound,\n            className: \"queue-bet-btn\",\n            children: [\"Queue $\", betAmount, \" for next round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-line\",\n            children: [\"Potential at \", autoCashoutValue.toFixed(2), \"x: $\", (betAmount * autoCashoutValue).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`,\n            children: isBetPlaced ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Active in Round \", roundNumber]\n            }, void 0, true) : isBetQueued ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"No active bet\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-cashout-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"auto-cashout-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoCashout,\n            onChange: e => setIsAutoCashout(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), \"Auto Cashout at\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: autoCashoutValue,\n          onChange: e => setAutoCashoutValue(parseFloat(e.target.value) || 2.00),\n          min: \"1.01\",\n          step: \"0.01\",\n          className: \"auto-cashout-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-grid\",\n        children: gameHistory.map((result, index) => {\n          const num = Number(result);\n          const safeNum = Number.isFinite(num) ? num : 0;\n          const color = safeNum >= 2 ? 'green' : safeNum >= 1.5 ? 'orange' : 'red';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `history-item ${color}`,\n            children: [Number.isFinite(num) ? num.toFixed(2) : String(result), \"x\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bet-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Bet History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-history-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Payout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), betHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-empty\",\n          children: \"No bets yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this), betHistory.map((b, i) => {\n          var _b$game;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"#\", b.round || ((_b$game = b.game) === null || _b$game === void 0 ? void 0 : _b$game.round_number)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.payout).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profit\",\n              children: `${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Place your bet before the game starts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Watch the multiplier increase from 1.00x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Cash out before it crashes to win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Set auto cashout for automatic wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backend-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Backend Controlled:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), \" Crash points are predetermined from your custom odds configuration\", currentOdds && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"odds-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Current Odds Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 18\n            }, this), \" \", currentOdds.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Early Crash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 18\n            }, this), \" \", currentOdds.early_crash_probability, \"% (\", currentOdds.early_crash_min, \"x - \", currentOdds.early_crash_max, \"x)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"High Crash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 18\n            }, this), \" \", currentOdds.high_crash_min, \"x - \", currentOdds.high_crash_max, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), currentOdds.use_custom_points && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Custom Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 20\n            }, this), \" \", ((_currentOdds$custom_c2 = currentOdds.custom_crash_points) === null || _currentOdds$custom_c2 === void 0 ? void 0 : _currentOdds$custom_c2.split(',').length) || 0, \" predetermined crash points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n_s(Aviator, \"QA/UaNqASFQj7bvcLs+qpdw6/rk=\");\n_c = Aviator;\nexport default Aviator;\nvar _c;\n$RefreshReg$(_c, \"Aviator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Aviator","_s","_currentOdds$custom_c","_currentOdds$custom_c2","TICK_MS","MULTIPLIER_INCREMENT","RATE_PER_SECOND","gameState","setGameState","multiplier","setMultiplier","betAmount","setBetAmount","balance","setBalance","isBetPlaced","setIsBetPlaced","gameHistory","setGameHistory","timeLeft","setTimeLeft","crashPoint","setCrashPoint","isAutoCashout","setIsAutoCashout","autoCashoutValue","setAutoCashoutValue","roundNumber","setRoundNumber","isBetQueued","setIsBetQueued","queuedBetAmount","setQueuedBetAmount","betHistory","setBetHistory","currentGame","setCurrentGame","error","setError","currentOdds","setCurrentOdds","isLoading","setIsLoading","countdownEndAt","setCountdownEndAt","gameInterval","countdownInterval","gameCheckInterval","gameTimeout","isRunningRef","gameStateRef","current","fetchBalance","console","log","response","get","data","_error$response","fetchCurrentOdds","_error$response2","fetchCurrentGame","game","round_number","status","Number","crash_point","created","Date","created_at","now","elapsed","Math","floor","remaining","max","started","started_at","currentMultiplier","min","_error$response3","getCurrentGameRaw","fetchGameHistory","numericHistory","Array","isArray","map","filter","value","isFinite","_error$response4","fetchBetHistory","_error$response5","placeBet","notEnough","wrongState","alreadyPlaced","post","amount","_error$response6","_error$response6$data","cashout","prev","bet","slice","_error$response7","_error$response7$data","startNewGame","clearInterval","endAt","setInterval","remainingMs","secondsLeft","ceil","latestGame","crash","initialMul","getTime","startGame","waitForCrashPointAndStart","fallbackCrashPoint","startTime","maxWaitMs","crashPointToUse","g","Promise","r","setTimeout","backendCrashPoint","initialMultiplierOverride","clearTimeout","numericCrashPoint","targetCrashPoint","startMultiplier","estimatedTicks","estimatedMsToCrash","newMultiplier","round","result","cashoutMultiplier","payout","profit","doubleBet","halfBet","resetBet","addChip","next","setMaxBet","clearBet","queueBetForNextRound","cancelQueuedBet","all","catch","undefined","finally","initializeComponent","timer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","name","mode","initial","div","opacity","scale","animate","exit","use_custom_points","custom_crash_points","split","length","y","rotate","transition","duration","repeat","Infinity","ease","String","type","onChange","e","parseInt","target","checked","parseFloat","step","index","num","safeNum","color","b","i","_b$game","cashout_multiplier","early_crash_probability","early_crash_min","early_crash_max","high_crash_min","high_crash_max","_c","$RefreshReg$"],"sources":["C:/Users/Antoo/Desktop/betting/betsite/frontend/src/components/Aviator.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport axios from 'axios';\r\nimport './Aviator.css';\r\n\r\n// Set the base URL for API calls (env override, default to local backend)\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\r\n\r\nconst Aviator = () => {\r\n  // Game speed configuration\r\n  const TICK_MS = 100;               // update interval during playing phase\r\n  const MULTIPLIER_INCREMENT = 0.005; // increment per tick\r\n  const RATE_PER_SECOND = (1000 / TICK_MS) * MULTIPLIER_INCREMENT; // growth per second\r\n  const [gameState, setGameState] = useState('waiting');\r\n  const [multiplier, setMultiplier] = useState(1.00);\r\n  const [betAmount, setBetAmount] = useState(10);\r\n  const [balance, setBalance] = useState(1000);\r\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\r\n  const [gameHistory, setGameHistory] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(5);\r\n  const [crashPoint, setCrashPoint] = useState(0);\r\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\r\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\r\n  const [roundNumber, setRoundNumber] = useState(0);\r\n  const [isBetQueued, setIsBetQueued] = useState(false);\r\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\r\n  const [betHistory, setBetHistory] = useState([]);\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [currentOdds, setCurrentOdds] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [countdownEndAt, setCountdownEndAt] = useState(null);\r\n  \r\n  const gameInterval = useRef(null);\r\n  const countdownInterval = useRef(null);\r\n  const gameCheckInterval = useRef(null);\r\n  const gameTimeout = useRef(null);\r\n  const isRunningRef = useRef(false);\r\n  const gameStateRef = useRef(gameState);\r\n\r\n  useEffect(() => {\r\n    gameStateRef.current = gameState;\r\n  }, [gameState]);\r\n\r\n  // API calls\r\n  const fetchBalance = async () => {\r\n    try {\r\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/`);\r\n      console.log('Balance response:', response.data);\r\n      setBalance(response.data.balance);\r\n    } catch (error) {\r\n      console.error('Error fetching balance:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      setBalance(1000);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentOdds = async () => {\r\n    try {\r\n      console.log('Fetching odds from:', `${API_BASE_URL}/api/aviator/current-odds/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-odds/`);\r\n      console.log('Odds response:', response.data);\r\n      setCurrentOdds(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching current odds:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      setCurrentOdds(null);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentGame = async () => {\r\n    try {\r\n      console.log('Fetching game from:', `${API_BASE_URL}/api/aviator/current-game/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\r\n      const game = response.data;\r\n      console.log('Game response:', game);\r\n      setCurrentGame(game);\r\n      setRoundNumber(game.round_number);\r\n      \r\n      if (game.status === 'waiting') {\r\n        setGameState('waiting');\r\n        setMultiplier(1.00);\r\n        setCrashPoint(Number(game.crash_point));\r\n        const created = new Date(game.created_at);\r\n        const now = new Date();\r\n        const elapsed = Math.floor((now - created) / 1000);\r\n        const remaining = Math.max(0, 5 - elapsed);\r\n        setTimeLeft(remaining);\r\n        setCountdownEndAt(Date.now() + remaining * 1000);\r\n      } else if (game.status === 'active') {\r\n        setGameState('playing');\r\n        setMultiplier(1.00);\r\n        const started = new Date(game.started_at);\r\n        const now = new Date();\r\n        const elapsed = Math.floor((now - started) / 1000);\r\n        const currentMultiplier = 1.00 + (elapsed * RATE_PER_SECOND);\r\n        setMultiplier(Math.min(currentMultiplier, Number(game.crash_point)));\r\n      } else if (game.status === 'crashed') {\r\n        setGameState('crashed');\r\n        setCrashPoint(Number(game.crash_point));\r\n        setMultiplier(Number(game.crash_point));\r\n      }\r\n      return game;\r\n    } catch (error) {\r\n      console.error('Error fetching current game:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Raw fetch used when we need the latest crash point without altering UI state\r\n  const getCurrentGameRaw = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchGameHistory = async () => {\r\n    try {\r\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\r\n      console.log('Game history response:', response.data);\r\n      // Ensure we store numeric crash points only\r\n      const numericHistory = (Array.isArray(response.data) ? response.data : [])\r\n        .map(game => Number(game?.crash_point))\r\n        .filter(value => Number.isFinite(value));\r\n      setGameHistory(numericHistory);\r\n    } catch (error) {\r\n      console.error('Error fetching game history:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  const fetchBetHistory = async () => {\r\n    try {\r\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\r\n      console.log('Bet history response:', response.data);\r\n      setBetHistory(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching bet history:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  // Place bet\r\n  const placeBet = async () => {\r\n    const notEnough = balance < betAmount;\r\n    const wrongState = gameState !== 'waiting';\r\n    const alreadyPlaced = isBetPlaced;\r\n    if (notEnough || wrongState || alreadyPlaced) {\r\n      if (notEnough) setError('Insufficient balance to place this bet.');\r\n      else if (wrongState) setError('You can only place a bet during the waiting phase.');\r\n      else if (alreadyPlaced) setError('Bet already placed for this round.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\r\n        amount: betAmount\r\n      });\r\n      setBalance(response.data.balance);\r\n      setIsBetPlaced(true);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error.response?.data?.error || 'Failed to place bet');\r\n      console.error('Error placing bet:', error);\r\n    }\r\n  };\r\n\r\n  // Cashout\r\n  const cashout = async () => {\r\n    if (isBetPlaced && gameState === 'playing') {\r\n      try {\r\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\r\n          round_number: roundNumber,\r\n          multiplier: multiplier\r\n        });\r\n        \r\n        setBalance(response.data.balance);\r\n        setIsBetPlaced(false);\r\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(error.response?.data?.error || 'Failed to cashout');\r\n        console.error('Error cashing out:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Start new game\r\n  const startNewGame = () => {\r\n    // Ensure no overlapping countdowns\r\n    if (countdownInterval.current) {\r\n      clearInterval(countdownInterval.current);\r\n      countdownInterval.current = null;\r\n    }\r\n    if (currentGame && currentGame.crash_point) {\r\n      setCrashPoint(Number(currentGame.crash_point));\r\n      setGameState('waiting');\r\n      setMultiplier(1.00);\r\n      setTimeLeft(5);\r\n      const endAt = Date.now() + 5000;\r\n      setCountdownEndAt(endAt);\r\n      \r\n      countdownInterval.current = setInterval(async () => {\r\n        const remainingMs = endAt - Date.now();\r\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\r\n        setTimeLeft(prev => (prev !== secondsLeft ? secondsLeft : prev));\r\n        if (secondsLeft <= 0) {\r\n          clearInterval(countdownInterval.current);\r\n          countdownInterval.current = null;\r\n          // Fetch latest crash point without mutating UI state\r\n          const latestGame = await getCurrentGameRaw();\r\n          const crash = (latestGame && latestGame.crash_point) ? latestGame.crash_point : currentGame?.crash_point;\r\n          if (crash) {\r\n            // If backend already marked active, resume from elapsed multiplier\r\n            let initialMul = 1.0;\r\n            if (latestGame && latestGame.status === 'active' && latestGame.started_at) {\r\n              const started = new Date(latestGame.started_at);\r\n              const elapsed = Math.max(0, Math.floor((Date.now() - started.getTime()) / 1000));\r\n              initialMul = Math.min(1.0 + elapsed * 0.01, Number(crash));\r\n            }\r\n            startGame(crash, initialMul);\r\n          } else {\r\n            await waitForCrashPointAndStart();\r\n          }\r\n        }\r\n      }, 100);\r\n    } else {\r\n      // No game from backend yet; wait 5s, then try to fetch and start again\r\n      setGameState('waiting');\r\n      setMultiplier(1.00);\r\n      setTimeLeft(5);\r\n      const endAt = Date.now() + 5000;\r\n      setCountdownEndAt(endAt);\r\n      countdownInterval.current = setInterval(async () => {\r\n        const remainingMs = endAt - Date.now();\r\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\r\n        setTimeLeft(prev => (prev !== secondsLeft ? secondsLeft : prev));\r\n        if (secondsLeft <= 0) {\r\n          clearInterval(countdownInterval.current);\r\n          countdownInterval.current = null;\r\n          // Fetch latest game without mutating UI state; start if available\r\n          const latestGame = await getCurrentGameRaw();\r\n          const crash = latestGame?.crash_point;\r\n          if (crash) {\r\n            let initialMul = 1.0;\r\n            if (latestGame && latestGame.status === 'active' && latestGame.started_at) {\r\n              const started = new Date(latestGame.started_at);\r\n              const elapsed = Math.max(0, Math.floor((Date.now() - started.getTime()) / 1000));\r\n              initialMul = Math.min(1.0 + elapsed * 0.01, Number(crash));\r\n            }\r\n            startGame(crash, initialMul);\r\n          } else {\r\n            await waitForCrashPointAndStart();\r\n          }\r\n        }\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // Wait briefly for backend to provide a crash point, then start immediately\r\n  const waitForCrashPointAndStart = async (fallbackCrashPoint) => {\r\n    const startTime = Date.now();\r\n    const maxWaitMs = 5000;\r\n    let crashPointToUse = null;\r\n    while (Date.now() - startTime < maxWaitMs) {\r\n      const g = await getCurrentGameRaw();\r\n      if (g && Number(g.crash_point) > 1) {\r\n        crashPointToUse = Number(g.crash_point);\r\n        break;\r\n      }\r\n      // Small delay before next attempt\r\n      await new Promise(r => setTimeout(r, 250));\r\n    }\r\n    if (crashPointToUse == null && Number(fallbackCrashPoint) > 1) {\r\n      crashPointToUse = Number(fallbackCrashPoint);\r\n    }\r\n    if (crashPointToUse != null) {\r\n      startGame(crashPointToUse);\r\n    } else {\r\n      // If still no crash point, start a new waiting cycle\r\n      startNewGame();\r\n    }\r\n  };\r\n\r\n  // Start the actual game\r\n  const startGame = (backendCrashPoint, initialMultiplierOverride) => {\r\n    if (isRunningRef.current) return;\r\n    // Clear any prior timers\r\n    if (gameInterval.current) clearInterval(gameInterval.current);\r\n    if (gameTimeout.current) clearTimeout(gameTimeout.current);\r\n\r\n    const numericCrashPoint = Number(backendCrashPoint);\r\n    const targetCrashPoint = Number.isFinite(numericCrashPoint) && numericCrashPoint > 1\r\n      ? numericCrashPoint\r\n      : 1.5;\r\n\r\n    const startMultiplier = Number.isFinite(initialMultiplierOverride) && initialMultiplierOverride > 1.0\r\n      ? initialMultiplierOverride\r\n      : 1.00;\r\n\r\n    console.log('Starting game with crash point:', targetCrashPoint, 'initial multiplier:', startMultiplier);\r\n    setGameState('playing');\r\n    setMultiplier(startMultiplier);\r\n    isRunningRef.current = true;\r\n\r\n    // Safety timeout in case interval misses the boundary, using configured tick/speed\r\n    const estimatedTicks = Math.max(0, Math.ceil((targetCrashPoint - startMultiplier) / MULTIPLIER_INCREMENT));\r\n    const estimatedMsToCrash = estimatedTicks * TICK_MS + 200;\r\n    gameTimeout.current = setTimeout(() => {\r\n      if (gameInterval.current) clearInterval(gameInterval.current);\r\n      setGameState('crashed');\r\n      setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\r\n      isRunningRef.current = false;\r\n    }, estimatedMsToCrash);\r\n\r\n    gameInterval.current = setInterval(() => {\r\n      setMultiplier(prev => {\r\n        const newMultiplier = prev + MULTIPLIER_INCREMENT;\r\n\r\n        if (newMultiplier >= targetCrashPoint) {\r\n          clearInterval(gameInterval.current);\r\n          if (gameTimeout.current) clearTimeout(gameTimeout.current);\r\n          setGameState('crashed');\r\n          setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\r\n          isRunningRef.current = false;\r\n\r\n          if (isBetPlaced) {\r\n            setIsBetPlaced(false);\r\n            setBetHistory(prev => [\r\n              {\r\n                round: roundNumber,\r\n                amount: betAmount,\r\n                result: 'crash',\r\n                cashoutMultiplier: null,\r\n                payout: 0,\r\n                profit: -betAmount\r\n              },\r\n              ...prev.slice(0, 19)\r\n            ]);\r\n          }\r\n\r\n          return targetCrashPoint;\r\n        }\r\n\r\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\r\n          cashout();\r\n        }\r\n\r\n        return newMultiplier;\r\n      });\r\n    }, TICK_MS);\r\n  };\r\n\r\n  // Bet controls\r\n  const doubleBet = () => {\r\n    if (balance >= betAmount * 2) {\r\n      setBetAmount(prev => prev * 2);\r\n    }\r\n  };\r\n\r\n  const halfBet = () => {\r\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\r\n  };\r\n\r\n  const resetBet = () => {\r\n    setBetAmount(10);\r\n  };\r\n\r\n  const addChip = (amount) => {\r\n    setBetAmount(prev => {\r\n      const next = Math.max(1, prev + amount);\r\n      return Math.min(next, balance);\r\n    });\r\n  };\r\n  \r\n  const setMaxBet = () => {\r\n    setBetAmount(Math.max(1, Math.floor(balance)));\r\n  };\r\n  \r\n  const clearBet = () => {\r\n    setBetAmount(1);\r\n  };\r\n  \r\n  const queueBetForNextRound = () => {\r\n    if (!isBetPlaced && balance >= betAmount) {\r\n      setQueuedBetAmount(betAmount);\r\n      setIsBetQueued(true);\r\n    }\r\n  };\r\n  \r\n  const cancelQueuedBet = () => {\r\n    setIsBetQueued(false);\r\n  };\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (gameState === 'crashed') {\r\n      // Refresh relevant data at the end of each round\r\n      Promise.all([\r\n        fetchBalance().catch(() => undefined),\r\n        fetchGameHistory().catch(() => undefined),\r\n        fetchBetHistory().catch(() => undefined),\r\n      ]).finally(() => {\r\n        startNewGame();\r\n      });\r\n    }\r\n  }, [gameState]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (gameInterval.current) clearInterval(gameInterval.current);\r\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\r\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\r\n      if (gameTimeout.current) clearTimeout(gameTimeout.current);\r\n    };\r\n  }, []);\r\n\r\n  // Initialize and periodic updates (run once on mount)\r\n  useEffect(() => {\r\n    console.log('Aviator component mounted - starting initialization');\r\n    setIsLoading(true);\r\n    \r\n    const initializeComponent = async () => {\r\n      try {\r\n        console.log('Starting API calls...');\r\n        await Promise.all([\r\n          fetchBalance(),\r\n          fetchCurrentOdds(),\r\n          fetchCurrentGame().catch(() => undefined),\r\n          fetchGameHistory(),\r\n          fetchBetHistory()\r\n        ]);\r\n        console.log('All API calls completed');\r\n      } catch (error) {\r\n        console.error('Error during initialization:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n        console.log('Component initialization complete');\r\n      }\r\n    };\r\n    \r\n    initializeComponent();\r\n    \r\n    // Check for game updates every 2 seconds (ignore failures). Avoid disrupting local transitions.\r\n    if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\r\n    gameCheckInterval.current = setInterval(() => {\r\n      // Only poll during waiting phase to sync crash point/round; skip while playing/crashed countdown\r\n      if (gameStateRef.current === 'waiting') {\r\n        fetchCurrentGame().catch(() => undefined);\r\n      }\r\n    }, 2000);\r\n    \r\n    // Initial game start\r\n    const timer = setTimeout(() => {\r\n      console.log('Starting initial game...');\r\n      startNewGame();\r\n    }, 1000);\r\n    \r\n    return () => {\r\n      console.log('Cleaning up Aviator component');\r\n      clearTimeout(timer);\r\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\r\n    };\r\n  }, []);\r\n\r\n  console.log('Rendering Aviator component, currentOdds:', currentOdds, 'isLoading:', isLoading);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"aviator-container\">\r\n        <div className=\"loading-state\">\r\n          <h2>Loading Aviator Game...</h2>\r\n          <div className=\"loading-spinner\">⏳</div>\r\n          <p>Connecting to backend...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"aviator-container\">\r\n      <div className=\"aviator-header\">\r\n        <h1>Aviator</h1>\r\n        <div className=\"balance-display\">\r\n          Balance: ${balance.toFixed(2)}\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <strong>Error:</strong> {error}\r\n          <button onClick={() => setError(null)} className=\"error-close\">×</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"debug-info\">\r\n        <small>API Base: {API_BASE_URL}</small>\r\n        <small>Current Odds: {currentOdds ? currentOdds.name : 'None'}</small>\r\n        <small>Game State: {gameState}</small>\r\n        <small>Round: #{roundNumber}</small>\r\n      </div>\r\n\r\n      <div className=\"game-area\">\r\n        <div className=\"multiplier-display\">\r\n          <AnimatePresence mode=\"wait\" initial={false}>\r\n            {gameState === 'waiting' && (\r\n              <motion.div\r\n                key=\"waiting\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"waiting-state\"\r\n              >\r\n                <h2>Next game in {timeLeft}s</h2>\r\n                <div className=\"countdown-circle\">\r\n                  <span>{timeLeft}</span>\r\n                </div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n                {currentOdds && (\r\n                  <div className=\"odds-info\">\r\n                    <small>Using: {currentOdds.name}</small>\r\n                    {currentOdds.use_custom_points && (\r\n                      <small>Custom Points: {currentOdds.custom_crash_points?.split(',').length || 0}</small>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            )}\r\n            \r\n            {gameState === 'playing' && (\r\n              <motion.div\r\n                key=\"playing\"\r\n                initial={false}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                className=\"playing-state\"\r\n              >\r\n                <h2 className=\"multiplier-text\">\r\n                  {multiplier.toFixed(2)}x\r\n                </h2>\r\n                <motion.div\r\n                  className=\"airplane\"\r\n                  animate={{\r\n                    y: [0, -20, 0],\r\n                    rotate: [0, 5, -5, 0]\r\n                  }}\r\n                  transition={{\r\n                    duration: 2,\r\n                    repeat: Infinity,\r\n                    ease: \"easeInOut\"\r\n                  }}\r\n                >\r\n                  ✈️\r\n                </motion.div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n              </motion.div>\r\n            )}\r\n            \r\n            {gameState === 'crashed' && (\r\n              <motion.div\r\n                key=\"crashed\"\r\n                initial={false}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                className=\"crashed-state\"\r\n              >\r\n                <h2 className=\"crash-text\">CRASHED AT {Number.isFinite(Number(crashPoint)) ? Number(crashPoint).toFixed(2) : String(crashPoint)}x</h2>\r\n                <div className=\"crash-animation\">\r\n                  💥\r\n                </div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n                <div className=\"backend-info\">\r\n                  <small>Predetermined crash point from backend</small>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        <div className=\"betting-controls\">\r\n          <div className=\"bet-amount-controls\">\r\n            <button onClick={halfBet} className=\"bet-btn\">½</button>\r\n            <button onClick={resetBet} className=\"bet-btn\">Reset</button>\r\n            <button onClick={doubleBet} className=\"bet-btn\">2×</button>\r\n          </div>\r\n          \r\n          <div className=\"bet-input\">\r\n            <input\r\n              type=\"number\"\r\n              value={betAmount}\r\n              onChange={(e) => setBetAmount(Math.max(1, parseInt(e.target.value) || 1))}\r\n              min=\"1\"\r\n              max={balance}\r\n              className=\"bet-amount-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"quick-chips\">\r\n            <button className=\"chip\" onClick={() => addChip(1)}>+1</button>\r\n            <button className=\"chip\" onClick={() => addChip(5)}>+5</button>\r\n            <button className=\"chip\" onClick={() => addChip(10)}>+10</button>\r\n            <button className=\"chip\" onClick={() => addChip(50)}>+50</button>\r\n            <button className=\"chip\" onClick={() => addChip(100)}>+100</button>\r\n            <button className=\"chip\" onClick={setMaxBet}>Max</button>\r\n            <button className=\"chip outline\" onClick={clearBet}>Clear</button>\r\n          </div>\r\n          \r\n          <div className=\"action-buttons\">\r\n            {!isBetPlaced && gameState === 'waiting' && (\r\n              <button onClick={placeBet} className=\"place-bet-btn\">\r\n                Place Bet ${betAmount}\r\n              </button>\r\n            )}\r\n            \r\n            {isBetPlaced && gameState === 'playing' && (\r\n              <button onClick={cashout} className=\"cashout-btn\">\r\n                Cashout ${(betAmount * multiplier).toFixed(2)}\r\n              </button>\r\n            )}\r\n\r\n            {!isBetPlaced && gameState !== 'waiting' && (\r\n              isBetQueued ? (\r\n                <div className=\"queued-controls\">\r\n                  <span className=\"queued-badge\">Queued ${queuedBetAmount} for next round</span>\r\n                  <button onClick={cancelQueuedBet} className=\"queue-cancel-btn\">Cancel</button>\r\n                </div>\r\n              ) : (\r\n                <button onClick={queueBetForNextRound} className=\"queue-bet-btn\">\r\n                  Queue ${betAmount} for next round\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bet-summary\">\r\n            <div className=\"summary-line\">\r\n              Potential at {autoCashoutValue.toFixed(2)}x: ${ (betAmount * autoCashoutValue).toFixed(2) }\r\n            </div>\r\n            <div className={`bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`}>\r\n              {isBetPlaced ? (\r\n                <>Active in Round {roundNumber}</>\r\n              ) : isBetQueued ? (\r\n                <>Queued ${queuedBetAmount} for next round</>\r\n              ) : (\r\n                <>No active bet</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"auto-cashout-section\">\r\n          <label className=\"auto-cashout-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isAutoCashout}\r\n              onChange={(e) => setIsAutoCashout(e.target.checked)}\r\n            />\r\n            Auto Cashout at\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={autoCashoutValue}\r\n            onChange={(e) => setAutoCashoutValue(parseFloat(e.target.value) || 2.00)}\r\n            min=\"1.01\"\r\n            step=\"0.01\"\r\n            className=\"auto-cashout-input\"\r\n          />\r\n          <span>x</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-history\">\r\n        <h3>Recent Results</h3>\r\n        <div className=\"history-grid\">\r\n          {gameHistory.map((result, index) => {\r\n            const num = Number(result);\r\n            const safeNum = Number.isFinite(num) ? num : 0;\r\n            const color = safeNum >= 2 ? 'green' : safeNum >= 1.5 ? 'orange' : 'red';\r\n            return (\r\n              <div key={index} className={`history-item ${color}`}>\r\n                {Number.isFinite(num) ? num.toFixed(2) : String(result)}x\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bet-history\">\r\n        <h3>Your Bet History</h3>\r\n        <div className=\"bet-history-table\">\r\n          <div className=\"bet-history-header\">\r\n            <span>Round</span>\r\n            <span>Stake</span>\r\n            <span>Outcome</span>\r\n            <span>Payout</span>\r\n            <span>Profit</span>\r\n          </div>\r\n          {betHistory.length === 0 && (\r\n            <div className=\"bet-history-empty\">No bets yet</div>\r\n          )}\r\n          {betHistory.map((b, i) => (\r\n            <div className={`bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`} key={i}>\r\n              <span>#{b.round || b.game?.round_number}</span>\r\n              <span>${Number(b.amount).toFixed(2)}</span>\r\n              <span>{b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'}</span>\r\n              <span>${Number(b.payout).toFixed(2)}</span>\r\n              <span className=\"profit\">{`${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-info\">\r\n        <h3>How to Play</h3>\r\n        <ul>\r\n          <li>Place your bet before the game starts</li>\r\n          <li>Watch the multiplier increase from 1.00x</li>\r\n          <li>Cash out before it crashes to win!</li>\r\n          <li>Set auto cashout for automatic wins</li>\r\n        </ul>\r\n        <div className=\"backend-info\">\r\n          <strong>Backend Controlled:</strong> Crash points are predetermined from your custom odds configuration\r\n          {currentOdds && (\r\n            <div className=\"odds-details\">\r\n              <p><strong>Current Odds Set:</strong> {currentOdds.name}</p>\r\n              <p><strong>Early Crash:</strong> {currentOdds.early_crash_probability}% ({currentOdds.early_crash_min}x - {currentOdds.early_crash_max}x)</p>\r\n              <p><strong>High Crash:</strong> {currentOdds.high_crash_min}x - {currentOdds.high_crash_max}x</p>\r\n              {currentOdds.use_custom_points && (\r\n                <p><strong>Custom Points:</strong> {currentOdds.custom_crash_points?.split(',').length || 0} predetermined crash points</p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aviator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}