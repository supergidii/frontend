{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antoo\\\\Desktop\\\\betting\\\\betsite\\\\frontend\\\\src\\\\components\\\\Aviator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport './Aviator.css';\n\n// Set the base URL for API calls (env override, default to local backend)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\nconst Aviator = () => {\n  _s();\n  var _currentOdds$custom_c, _currentOdds$custom_c2;\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [betAmount, setBetAmount] = useState(10);\n  const [balance, setBalance] = useState(1000);\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [isBetQueued, setIsBetQueued] = useState(false);\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\n  const [betHistory, setBetHistory] = useState([]);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentOdds, setCurrentOdds] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [countdownEndAt, setCountdownEndAt] = useState(null);\n  const gameInterval = useRef(null);\n  const countdownInterval = useRef(null);\n  const gameCheckInterval = useRef(null);\n\n  // API calls\n  const fetchBalance = async () => {\n    try {\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/`);\n      console.log('Balance response:', response.data);\n      setBalance(response.data.balance);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching balance:', error);\n      console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setBalance(1000);\n    }\n  };\n  const fetchCurrentOdds = async () => {\n    try {\n      console.log('Fetching odds from:', `${API_BASE_URL}/api/aviator/current-odds/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-odds/`);\n      console.log('Odds response:', response.data);\n      setCurrentOdds(response.data);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching current odds:', error);\n      console.error('Error details:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      setCurrentOdds(null);\n    }\n  };\n  const fetchCurrentGame = async () => {\n    try {\n      console.log('Fetching game from:', `${API_BASE_URL}/api/aviator/current-game/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\n      const game = response.data;\n      console.log('Game response:', game);\n      setCurrentGame(game);\n      setRoundNumber(game.round_number);\n      if (game.status === 'waiting') {\n        setGameState('waiting');\n        setMultiplier(1.00);\n        setCrashPoint(game.crash_point);\n        const created = new Date(game.created_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - created) / 1000);\n        const remaining = Math.max(0, 5 - elapsed);\n        setTimeLeft(remaining);\n        setCountdownEndAt(Date.now() + remaining * 1000);\n      } else if (game.status === 'active') {\n        setGameState('playing');\n        setMultiplier(1.00);\n        const started = new Date(game.started_at);\n        const now = new Date();\n        const elapsed = Math.floor((now - started) / 1000);\n        const currentMultiplier = 1.00 + elapsed * 0.01;\n        setMultiplier(Math.min(currentMultiplier, game.crash_point));\n      } else if (game.status === 'crashed') {\n        setGameState('crashed');\n        setCrashPoint(game.crash_point);\n        setMultiplier(game.crash_point);\n      }\n      return game;\n    } catch (error) {\n      var _error$response3;\n      console.error('Error fetching current game:', error);\n      console.error('Error details:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      return null;\n    }\n  };\n  const fetchGameHistory = async () => {\n    try {\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\n      console.log('Game history response:', response.data);\n      setGameHistory(response.data.map(game => game.crash_point));\n    } catch (error) {\n      var _error$response4;\n      console.error('Error fetching game history:', error);\n      console.error('Error details:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n    }\n  };\n  const fetchBetHistory = async () => {\n    try {\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\n      console.log('Bet history response:', response.data);\n      setBetHistory(response.data);\n    } catch (error) {\n      var _error$response5;\n      console.error('Error fetching bet history:', error);\n      console.error('Error details:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n    }\n  };\n\n  // Place bet\n  const placeBet = async () => {\n    if (balance >= betAmount && !isBetPlaced && gameState === 'waiting') {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\n          amount: betAmount\n        });\n        setBalance(response.data.balance);\n        setIsBetPlaced(true);\n        setError(null);\n      } catch (error) {\n        var _error$response6, _error$response6$data;\n        setError(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to place bet');\n        console.error('Error placing bet:', error);\n      }\n    }\n  };\n\n  // Cashout\n  const cashout = async () => {\n    if (isBetPlaced && gameState === 'playing') {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\n          round_number: roundNumber,\n          multiplier: multiplier\n        });\n        setBalance(response.data.balance);\n        setIsBetPlaced(false);\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\n        setError(null);\n      } catch (error) {\n        var _error$response7, _error$response7$data;\n        setError(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Failed to cashout');\n        console.error('Error cashing out:', error);\n      }\n    }\n  };\n\n  // Start new game\n  const startNewGame = () => {\n    // Ensure no overlapping countdowns\n    if (countdownInterval.current) {\n      clearInterval(countdownInterval.current);\n      countdownInterval.current = null;\n    }\n    if (currentGame && currentGame.crash_point) {\n      setCrashPoint(currentGame.crash_point);\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      const endAt = Date.now() + 5000;\n      setCountdownEndAt(endAt);\n      countdownInterval.current = setInterval(async () => {\n        const remainingMs = endAt - Date.now();\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n        setTimeLeft(prev => prev !== secondsLeft ? secondsLeft : prev);\n        if (secondsLeft <= 0) {\n          clearInterval(countdownInterval.current);\n          countdownInterval.current = null;\n          // Re-fetch to ensure we have the latest crash point from backend\n          const latestGame = await fetchCurrentGame();\n          const crash = latestGame && latestGame.crash_point ? latestGame.crash_point : currentGame.crash_point;\n          startGame(crash);\n        }\n      }, 100);\n    } else {\n      // No game from backend yet; wait 5s, then try to fetch and start again\n      setGameState('waiting');\n      setMultiplier(1.00);\n      setTimeLeft(5);\n      const endAt = Date.now() + 5000;\n      setCountdownEndAt(endAt);\n      countdownInterval.current = setInterval(async () => {\n        const remainingMs = endAt - Date.now();\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\n        setTimeLeft(prev => prev !== secondsLeft ? secondsLeft : prev);\n        if (secondsLeft <= 0) {\n          clearInterval(countdownInterval.current);\n          countdownInterval.current = null;\n          // Fetch latest game and start if available\n          const latestGame = await fetchCurrentGame();\n          if (latestGame && latestGame.crash_point) {\n            startGame(latestGame.crash_point);\n          } else {\n            // If still no game, schedule another waiting cycle\n            startNewGame();\n          }\n        }\n      }, 100);\n    }\n  };\n\n  // Start the actual game\n  const startGame = backendCrashPoint => {\n    setGameState('playing');\n    setMultiplier(1.00);\n    const targetCrashPoint = backendCrashPoint;\n    gameInterval.current = setInterval(() => {\n      setMultiplier(prev => {\n        const newMultiplier = prev + 0.01;\n        if (newMultiplier >= targetCrashPoint) {\n          clearInterval(gameInterval.current);\n          setGameState('crashed');\n          setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\n          if (isBetPlaced) {\n            setIsBetPlaced(false);\n            setBetHistory(prev => [{\n              round: roundNumber,\n              amount: betAmount,\n              result: 'crash',\n              cashoutMultiplier: null,\n              payout: 0,\n              profit: -betAmount\n            }, ...prev.slice(0, 19)]);\n          }\n          return targetCrashPoint;\n        }\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\n          cashout();\n        }\n        return newMultiplier;\n      });\n    }, 50);\n  };\n\n  // Bet controls\n  const doubleBet = () => {\n    if (balance >= betAmount * 2) {\n      setBetAmount(prev => prev * 2);\n    }\n  };\n  const halfBet = () => {\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\n  };\n  const resetBet = () => {\n    setBetAmount(10);\n  };\n  const addChip = amount => {\n    setBetAmount(prev => {\n      const next = Math.max(1, prev + amount);\n      return Math.min(next, balance);\n    });\n  };\n  const setMaxBet = () => {\n    setBetAmount(Math.max(1, Math.floor(balance)));\n  };\n  const clearBet = () => {\n    setBetAmount(1);\n  };\n  const queueBetForNextRound = () => {\n    if (!isBetPlaced && balance >= betAmount) {\n      setQueuedBetAmount(betAmount);\n      setIsBetQueued(true);\n    }\n  };\n  const cancelQueuedBet = () => {\n    setIsBetQueued(false);\n  };\n\n  // Effects\n  useEffect(() => {\n    if (gameState === 'crashed') {\n      const timer = setTimeout(() => {\n        startNewGame();\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n  useEffect(() => {\n    return () => {\n      if (gameInterval.current) clearInterval(gameInterval.current);\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\n    };\n  }, []);\n\n  // Initialize and periodic updates\n  useEffect(() => {\n    console.log('Aviator component mounted - starting initialization');\n    setIsLoading(true);\n    const initializeComponent = async () => {\n      try {\n        console.log('Starting API calls...');\n        await Promise.all([fetchBalance(), fetchCurrentOdds(), fetchCurrentGame().catch(() => undefined), fetchGameHistory(), fetchBetHistory()]);\n        console.log('All API calls completed');\n      } catch (error) {\n        console.error('Error during initialization:', error);\n      } finally {\n        setIsLoading(false);\n        console.log('Component initialization complete');\n      }\n    };\n    initializeComponent();\n\n    // Check for game updates every 2 seconds (ignore failures)\n    gameCheckInterval.current = setInterval(() => {\n      fetchCurrentGame().catch(() => undefined);\n    }, 2000);\n\n    // Initial game start\n    const timer = setTimeout(() => {\n      console.log('Starting initial game...');\n      startNewGame();\n    }, 1000);\n    return () => {\n      console.log('Cleaning up Aviator component');\n      clearTimeout(timer);\n    };\n  }, []);\n  console.log('Rendering Aviator component, currentOdds:', currentOdds, 'isLoading:', isLoading);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Aviator Game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connecting to backend...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aviator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aviator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Aviator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-display\",\n        children: [\"Balance: $\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"error-close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"API Base: \", API_BASE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Current Odds: \", currentOdds ? currentOdds.name : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Game State: \", gameState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Round: #\", roundNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiplier-display\",\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: [gameState === 'waiting' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"waiting-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Next game in \", timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"countdown-circle\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: timeLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), currentOdds && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"odds-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Using: \", currentOdds.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this), currentOdds.use_custom_points && /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Custom Points: \", ((_currentOdds$custom_c = currentOdds.custom_crash_points) === null || _currentOdds$custom_c === void 0 ? void 0 : _currentOdds$custom_c.split(',').length) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this)]\n          }, \"waiting\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"playing-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"multiplier-text\",\n              children: [multiplier.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"airplane\",\n              animate: {\n                y: [0, -20, 0],\n                rotate: [0, 5, -5, 0]\n              },\n              transition: {\n                duration: 2,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              },\n              children: \"\\u2708\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, \"playing\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.8\n            },\n            className: \"crashed-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"crash-text\",\n              children: [\"CRASHED AT \", crashPoint.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crash-animation\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"round-info\",\n              children: [\"Round #\", roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"backend-info\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Predetermined crash point from backend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, \"crashed\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-amount-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: halfBet,\n            className: \"bet-btn\",\n            children: \"\\xBD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetBet,\n            className: \"bet-btn\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doubleBet,\n            className: \"bet-btn\",\n            children: \"2\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: betAmount,\n            onChange: e => setBetAmount(Math.max(1, parseInt(e.target.value) || 1)),\n            min: \"1\",\n            max: balance,\n            className: \"bet-amount-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-chips\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(1),\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(5),\n            children: \"+5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(10),\n            children: \"+10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(50),\n            children: \"+50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: () => addChip(100),\n            children: \"+100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip\",\n            onClick: setMaxBet,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chip outline\",\n            onClick: clearBet,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [!isBetPlaced && gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: placeBet,\n            className: \"place-bet-btn\",\n            children: [\"Place Bet $\", betAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), isBetPlaced && gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cashout,\n            className: \"cashout-btn\",\n            children: [\"Cashout $\", (betAmount * multiplier).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), !isBetPlaced && gameState !== 'waiting' && (isBetQueued ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queued-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"queued-badge\",\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelQueuedBet,\n              className: \"queue-cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: queueBetForNextRound,\n            className: \"queue-bet-btn\",\n            children: [\"Queue $\", betAmount, \" for next round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-line\",\n            children: [\"Potential at \", autoCashoutValue.toFixed(2), \"x: $\", (betAmount * autoCashoutValue).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`,\n            children: isBetPlaced ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Active in Round \", roundNumber]\n            }, void 0, true) : isBetQueued ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Queued $\", queuedBetAmount, \" for next round\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"No active bet\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auto-cashout-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"auto-cashout-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isAutoCashout,\n            onChange: e => setIsAutoCashout(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), \"Auto Cashout at\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: autoCashoutValue,\n          onChange: e => setAutoCashoutValue(parseFloat(e.target.value) || 2.00),\n          min: \"1.01\",\n          step: \"0.01\",\n          className: \"auto-cashout-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-grid\",\n        children: gameHistory.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `history-item ${result >= 2 ? 'green' : result >= 1.5 ? 'orange' : 'red'}`,\n          children: [result.toFixed(2), \"x\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bet-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Bet History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-history-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Payout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), betHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bet-history-empty\",\n          children: \"No bets yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), betHistory.map((b, i) => {\n          var _b$game;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"#\", b.round || ((_b$game = b.game) === null || _b$game === void 0 ? void 0 : _b$game.round_number)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", Number(b.payout).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profit\",\n              children: `${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Place your bet before the game starts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Watch the multiplier increase from 1.00x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Cash out before it crashes to win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Set auto cashout for automatic wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backend-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Backend Controlled:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), \" Crash points are predetermined from your custom odds configuration\", currentOdds && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"odds-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Current Odds Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 18\n            }, this), \" \", currentOdds.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Early Crash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 18\n            }, this), \" \", currentOdds.early_crash_probability, \"% (\", currentOdds.early_crash_min, \"x - \", currentOdds.early_crash_max, \"x)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"High Crash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 18\n            }, this), \" \", currentOdds.high_crash_min, \"x - \", currentOdds.high_crash_max, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this), currentOdds.use_custom_points && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Custom Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 20\n            }, this), \" \", ((_currentOdds$custom_c2 = currentOdds.custom_crash_points) === null || _currentOdds$custom_c2 === void 0 ? void 0 : _currentOdds$custom_c2.split(',').length) || 0, \" predetermined crash points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n};\n_s(Aviator, \"73kRuive5fHx7WTVIVItdl4n6IY=\");\n_c = Aviator;\nexport default Aviator;\nvar _c;\n$RefreshReg$(_c, \"Aviator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Aviator","_s","_currentOdds$custom_c","_currentOdds$custom_c2","gameState","setGameState","multiplier","setMultiplier","betAmount","setBetAmount","balance","setBalance","isBetPlaced","setIsBetPlaced","gameHistory","setGameHistory","timeLeft","setTimeLeft","crashPoint","setCrashPoint","isAutoCashout","setIsAutoCashout","autoCashoutValue","setAutoCashoutValue","roundNumber","setRoundNumber","isBetQueued","setIsBetQueued","queuedBetAmount","setQueuedBetAmount","betHistory","setBetHistory","currentGame","setCurrentGame","error","setError","currentOdds","setCurrentOdds","isLoading","setIsLoading","countdownEndAt","setCountdownEndAt","gameInterval","countdownInterval","gameCheckInterval","fetchBalance","console","log","response","get","data","_error$response","fetchCurrentOdds","_error$response2","fetchCurrentGame","game","round_number","status","crash_point","created","Date","created_at","now","elapsed","Math","floor","remaining","max","started","started_at","currentMultiplier","min","_error$response3","fetchGameHistory","map","_error$response4","fetchBetHistory","_error$response5","placeBet","post","amount","_error$response6","_error$response6$data","cashout","prev","bet","slice","_error$response7","_error$response7$data","startNewGame","current","clearInterval","endAt","setInterval","remainingMs","secondsLeft","ceil","latestGame","crash","startGame","backendCrashPoint","targetCrashPoint","newMultiplier","round","result","cashoutMultiplier","payout","profit","doubleBet","halfBet","resetBet","addChip","next","setMaxBet","clearBet","queueBetForNextRound","cancelQueuedBet","timer","setTimeout","clearTimeout","initializeComponent","Promise","all","catch","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","name","mode","div","initial","opacity","scale","animate","exit","use_custom_points","custom_crash_points","split","length","y","rotate","transition","duration","repeat","Infinity","ease","type","value","onChange","e","parseInt","target","checked","parseFloat","step","index","b","i","_b$game","Number","cashout_multiplier","early_crash_probability","early_crash_min","early_crash_max","high_crash_min","high_crash_max","_c","$RefreshReg$"],"sources":["C:/Users/Antoo/Desktop/betting/betsite/frontend/src/components/Aviator.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport axios from 'axios';\r\nimport './Aviator.css';\r\n\r\n// Set the base URL for API calls (env override, default to local backend)\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\r\n\r\nconst Aviator = () => {\r\n  const [gameState, setGameState] = useState('waiting');\r\n  const [multiplier, setMultiplier] = useState(1.00);\r\n  const [betAmount, setBetAmount] = useState(10);\r\n  const [balance, setBalance] = useState(1000);\r\n  const [isBetPlaced, setIsBetPlaced] = useState(false);\r\n  const [gameHistory, setGameHistory] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(5);\r\n  const [crashPoint, setCrashPoint] = useState(0);\r\n  const [isAutoCashout, setIsAutoCashout] = useState(false);\r\n  const [autoCashoutValue, setAutoCashoutValue] = useState(2.00);\r\n  const [roundNumber, setRoundNumber] = useState(0);\r\n  const [isBetQueued, setIsBetQueued] = useState(false);\r\n  const [queuedBetAmount, setQueuedBetAmount] = useState(10);\r\n  const [betHistory, setBetHistory] = useState([]);\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [currentOdds, setCurrentOdds] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [countdownEndAt, setCountdownEndAt] = useState(null);\r\n  \r\n  const gameInterval = useRef(null);\r\n  const countdownInterval = useRef(null);\r\n  const gameCheckInterval = useRef(null);\r\n\r\n  // API calls\r\n  const fetchBalance = async () => {\r\n    try {\r\n      console.log('Fetching balance from:', `${API_BASE_URL}/api/aviator/balance/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/balance/`);\r\n      console.log('Balance response:', response.data);\r\n      setBalance(response.data.balance);\r\n    } catch (error) {\r\n      console.error('Error fetching balance:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      setBalance(1000);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentOdds = async () => {\r\n    try {\r\n      console.log('Fetching odds from:', `${API_BASE_URL}/api/aviator/current-odds/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-odds/`);\r\n      console.log('Odds response:', response.data);\r\n      setCurrentOdds(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching current odds:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      setCurrentOdds(null);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentGame = async () => {\r\n    try {\r\n      console.log('Fetching game from:', `${API_BASE_URL}/api/aviator/current-game/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/current-game/`);\r\n      const game = response.data;\r\n      console.log('Game response:', game);\r\n      setCurrentGame(game);\r\n      setRoundNumber(game.round_number);\r\n      \r\n      if (game.status === 'waiting') {\r\n        setGameState('waiting');\r\n        setMultiplier(1.00);\r\n        setCrashPoint(game.crash_point);\r\n        const created = new Date(game.created_at);\r\n        const now = new Date();\r\n        const elapsed = Math.floor((now - created) / 1000);\r\n        const remaining = Math.max(0, 5 - elapsed);\r\n        setTimeLeft(remaining);\r\n        setCountdownEndAt(Date.now() + remaining * 1000);\r\n      } else if (game.status === 'active') {\r\n        setGameState('playing');\r\n        setMultiplier(1.00);\r\n        const started = new Date(game.started_at);\r\n        const now = new Date();\r\n        const elapsed = Math.floor((now - started) / 1000);\r\n        const currentMultiplier = 1.00 + (elapsed * 0.01);\r\n        setMultiplier(Math.min(currentMultiplier, game.crash_point));\r\n      } else if (game.status === 'crashed') {\r\n        setGameState('crashed');\r\n        setCrashPoint(game.crash_point);\r\n        setMultiplier(game.crash_point);\r\n      }\r\n      return game;\r\n    } catch (error) {\r\n      console.error('Error fetching current game:', error);\r\n      console.error('Error details:', error.response?.data);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchGameHistory = async () => {\r\n    try {\r\n      console.log('Fetching game history from:', `${API_BASE_URL}/api/aviator/game-history/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/game-history/`);\r\n      console.log('Game history response:', response.data);\r\n      setGameHistory(response.data.map(game => game.crash_point));\r\n    } catch (error) {\r\n      console.error('Error fetching game history:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  const fetchBetHistory = async () => {\r\n    try {\r\n      console.log('Fetching bet history from:', `${API_BASE_URL}/api/aviator/history/`);\r\n      const response = await axios.get(`${API_BASE_URL}/api/aviator/history/`);\r\n      console.log('Bet history response:', response.data);\r\n      setBetHistory(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching bet history:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  };\r\n\r\n  // Place bet\r\n  const placeBet = async () => {\r\n    if (balance >= betAmount && !isBetPlaced && gameState === 'waiting') {\r\n      try {\r\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/place-bet/`, {\r\n          amount: betAmount\r\n        });\r\n        \r\n        setBalance(response.data.balance);\r\n        setIsBetPlaced(true);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(error.response?.data?.error || 'Failed to place bet');\r\n        console.error('Error placing bet:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cashout\r\n  const cashout = async () => {\r\n    if (isBetPlaced && gameState === 'playing') {\r\n      try {\r\n        const response = await axios.post(`${API_BASE_URL}/api/aviator/cashout/`, {\r\n          round_number: roundNumber,\r\n          multiplier: multiplier\r\n        });\r\n        \r\n        setBalance(response.data.balance);\r\n        setIsBetPlaced(false);\r\n        setBetHistory(prev => [response.data.bet, ...prev.slice(0, 19)]);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(error.response?.data?.error || 'Failed to cashout');\r\n        console.error('Error cashing out:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Start new game\r\n  const startNewGame = () => {\r\n    // Ensure no overlapping countdowns\r\n    if (countdownInterval.current) {\r\n      clearInterval(countdownInterval.current);\r\n      countdownInterval.current = null;\r\n    }\r\n    if (currentGame && currentGame.crash_point) {\r\n      setCrashPoint(currentGame.crash_point);\r\n      setGameState('waiting');\r\n      setMultiplier(1.00);\r\n      setTimeLeft(5);\r\n      const endAt = Date.now() + 5000;\r\n      setCountdownEndAt(endAt);\r\n      \r\n      countdownInterval.current = setInterval(async () => {\r\n        const remainingMs = endAt - Date.now();\r\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\r\n        setTimeLeft(prev => (prev !== secondsLeft ? secondsLeft : prev));\r\n        if (secondsLeft <= 0) {\r\n          clearInterval(countdownInterval.current);\r\n          countdownInterval.current = null;\r\n          // Re-fetch to ensure we have the latest crash point from backend\r\n          const latestGame = await fetchCurrentGame();\r\n          const crash = (latestGame && latestGame.crash_point) ? latestGame.crash_point : currentGame.crash_point;\r\n          startGame(crash);\r\n        }\r\n      }, 100);\r\n    } else {\r\n      // No game from backend yet; wait 5s, then try to fetch and start again\r\n      setGameState('waiting');\r\n      setMultiplier(1.00);\r\n      setTimeLeft(5);\r\n      const endAt = Date.now() + 5000;\r\n      setCountdownEndAt(endAt);\r\n      countdownInterval.current = setInterval(async () => {\r\n        const remainingMs = endAt - Date.now();\r\n        const secondsLeft = Math.max(0, Math.ceil(remainingMs / 1000));\r\n        setTimeLeft(prev => (prev !== secondsLeft ? secondsLeft : prev));\r\n        if (secondsLeft <= 0) {\r\n          clearInterval(countdownInterval.current);\r\n          countdownInterval.current = null;\r\n          // Fetch latest game and start if available\r\n          const latestGame = await fetchCurrentGame();\r\n          if (latestGame && latestGame.crash_point) {\r\n            startGame(latestGame.crash_point);\r\n          } else {\r\n            // If still no game, schedule another waiting cycle\r\n            startNewGame();\r\n          }\r\n        }\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // Start the actual game\r\n  const startGame = (backendCrashPoint) => {\r\n    setGameState('playing');\r\n    setMultiplier(1.00);\r\n    \r\n    const targetCrashPoint = backendCrashPoint;\r\n    \r\n    gameInterval.current = setInterval(() => {\r\n      setMultiplier(prev => {\r\n        const newMultiplier = prev + 0.01;\r\n        \r\n        if (newMultiplier >= targetCrashPoint) {\r\n          clearInterval(gameInterval.current);\r\n          setGameState('crashed');\r\n          setGameHistory(prev => [targetCrashPoint, ...prev.slice(0, 9)]);\r\n          \r\n          if (isBetPlaced) {\r\n            setIsBetPlaced(false);\r\n            setBetHistory(prev => [\r\n              {\r\n                round: roundNumber,\r\n                amount: betAmount,\r\n                result: 'crash',\r\n                cashoutMultiplier: null,\r\n                payout: 0,\r\n                profit: -betAmount\r\n              },\r\n              ...prev.slice(0, 19)\r\n            ]);\r\n          }\r\n          \r\n          return targetCrashPoint;\r\n        }\r\n        \r\n        if (isAutoCashout && newMultiplier >= autoCashoutValue) {\r\n          cashout();\r\n        }\r\n        \r\n        return newMultiplier;\r\n      });\r\n    }, 50);\r\n  };\r\n\r\n  // Bet controls\r\n  const doubleBet = () => {\r\n    if (balance >= betAmount * 2) {\r\n      setBetAmount(prev => prev * 2);\r\n    }\r\n  };\r\n\r\n  const halfBet = () => {\r\n    setBetAmount(prev => Math.max(1, Math.floor(prev / 2)));\r\n  };\r\n\r\n  const resetBet = () => {\r\n    setBetAmount(10);\r\n  };\r\n\r\n  const addChip = (amount) => {\r\n    setBetAmount(prev => {\r\n      const next = Math.max(1, prev + amount);\r\n      return Math.min(next, balance);\r\n    });\r\n  };\r\n  \r\n  const setMaxBet = () => {\r\n    setBetAmount(Math.max(1, Math.floor(balance)));\r\n  };\r\n  \r\n  const clearBet = () => {\r\n    setBetAmount(1);\r\n  };\r\n  \r\n  const queueBetForNextRound = () => {\r\n    if (!isBetPlaced && balance >= betAmount) {\r\n      setQueuedBetAmount(betAmount);\r\n      setIsBetQueued(true);\r\n    }\r\n  };\r\n  \r\n  const cancelQueuedBet = () => {\r\n    setIsBetQueued(false);\r\n  };\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (gameState === 'crashed') {\r\n      const timer = setTimeout(() => {\r\n        startNewGame();\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [gameState]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (gameInterval.current) clearInterval(gameInterval.current);\r\n      if (countdownInterval.current) clearInterval(countdownInterval.current);\r\n      if (gameCheckInterval.current) clearInterval(gameCheckInterval.current);\r\n    };\r\n  }, []);\r\n\r\n  // Initialize and periodic updates\r\n  useEffect(() => {\r\n    console.log('Aviator component mounted - starting initialization');\r\n    setIsLoading(true);\r\n    \r\n    const initializeComponent = async () => {\r\n      try {\r\n        console.log('Starting API calls...');\r\n        await Promise.all([\r\n          fetchBalance(),\r\n          fetchCurrentOdds(),\r\n          fetchCurrentGame().catch(() => undefined),\r\n          fetchGameHistory(),\r\n          fetchBetHistory()\r\n        ]);\r\n        console.log('All API calls completed');\r\n      } catch (error) {\r\n        console.error('Error during initialization:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n        console.log('Component initialization complete');\r\n      }\r\n    };\r\n    \r\n    initializeComponent();\r\n    \r\n    // Check for game updates every 2 seconds (ignore failures)\r\n    gameCheckInterval.current = setInterval(() => {\r\n      fetchCurrentGame().catch(() => undefined);\r\n    }, 2000);\r\n    \r\n    // Initial game start\r\n    const timer = setTimeout(() => {\r\n      console.log('Starting initial game...');\r\n      startNewGame();\r\n    }, 1000);\r\n    \r\n    return () => {\r\n      console.log('Cleaning up Aviator component');\r\n      clearTimeout(timer);\r\n    };\r\n  }, []);\r\n\r\n  console.log('Rendering Aviator component, currentOdds:', currentOdds, 'isLoading:', isLoading);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"aviator-container\">\r\n        <div className=\"loading-state\">\r\n          <h2>Loading Aviator Game...</h2>\r\n          <div className=\"loading-spinner\">⏳</div>\r\n          <p>Connecting to backend...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"aviator-container\">\r\n      <div className=\"aviator-header\">\r\n        <h1>Aviator</h1>\r\n        <div className=\"balance-display\">\r\n          Balance: ${balance.toFixed(2)}\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <strong>Error:</strong> {error}\r\n          <button onClick={() => setError(null)} className=\"error-close\">×</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"debug-info\">\r\n        <small>API Base: {API_BASE_URL}</small>\r\n        <small>Current Odds: {currentOdds ? currentOdds.name : 'None'}</small>\r\n        <small>Game State: {gameState}</small>\r\n        <small>Round: #{roundNumber}</small>\r\n      </div>\r\n\r\n      <div className=\"game-area\">\r\n        <div className=\"multiplier-display\">\r\n          <AnimatePresence mode=\"wait\">\r\n            {gameState === 'waiting' && (\r\n              <motion.div\r\n                key=\"waiting\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"waiting-state\"\r\n              >\r\n                <h2>Next game in {timeLeft}s</h2>\r\n                <div className=\"countdown-circle\">\r\n                  <span>{timeLeft}</span>\r\n                </div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n                {currentOdds && (\r\n                  <div className=\"odds-info\">\r\n                    <small>Using: {currentOdds.name}</small>\r\n                    {currentOdds.use_custom_points && (\r\n                      <small>Custom Points: {currentOdds.custom_crash_points?.split(',').length || 0}</small>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            )}\r\n            \r\n            {gameState === 'playing' && (\r\n              <motion.div\r\n                key=\"playing\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"playing-state\"\r\n              >\r\n                <h2 className=\"multiplier-text\">\r\n                  {multiplier.toFixed(2)}x\r\n                </h2>\r\n                <motion.div\r\n                  className=\"airplane\"\r\n                  animate={{\r\n                    y: [0, -20, 0],\r\n                    rotate: [0, 5, -5, 0]\r\n                  }}\r\n                  transition={{\r\n                    duration: 2,\r\n                    repeat: Infinity,\r\n                    ease: \"easeInOut\"\r\n                  }}\r\n                >\r\n                  ✈️\r\n                </motion.div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n              </motion.div>\r\n            )}\r\n            \r\n            {gameState === 'crashed' && (\r\n              <motion.div\r\n                key=\"crashed\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                className=\"crashed-state\"\r\n              >\r\n                <h2 className=\"crash-text\">CRASHED AT {crashPoint.toFixed(2)}x</h2>\r\n                <div className=\"crash-animation\">\r\n                  💥\r\n                </div>\r\n                <div className=\"round-info\">Round #{roundNumber}</div>\r\n                <div className=\"backend-info\">\r\n                  <small>Predetermined crash point from backend</small>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        <div className=\"betting-controls\">\r\n          <div className=\"bet-amount-controls\">\r\n            <button onClick={halfBet} className=\"bet-btn\">½</button>\r\n            <button onClick={resetBet} className=\"bet-btn\">Reset</button>\r\n            <button onClick={doubleBet} className=\"bet-btn\">2×</button>\r\n          </div>\r\n          \r\n          <div className=\"bet-input\">\r\n            <input\r\n              type=\"number\"\r\n              value={betAmount}\r\n              onChange={(e) => setBetAmount(Math.max(1, parseInt(e.target.value) || 1))}\r\n              min=\"1\"\r\n              max={balance}\r\n              className=\"bet-amount-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"quick-chips\">\r\n            <button className=\"chip\" onClick={() => addChip(1)}>+1</button>\r\n            <button className=\"chip\" onClick={() => addChip(5)}>+5</button>\r\n            <button className=\"chip\" onClick={() => addChip(10)}>+10</button>\r\n            <button className=\"chip\" onClick={() => addChip(50)}>+50</button>\r\n            <button className=\"chip\" onClick={() => addChip(100)}>+100</button>\r\n            <button className=\"chip\" onClick={setMaxBet}>Max</button>\r\n            <button className=\"chip outline\" onClick={clearBet}>Clear</button>\r\n          </div>\r\n          \r\n          <div className=\"action-buttons\">\r\n            {!isBetPlaced && gameState === 'waiting' && (\r\n              <button onClick={placeBet} className=\"place-bet-btn\">\r\n                Place Bet ${betAmount}\r\n              </button>\r\n            )}\r\n            \r\n            {isBetPlaced && gameState === 'playing' && (\r\n              <button onClick={cashout} className=\"cashout-btn\">\r\n                Cashout ${(betAmount * multiplier).toFixed(2)}\r\n              </button>\r\n            )}\r\n\r\n            {!isBetPlaced && gameState !== 'waiting' && (\r\n              isBetQueued ? (\r\n                <div className=\"queued-controls\">\r\n                  <span className=\"queued-badge\">Queued ${queuedBetAmount} for next round</span>\r\n                  <button onClick={cancelQueuedBet} className=\"queue-cancel-btn\">Cancel</button>\r\n                </div>\r\n              ) : (\r\n                <button onClick={queueBetForNextRound} className=\"queue-bet-btn\">\r\n                  Queue ${betAmount} for next round\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bet-summary\">\r\n            <div className=\"summary-line\">\r\n              Potential at {autoCashoutValue.toFixed(2)}x: ${ (betAmount * autoCashoutValue).toFixed(2) }\r\n            </div>\r\n            <div className={`bet-status ${isBetPlaced ? 'active' : isBetQueued ? 'queued' : 'idle'}`}>\r\n              {isBetPlaced ? (\r\n                <>Active in Round {roundNumber}</>\r\n              ) : isBetQueued ? (\r\n                <>Queued ${queuedBetAmount} for next round</>\r\n              ) : (\r\n                <>No active bet</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"auto-cashout-section\">\r\n          <label className=\"auto-cashout-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isAutoCashout}\r\n              onChange={(e) => setIsAutoCashout(e.target.checked)}\r\n            />\r\n            Auto Cashout at\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={autoCashoutValue}\r\n            onChange={(e) => setAutoCashoutValue(parseFloat(e.target.value) || 2.00)}\r\n            min=\"1.01\"\r\n            step=\"0.01\"\r\n            className=\"auto-cashout-input\"\r\n          />\r\n          <span>x</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-history\">\r\n        <h3>Recent Results</h3>\r\n        <div className=\"history-grid\">\r\n          {gameHistory.map((result, index) => (\r\n            <div\r\n              key={index}\r\n              className={`history-item ${result >= 2 ? 'green' : result >= 1.5 ? 'orange' : 'red'}`}\r\n            >\r\n              {result.toFixed(2)}x\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bet-history\">\r\n        <h3>Your Bet History</h3>\r\n        <div className=\"bet-history-table\">\r\n          <div className=\"bet-history-header\">\r\n            <span>Round</span>\r\n            <span>Stake</span>\r\n            <span>Outcome</span>\r\n            <span>Payout</span>\r\n            <span>Profit</span>\r\n          </div>\r\n          {betHistory.length === 0 && (\r\n            <div className=\"bet-history-empty\">No bets yet</div>\r\n          )}\r\n          {betHistory.map((b, i) => (\r\n            <div className={`bet-history-row ${b.result === 'cashout' ? 'win' : 'loss'}`} key={i}>\r\n              <span>#{b.round || b.game?.round_number}</span>\r\n              <span>${Number(b.amount).toFixed(2)}</span>\r\n              <span>{b.result === 'cashout' ? `${Number(b.cashout_multiplier || b.cashoutMultiplier).toFixed(2)}x` : 'Crashed'}</span>\r\n              <span>${Number(b.payout).toFixed(2)}</span>\r\n              <span className=\"profit\">{`${b.profit >= 0 ? '+' : ''}${Number(b.profit).toFixed(2)}`}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-info\">\r\n        <h3>How to Play</h3>\r\n        <ul>\r\n          <li>Place your bet before the game starts</li>\r\n          <li>Watch the multiplier increase from 1.00x</li>\r\n          <li>Cash out before it crashes to win!</li>\r\n          <li>Set auto cashout for automatic wins</li>\r\n        </ul>\r\n        <div className=\"backend-info\">\r\n          <strong>Backend Controlled:</strong> Crash points are predetermined from your custom odds configuration\r\n          {currentOdds && (\r\n            <div className=\"odds-details\">\r\n              <p><strong>Current Odds Set:</strong> {currentOdds.name}</p>\r\n              <p><strong>Early Crash:</strong> {currentOdds.early_crash_probability}% ({currentOdds.early_crash_min}x - {currentOdds.early_crash_max}x)</p>\r\n              <p><strong>High Crash:</strong> {currentOdds.high_crash_min}x - {currentOdds.high_crash_max}x</p>\r\n              {currentOdds.use_custom_points && (\r\n                <p><strong>Custom Points:</strong> {currentOdds.custom_crash_points?.split(',').length || 0} predetermined crash points</p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aviator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgD,KAAK,EAAEC,QAAQ,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoD,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsD,cAAc,EAAEC,iBAAiB,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMwD,YAAY,GAAGtD,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMuD,iBAAiB,GAAGvD,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMwD,iBAAiB,GAAGxD,MAAM,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMyD,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,GAAGnD,YAAY,uBAAuB,CAAC;MAC7E,MAAMoD,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,GAAGrD,YAAY,uBAAuB,CAAC;MACxEkD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/CvC,UAAU,CAACqC,QAAQ,CAACE,IAAI,CAACxC,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOwB,KAAK,EAAE;MAAA,IAAAiB,eAAA;MACdL,OAAO,CAACZ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,GAAAiB,eAAA,GAAEjB,KAAK,CAACc,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,CAAC;MACrDvC,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,MAAMyC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFN,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,GAAGnD,YAAY,4BAA4B,CAAC;MAC/E,MAAMoD,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,GAAGrD,YAAY,4BAA4B,CAAC;MAC7EkD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC5Cb,cAAc,CAACW,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MAAA,IAAAmB,gBAAA;MACdP,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,GAAAmB,gBAAA,GAAEnB,KAAK,CAACc,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,CAAC;MACrDb,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,GAAGnD,YAAY,4BAA4B,CAAC;MAC/E,MAAMoD,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,GAAGrD,YAAY,4BAA4B,CAAC;MAC7E,MAAM2D,IAAI,GAAGP,QAAQ,CAACE,IAAI;MAC1BJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,IAAI,CAAC;MACnCtB,cAAc,CAACsB,IAAI,CAAC;MACpB9B,cAAc,CAAC8B,IAAI,CAACC,YAAY,CAAC;MAEjC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;QAC7BpD,YAAY,CAAC,SAAS,CAAC;QACvBE,aAAa,CAAC,IAAI,CAAC;QACnBY,aAAa,CAACoC,IAAI,CAACG,WAAW,CAAC;QAC/B,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACL,IAAI,CAACM,UAAU,CAAC;QACzC,MAAMC,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;QACtB,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,GAAGH,OAAO,IAAI,IAAI,CAAC;QAClD,MAAMO,SAAS,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGJ,OAAO,CAAC;QAC1C9C,WAAW,CAACiD,SAAS,CAAC;QACtBzB,iBAAiB,CAACmB,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGI,SAAS,GAAG,IAAI,CAAC;MAClD,CAAC,MAAM,IAAIX,IAAI,CAACE,MAAM,KAAK,QAAQ,EAAE;QACnCpD,YAAY,CAAC,SAAS,CAAC;QACvBE,aAAa,CAAC,IAAI,CAAC;QACnB,MAAM6D,OAAO,GAAG,IAAIR,IAAI,CAACL,IAAI,CAACc,UAAU,CAAC;QACzC,MAAMP,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;QACtB,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,GAAGM,OAAO,IAAI,IAAI,CAAC;QAClD,MAAME,iBAAiB,GAAG,IAAI,GAAIP,OAAO,GAAG,IAAK;QACjDxD,aAAa,CAACyD,IAAI,CAACO,GAAG,CAACD,iBAAiB,EAAEf,IAAI,CAACG,WAAW,CAAC,CAAC;MAC9D,CAAC,MAAM,IAAIH,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;QACpCpD,YAAY,CAAC,SAAS,CAAC;QACvBc,aAAa,CAACoC,IAAI,CAACG,WAAW,CAAC;QAC/BnD,aAAa,CAACgD,IAAI,CAACG,WAAW,CAAC;MACjC;MACA,OAAOH,IAAI;IACb,CAAC,CAAC,OAAOrB,KAAK,EAAE;MAAA,IAAAsC,gBAAA;MACd1B,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,GAAAsC,gBAAA,GAAEtC,KAAK,CAACc,QAAQ,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgBtB,IAAI,CAAC;MACrD,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMuB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF3B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,GAAGnD,YAAY,4BAA4B,CAAC;MACvF,MAAMoD,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,GAAGrD,YAAY,4BAA4B,CAAC;MAC7EkD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACpDnC,cAAc,CAACiC,QAAQ,CAACE,IAAI,CAACwB,GAAG,CAACnB,IAAI,IAAIA,IAAI,CAACG,WAAW,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOxB,KAAK,EAAE;MAAA,IAAAyC,gBAAA;MACd7B,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,GAAAyC,gBAAA,GAAEzC,KAAK,CAACc,QAAQ,cAAA2B,gBAAA,uBAAdA,gBAAA,CAAgBzB,IAAI,CAAC;IACvD;EACF,CAAC;EAED,MAAM0B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF9B,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,GAAGnD,YAAY,uBAAuB,CAAC;MACjF,MAAMoD,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,GAAGrD,YAAY,uBAAuB,CAAC;MACxEkD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACnDnB,aAAa,CAACiB,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MAAA,IAAA2C,gBAAA;MACd/B,OAAO,CAACZ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,GAAA2C,gBAAA,GAAE3C,KAAK,CAACc,QAAQ,cAAA6B,gBAAA,uBAAdA,gBAAA,CAAgB3B,IAAI,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAM4B,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIpE,OAAO,IAAIF,SAAS,IAAI,CAACI,WAAW,IAAIR,SAAS,KAAK,SAAS,EAAE;MACnE,IAAI;QACF,MAAM4C,QAAQ,GAAG,MAAMzD,KAAK,CAACwF,IAAI,CAAC,GAAGnF,YAAY,yBAAyB,EAAE;UAC1EoF,MAAM,EAAExE;QACV,CAAC,CAAC;QAEFG,UAAU,CAACqC,QAAQ,CAACE,IAAI,CAACxC,OAAO,CAAC;QACjCG,cAAc,CAAC,IAAI,CAAC;QACpBsB,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QAAA,IAAA+C,gBAAA,EAAAC,qBAAA;QACd/C,QAAQ,CAAC,EAAA8C,gBAAA,GAAA/C,KAAK,CAACc,QAAQ,cAAAiC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB/B,IAAI,cAAAgC,qBAAA,uBAApBA,qBAAA,CAAsBhD,KAAK,KAAI,qBAAqB,CAAC;QAC9DY,OAAO,CAACZ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF,CAAC;;EAED;EACA,MAAMiD,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIvE,WAAW,IAAIR,SAAS,KAAK,SAAS,EAAE;MAC1C,IAAI;QACF,MAAM4C,QAAQ,GAAG,MAAMzD,KAAK,CAACwF,IAAI,CAAC,GAAGnF,YAAY,uBAAuB,EAAE;UACxE4D,YAAY,EAAEhC,WAAW;UACzBlB,UAAU,EAAEA;QACd,CAAC,CAAC;QAEFK,UAAU,CAACqC,QAAQ,CAACE,IAAI,CAACxC,OAAO,CAAC;QACjCG,cAAc,CAAC,KAAK,CAAC;QACrBkB,aAAa,CAACqD,IAAI,IAAI,CAACpC,QAAQ,CAACE,IAAI,CAACmC,GAAG,EAAE,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAChEnD,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QAAA,IAAAqD,gBAAA,EAAAC,qBAAA;QACdrD,QAAQ,CAAC,EAAAoD,gBAAA,GAAArD,KAAK,CAACc,QAAQ,cAAAuC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrC,IAAI,cAAAsC,qBAAA,uBAApBA,qBAAA,CAAsBtD,KAAK,KAAI,mBAAmB,CAAC;QAC5DY,OAAO,CAACZ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF,CAAC;;EAED;EACA,MAAMuD,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAI9C,iBAAiB,CAAC+C,OAAO,EAAE;MAC7BC,aAAa,CAAChD,iBAAiB,CAAC+C,OAAO,CAAC;MACxC/C,iBAAiB,CAAC+C,OAAO,GAAG,IAAI;IAClC;IACA,IAAI1D,WAAW,IAAIA,WAAW,CAAC0B,WAAW,EAAE;MAC1CvC,aAAa,CAACa,WAAW,CAAC0B,WAAW,CAAC;MACtCrD,YAAY,CAAC,SAAS,CAAC;MACvBE,aAAa,CAAC,IAAI,CAAC;MACnBU,WAAW,CAAC,CAAC,CAAC;MACd,MAAM2E,KAAK,GAAGhC,IAAI,CAACE,GAAG,CAAC,CAAC,GAAG,IAAI;MAC/BrB,iBAAiB,CAACmD,KAAK,CAAC;MAExBjD,iBAAiB,CAAC+C,OAAO,GAAGG,WAAW,CAAC,YAAY;QAClD,MAAMC,WAAW,GAAGF,KAAK,GAAGhC,IAAI,CAACE,GAAG,CAAC,CAAC;QACtC,MAAMiC,WAAW,GAAG/B,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACgC,IAAI,CAACF,WAAW,GAAG,IAAI,CAAC,CAAC;QAC9D7E,WAAW,CAACmE,IAAI,IAAKA,IAAI,KAAKW,WAAW,GAAGA,WAAW,GAAGX,IAAK,CAAC;QAChE,IAAIW,WAAW,IAAI,CAAC,EAAE;UACpBJ,aAAa,CAAChD,iBAAiB,CAAC+C,OAAO,CAAC;UACxC/C,iBAAiB,CAAC+C,OAAO,GAAG,IAAI;UAChC;UACA,MAAMO,UAAU,GAAG,MAAM3C,gBAAgB,CAAC,CAAC;UAC3C,MAAM4C,KAAK,GAAID,UAAU,IAAIA,UAAU,CAACvC,WAAW,GAAIuC,UAAU,CAACvC,WAAW,GAAG1B,WAAW,CAAC0B,WAAW;UACvGyC,SAAS,CAACD,KAAK,CAAC;QAClB;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACL;MACA7F,YAAY,CAAC,SAAS,CAAC;MACvBE,aAAa,CAAC,IAAI,CAAC;MACnBU,WAAW,CAAC,CAAC,CAAC;MACd,MAAM2E,KAAK,GAAGhC,IAAI,CAACE,GAAG,CAAC,CAAC,GAAG,IAAI;MAC/BrB,iBAAiB,CAACmD,KAAK,CAAC;MACxBjD,iBAAiB,CAAC+C,OAAO,GAAGG,WAAW,CAAC,YAAY;QAClD,MAAMC,WAAW,GAAGF,KAAK,GAAGhC,IAAI,CAACE,GAAG,CAAC,CAAC;QACtC,MAAMiC,WAAW,GAAG/B,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACgC,IAAI,CAACF,WAAW,GAAG,IAAI,CAAC,CAAC;QAC9D7E,WAAW,CAACmE,IAAI,IAAKA,IAAI,KAAKW,WAAW,GAAGA,WAAW,GAAGX,IAAK,CAAC;QAChE,IAAIW,WAAW,IAAI,CAAC,EAAE;UACpBJ,aAAa,CAAChD,iBAAiB,CAAC+C,OAAO,CAAC;UACxC/C,iBAAiB,CAAC+C,OAAO,GAAG,IAAI;UAChC;UACA,MAAMO,UAAU,GAAG,MAAM3C,gBAAgB,CAAC,CAAC;UAC3C,IAAI2C,UAAU,IAAIA,UAAU,CAACvC,WAAW,EAAE;YACxCyC,SAAS,CAACF,UAAU,CAACvC,WAAW,CAAC;UACnC,CAAC,MAAM;YACL;YACA+B,YAAY,CAAC,CAAC;UAChB;QACF;MACF,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC;;EAED;EACA,MAAMU,SAAS,GAAIC,iBAAiB,IAAK;IACvC/F,YAAY,CAAC,SAAS,CAAC;IACvBE,aAAa,CAAC,IAAI,CAAC;IAEnB,MAAM8F,gBAAgB,GAAGD,iBAAiB;IAE1C1D,YAAY,CAACgD,OAAO,GAAGG,WAAW,CAAC,MAAM;MACvCtF,aAAa,CAAC6E,IAAI,IAAI;QACpB,MAAMkB,aAAa,GAAGlB,IAAI,GAAG,IAAI;QAEjC,IAAIkB,aAAa,IAAID,gBAAgB,EAAE;UACrCV,aAAa,CAACjD,YAAY,CAACgD,OAAO,CAAC;UACnCrF,YAAY,CAAC,SAAS,CAAC;UACvBU,cAAc,CAACqE,IAAI,IAAI,CAACiB,gBAAgB,EAAE,GAAGjB,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAE/D,IAAI1E,WAAW,EAAE;YACfC,cAAc,CAAC,KAAK,CAAC;YACrBkB,aAAa,CAACqD,IAAI,IAAI,CACpB;cACEmB,KAAK,EAAE/E,WAAW;cAClBwD,MAAM,EAAExE,SAAS;cACjBgG,MAAM,EAAE,OAAO;cACfC,iBAAiB,EAAE,IAAI;cACvBC,MAAM,EAAE,CAAC;cACTC,MAAM,EAAE,CAACnG;YACX,CAAC,EACD,GAAG4E,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACrB,CAAC;UACJ;UAEA,OAAOe,gBAAgB;QACzB;QAEA,IAAIjF,aAAa,IAAIkF,aAAa,IAAIhF,gBAAgB,EAAE;UACtD6D,OAAO,CAAC,CAAC;QACX;QAEA,OAAOmB,aAAa;MACtB,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;;EAED;EACA,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIlG,OAAO,IAAIF,SAAS,GAAG,CAAC,EAAE;MAC5BC,YAAY,CAAC2E,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAChC;EACF,CAAC;EAED,MAAMyB,OAAO,GAAGA,CAAA,KAAM;IACpBpG,YAAY,CAAC2E,IAAI,IAAIpB,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACC,KAAK,CAACmB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAM0B,QAAQ,GAAGA,CAAA,KAAM;IACrBrG,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMsG,OAAO,GAAI/B,MAAM,IAAK;IAC1BvE,YAAY,CAAC2E,IAAI,IAAI;MACnB,MAAM4B,IAAI,GAAGhD,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEiB,IAAI,GAAGJ,MAAM,CAAC;MACvC,OAAOhB,IAAI,CAACO,GAAG,CAACyC,IAAI,EAAEtG,OAAO,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMuG,SAAS,GAAGA,CAAA,KAAM;IACtBxG,YAAY,CAACuD,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACC,KAAK,CAACvD,OAAO,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMwG,QAAQ,GAAGA,CAAA,KAAM;IACrBzG,YAAY,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAM0G,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAACvG,WAAW,IAAIF,OAAO,IAAIF,SAAS,EAAE;MACxCqB,kBAAkB,CAACrB,SAAS,CAAC;MAC7BmB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMyF,eAAe,GAAGA,CAAA,KAAM;IAC5BzF,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACAxC,SAAS,CAAC,MAAM;IACd,IAAIiB,SAAS,KAAK,SAAS,EAAE;MAC3B,MAAMiH,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7B7B,YAAY,CAAC,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAM8B,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACjH,SAAS,CAAC,CAAC;EAEfjB,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIuD,YAAY,CAACgD,OAAO,EAAEC,aAAa,CAACjD,YAAY,CAACgD,OAAO,CAAC;MAC7D,IAAI/C,iBAAiB,CAAC+C,OAAO,EAAEC,aAAa,CAAChD,iBAAiB,CAAC+C,OAAO,CAAC;MACvE,IAAI9C,iBAAiB,CAAC8C,OAAO,EAAEC,aAAa,CAAC/C,iBAAiB,CAAC8C,OAAO,CAAC;IACzE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvG,SAAS,CAAC,MAAM;IACd2D,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IAClER,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMiF,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF1E,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpC,MAAM0E,OAAO,CAACC,GAAG,CAAC,CAChB7E,YAAY,CAAC,CAAC,EACdO,gBAAgB,CAAC,CAAC,EAClBE,gBAAgB,CAAC,CAAC,CAACqE,KAAK,CAAC,MAAMC,SAAS,CAAC,EACzCnD,gBAAgB,CAAC,CAAC,EAClBG,eAAe,CAAC,CAAC,CAClB,CAAC;QACF9B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,SAAS;QACRK,YAAY,CAAC,KAAK,CAAC;QACnBO,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAClD;IACF,CAAC;IAEDyE,mBAAmB,CAAC,CAAC;;IAErB;IACA5E,iBAAiB,CAAC8C,OAAO,GAAGG,WAAW,CAAC,MAAM;MAC5CvC,gBAAgB,CAAC,CAAC,CAACqE,KAAK,CAAC,MAAMC,SAAS,CAAC;IAC3C,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,MAAMP,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BxE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC0C,YAAY,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACX3C,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CwE,YAAY,CAACF,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENvE,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEX,WAAW,EAAE,YAAY,EAAEE,SAAS,CAAC;EAE9F,IAAIA,SAAS,EAAE;IACb,oBACE7C,OAAA;MAAKoI,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCrI,OAAA;QAAKoI,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrI,OAAA;UAAAqI,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCzI,OAAA;UAAKoI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxCzI,OAAA;UAAAqI,QAAA,EAAG;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEzI,OAAA;IAAKoI,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCrI,OAAA;MAAKoI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BrI,OAAA;QAAAqI,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBzI,OAAA;QAAKoI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAAC,YACrB,EAACpH,OAAO,CAACyH,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELhG,KAAK,iBACJzC,OAAA;MAAKoI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BrI,OAAA;QAAAqI,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAChG,KAAK,eAC9BzC,OAAA;QAAQ2I,OAAO,EAAEA,CAAA,KAAMjG,QAAQ,CAAC,IAAI,CAAE;QAAC0F,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACN,eAEDzI,OAAA;MAAKoI,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrI,OAAA;QAAAqI,QAAA,GAAO,YAAU,EAAClI,YAAY;MAAA;QAAAmI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvCzI,OAAA;QAAAqI,QAAA,GAAO,gBAAc,EAAC1F,WAAW,GAAGA,WAAW,CAACiG,IAAI,GAAG,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtEzI,OAAA;QAAAqI,QAAA,GAAO,cAAY,EAAC1H,SAAS;MAAA;QAAA2H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCzI,OAAA;QAAAqI,QAAA,GAAO,UAAQ,EAACtG,WAAW;MAAA;QAAAuG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAENzI,OAAA;MAAKoI,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBrI,OAAA;QAAKoI,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjCrI,OAAA,CAACH,eAAe;UAACgJ,IAAI,EAAC,MAAM;UAAAR,QAAA,GACzB1H,SAAS,KAAK,SAAS,iBACtBX,OAAA,CAACJ,MAAM,CAACkJ,GAAG;YAETC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACpCC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAE;YAClCE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACjCb,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAEzBrI,OAAA;cAAAqI,QAAA,GAAI,eAAa,EAAC9G,QAAQ,EAAC,GAAC;YAAA;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjCzI,OAAA;cAAKoI,SAAS,EAAC,kBAAkB;cAAAC,QAAA,eAC/BrI,OAAA;gBAAAqI,QAAA,EAAO9G;cAAQ;gBAAA+G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC,eACNzI,OAAA;cAAKoI,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,SAAO,EAACtG,WAAW;YAAA;cAAAuG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACrD9F,WAAW,iBACV3C,OAAA;cAAKoI,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBrI,OAAA;gBAAAqI,QAAA,GAAO,SAAO,EAAC1F,WAAW,CAACiG,IAAI;cAAA;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACvC9F,WAAW,CAACyG,iBAAiB,iBAC5BpJ,OAAA;gBAAAqI,QAAA,GAAO,iBAAe,EAAC,EAAA5H,qBAAA,GAAAkC,WAAW,CAAC0G,mBAAmB,cAAA5I,qBAAA,uBAA/BA,qBAAA,CAAiC6I,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,KAAI,CAAC;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACvF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN;UAAA,GAlBG,SAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBH,CACb,EAEA9H,SAAS,KAAK,SAAS,iBACtBX,OAAA,CAACJ,MAAM,CAACkJ,GAAG;YAETC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACpCC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAE;YAClCE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACjCb,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAEzBrI,OAAA;cAAIoI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,GAC5BxH,UAAU,CAAC6H,OAAO,CAAC,CAAC,CAAC,EAAC,GACzB;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLzI,OAAA,CAACJ,MAAM,CAACkJ,GAAG;cACTV,SAAS,EAAC,UAAU;cACpBc,OAAO,EAAE;gBACPM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACdC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;cACtB,CAAE;cACFC,UAAU,EAAE;gBACVC,QAAQ,EAAE,CAAC;gBACXC,MAAM,EAAEC,QAAQ;gBAChBC,IAAI,EAAE;cACR,CAAE;cAAAzB,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbzI,OAAA;cAAKoI,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,SAAO,EAACtG,WAAW;YAAA;cAAAuG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAvBlD,SAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBH,CACb,EAEA9H,SAAS,KAAK,SAAS,iBACtBX,OAAA,CAACJ,MAAM,CAACkJ,GAAG;YAETC,OAAO,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACpCC,OAAO,EAAE;cAAEF,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAE,CAAE;YAClCE,IAAI,EAAE;cAAEH,OAAO,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAI,CAAE;YACjCb,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAEzBrI,OAAA;cAAIoI,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,aAAW,EAAC5G,UAAU,CAACiH,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnEzI,OAAA;cAAKoI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAEjC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNzI,OAAA;cAAKoI,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,SAAO,EAACtG,WAAW;YAAA;cAAAuG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDzI,OAAA;cAAKoI,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BrI,OAAA;gBAAAqI,QAAA,EAAO;cAAsC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA,GAbF,SAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcH,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eAENzI,OAAA;QAAKoI,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BrI,OAAA;UAAKoI,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCrI,OAAA;YAAQ2I,OAAO,EAAEvB,OAAQ;YAACgB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDzI,OAAA;YAAQ2I,OAAO,EAAEtB,QAAS;YAACe,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7DzI,OAAA;YAAQ2I,OAAO,EAAExB,SAAU;YAACiB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eAENzI,OAAA;UAAKoI,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBrI,OAAA;YACE+J,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEjJ,SAAU;YACjBkJ,QAAQ,EAAGC,CAAC,IAAKlJ,YAAY,CAACuD,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEyF,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE;YAC1ElF,GAAG,EAAC,GAAG;YACPJ,GAAG,EAAEzD,OAAQ;YACbmH,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENzI,OAAA;UAAKoI,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrI,OAAA;YAAQoI,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,CAAC,CAAE;YAAAe,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/DzI,OAAA;YAAQoI,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,CAAC,CAAE;YAAAe,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/DzI,OAAA;YAAQoI,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,EAAE,CAAE;YAAAe,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjEzI,OAAA;YAAQoI,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,EAAE,CAAE;YAAAe,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjEzI,OAAA;YAAQoI,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,GAAG,CAAE;YAAAe,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnEzI,OAAA;YAAQoI,SAAS,EAAC,MAAM;YAACO,OAAO,EAAEnB,SAAU;YAAAa,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzDzI,OAAA;YAAQoI,SAAS,EAAC,cAAc;YAACO,OAAO,EAAElB,QAAS;YAAAY,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eAENzI,OAAA;UAAKoI,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC5B,CAAClH,WAAW,IAAIR,SAAS,KAAK,SAAS,iBACtCX,OAAA;YAAQ2I,OAAO,EAAEtD,QAAS;YAAC+C,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,aACxC,EAACtH,SAAS;UAAA;YAAAuH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACT,EAEAtH,WAAW,IAAIR,SAAS,KAAK,SAAS,iBACrCX,OAAA;YAAQ2I,OAAO,EAAEjD,OAAQ;YAAC0C,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,WACvC,EAAC,CAACtH,SAAS,GAAGF,UAAU,EAAE6H,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CACT,EAEA,CAACtH,WAAW,IAAIR,SAAS,KAAK,SAAS,KACtCsB,WAAW,gBACTjC,OAAA;YAAKoI,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BrI,OAAA;cAAMoI,SAAS,EAAC,cAAc;cAAAC,QAAA,GAAC,UAAQ,EAAClG,eAAe,EAAC,iBAAe;YAAA;cAAAmG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9EzI,OAAA;cAAQ2I,OAAO,EAAEhB,eAAgB;cAACS,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC,gBAENzI,OAAA;YAAQ2I,OAAO,EAAEjB,oBAAqB;YAACU,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,SACxD,EAACtH,SAAS,EAAC,iBACpB;UAAA;YAAAuH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENzI,OAAA;UAAKoI,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrI,OAAA;YAAKoI,SAAS,EAAC,cAAc;YAAAC,QAAA,GAAC,eACf,EAACxG,gBAAgB,CAAC6G,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI,EAAE,CAAC3H,SAAS,GAAGc,gBAAgB,EAAE6G,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC,eACNzI,OAAA;YAAKoI,SAAS,EAAE,cAAcjH,WAAW,GAAG,QAAQ,GAAGc,WAAW,GAAG,QAAQ,GAAG,MAAM,EAAG;YAAAoG,QAAA,EACtFlH,WAAW,gBACVnB,OAAA,CAAAE,SAAA;cAAAmI,QAAA,GAAE,kBAAgB,EAACtG,WAAW;YAAA,eAAG,CAAC,GAChCE,WAAW,gBACbjC,OAAA,CAAAE,SAAA;cAAAmI,QAAA,GAAE,UAAQ,EAAClG,eAAe,EAAC,iBAAe;YAAA,eAAE,CAAC,gBAE7CnC,OAAA,CAAAE,SAAA;cAAAmI,QAAA,EAAE;YAAa,gBAAE;UAClB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzI,OAAA;QAAKoI,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCrI,OAAA;UAAOoI,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACnCrI,OAAA;YACE+J,IAAI,EAAC,UAAU;YACfM,OAAO,EAAE1I,aAAc;YACvBsI,QAAQ,EAAGC,CAAC,IAAKtI,gBAAgB,CAACsI,CAAC,CAACE,MAAM,CAACC,OAAO;UAAE;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,mBAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRzI,OAAA;UACE+J,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEnI,gBAAiB;UACxBoI,QAAQ,EAAGC,CAAC,IAAKpI,mBAAmB,CAACwI,UAAU,CAACJ,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,IAAI,CAAE;UACzElF,GAAG,EAAC,MAAM;UACVyF,IAAI,EAAC,MAAM;UACXnC,SAAS,EAAC;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACFzI,OAAA;UAAAqI,QAAA,EAAM;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzI,OAAA;MAAKoI,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BrI,OAAA;QAAAqI,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBzI,OAAA;QAAKoI,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BhH,WAAW,CAAC4D,GAAG,CAAC,CAAC8B,MAAM,EAAEyD,KAAK,kBAC7BxK,OAAA;UAEEoI,SAAS,EAAE,gBAAgBrB,MAAM,IAAI,CAAC,GAAG,OAAO,GAAGA,MAAM,IAAI,GAAG,GAAG,QAAQ,GAAG,KAAK,EAAG;UAAAsB,QAAA,GAErFtB,MAAM,CAAC2B,OAAO,CAAC,CAAC,CAAC,EAAC,GACrB;QAAA,GAJO8B,KAAK;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzI,OAAA;MAAKoI,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BrI,OAAA;QAAAqI,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBzI,OAAA;QAAKoI,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCrI,OAAA;UAAKoI,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCrI,OAAA;YAAAqI,QAAA,EAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClBzI,OAAA;YAAAqI,QAAA,EAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClBzI,OAAA;YAAAqI,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpBzI,OAAA;YAAAqI,QAAA,EAAM;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnBzI,OAAA;YAAAqI,QAAA,EAAM;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACLpG,UAAU,CAACkH,MAAM,KAAK,CAAC,iBACtBvJ,OAAA;UAAKoI,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACpD,EACApG,UAAU,CAAC4C,GAAG,CAAC,CAACwF,CAAC,EAAEC,CAAC;UAAA,IAAAC,OAAA;UAAA,oBACnB3K,OAAA;YAAKoI,SAAS,EAAE,mBAAmBqC,CAAC,CAAC1D,MAAM,KAAK,SAAS,GAAG,KAAK,GAAG,MAAM,EAAG;YAAAsB,QAAA,gBAC3ErI,OAAA;cAAAqI,QAAA,GAAM,GAAC,EAACoC,CAAC,CAAC3D,KAAK,MAAA6D,OAAA,GAAIF,CAAC,CAAC3G,IAAI,cAAA6G,OAAA,uBAANA,OAAA,CAAQ5G,YAAY;YAAA;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/CzI,OAAA;cAAAqI,QAAA,GAAM,GAAC,EAACuC,MAAM,CAACH,CAAC,CAAClF,MAAM,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CzI,OAAA;cAAAqI,QAAA,EAAOoC,CAAC,CAAC1D,MAAM,KAAK,SAAS,GAAG,GAAG6D,MAAM,CAACH,CAAC,CAACI,kBAAkB,IAAIJ,CAAC,CAACzD,iBAAiB,CAAC,CAAC0B,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;YAAS;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxHzI,OAAA;cAAAqI,QAAA,GAAM,GAAC,EAACuC,MAAM,CAACH,CAAC,CAACxD,MAAM,CAAC,CAACyB,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CzI,OAAA;cAAMoI,SAAS,EAAC,QAAQ;cAAAC,QAAA,EAAE,GAAGoC,CAAC,CAACvD,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG0D,MAAM,CAACH,CAAC,CAACvD,MAAM,CAAC,CAACwB,OAAO,CAAC,CAAC,CAAC;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GALZiC,CAAC;YAAApC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAM/E,CAAC;QAAA,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzI,OAAA;MAAKoI,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBrI,OAAA;QAAAqI,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBzI,OAAA;QAAAqI,QAAA,gBACErI,OAAA;UAAAqI,QAAA,EAAI;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CzI,OAAA;UAAAqI,QAAA,EAAI;QAAwC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDzI,OAAA;UAAAqI,QAAA,EAAI;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3CzI,OAAA;UAAAqI,QAAA,EAAI;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACLzI,OAAA;QAAKoI,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BrI,OAAA;UAAAqI,QAAA,EAAQ;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,uEACpC,EAAC9F,WAAW,iBACV3C,OAAA;UAAKoI,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BrI,OAAA;YAAAqI,QAAA,gBAAGrI,OAAA;cAAAqI,QAAA,EAAQ;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC9F,WAAW,CAACiG,IAAI;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5DzI,OAAA;YAAAqI,QAAA,gBAAGrI,OAAA;cAAAqI,QAAA,EAAQ;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC9F,WAAW,CAACmI,uBAAuB,EAAC,KAAG,EAACnI,WAAW,CAACoI,eAAe,EAAC,MAAI,EAACpI,WAAW,CAACqI,eAAe,EAAC,IAAE;UAAA;YAAA1C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC7IzI,OAAA;YAAAqI,QAAA,gBAAGrI,OAAA;cAAAqI,QAAA,EAAQ;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC9F,WAAW,CAACsI,cAAc,EAAC,MAAI,EAACtI,WAAW,CAACuI,cAAc,EAAC,GAAC;UAAA;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAChG9F,WAAW,CAACyG,iBAAiB,iBAC5BpJ,OAAA;YAAAqI,QAAA,gBAAGrI,OAAA;cAAAqI,QAAA,EAAQ;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC,EAAA/H,sBAAA,GAAAiC,WAAW,CAAC0G,mBAAmB,cAAA3I,sBAAA,uBAA/BA,sBAAA,CAAiC4I,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,KAAI,CAAC,EAAC,6BAA2B;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC3H;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjI,EAAA,CA/mBID,OAAO;AAAA4K,EAAA,GAAP5K,OAAO;AAinBb,eAAeA,OAAO;AAAC,IAAA4K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}